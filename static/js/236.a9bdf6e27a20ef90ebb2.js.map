{"version":3,"sources":["webpack:///static/js/236.a9bdf6e27a20ef90ebb2.js","webpack:///./command/netstat.md?adc8","webpack:///./command/netstat.md","webpack:///./command/netstat.md?6dac"],"names":["webpackJsonp","1315","module","exports","render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","_v","pre","attrs","v-pre","href","title","317","__webpack_require__","905","Component"],"mappings":"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","file":"static/js/236.a9bdf6e27a20ef90ebb2.js","sourcesContent":["webpackJsonp([236],{\n\n/***/ 1315:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"netstat命令\")]), _vm._v(\"用来打印Linux中网络系统的状态信息，可让你得知整个Linux系统的网络情况。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"netstat(选项)\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-a或--all：显示所有连线中的Socket；\\n-A<网络类型>或--<网络类型>：列出该网络类型连线中的相关地址；\\n-c或--continuous：持续列出网络状态；\\n-C或--cache：显示路由器配置的快取信息；\\n-e或--extend：显示网络其他相关信息；\\n-F或--fib：显示FIB；\\n-g或--[groups](#/groups \\\"groups命令\\\")：显示多重广播功能群组组员名单；\\n-h或--[help](#/help \\\"help命令\\\")：在线帮助；\\n-i或--interfaces：显示网络界面信息表单；\\n-l或--listening：显示监控中的服务器的Socket；\\n-M或--masquerade：显示伪装的网络连线；\\n-n或--numeric：直接使用[ip](#/ip \\\"ip命令\\\")地址，而不通过域名服务器；\\n-N或--netlink或--symbolic：显示网络硬件外围设备的符号连接名称；\\n-o或--timers：显示计时器；\\n-p或--programs：显示正在使用Socket的程序识别码和程序名称；\\n-r或--[route](#/route \\\"route命令\\\")：显示Routing Table；\\n-s或--statistice：显示网络工作信息统计表；\\n-t或--tcp：显示TCP传输协议的连线状况；\\n-u或--udp：显示UDP传输协议的连线状况；\\n-v或--verbose：显示指令执行过程；\\n-V或--version：显示版本信息；\\n-[w](#/w \\\"w命令\\\")或--raw：显示RAW传输协议的连线状况；\\n-x或--unix：此参数的效果和指定\\\"-A unix\\\"参数相同；\\n--ip或--inet：此参数的效果和指定\\\"-A inet\\\"参数相同。\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"列出所有端口 (包括监听和未监听的)\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"netstat -a     #列出所有端口\\nnetstat -[at](#/at \\\"at命令\\\")    #列出所有tcp端口\\nnetstat -au    #列出所有udp端口                             \\n\")])]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"列出所有处于监听状态的 Sockets\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"netstat -l        #只显示监听端口\\nnetstat -lt       #只列出所有监听 tcp 端口\\nnetstat -lu       #只列出所有监听 udp 端口\\nnetstat -lx       #只列出所有监听 UNIX 端口\\n\")])]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"显示每个协议的统计信息\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"netstat -s   显示所有端口的统计信息\\nnetstat -st   显示TCP端口的统计信息\\nnetstat -[su](#/su \\\"su命令\\\")   显示UDP端口的统计信息\\n\\n\")])]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"在netstat输出中显示 PID 和进程名称\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"netstat -pt\\n\")])]), _vm._v(\" \"), _c('p', [_c('code', {\n    pre: true\n  }, [_vm._v(\"netstat -p\")]), _vm._v(\"可以与其它开关一起使用，就可以添加“PID/进程名称”到netstat输出中，这样debugging的时候可以很方便的发现特定端口运行的程序。\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"在netstat输出中不显示主机，端口和用户名(\"), _c('a', {\n    attrs: {\n      \"href\": \"#/host\",\n      \"title\": \"host命令\"\n    }\n  }, [_vm._v(\"host\")]), _vm._v(\", port or user)\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"当你不想让主机，端口和用户名显示，使用\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"netstat -n\")]), _vm._v(\"。将会使用数字代替那些名称。同样可以加速输出，因为不用进行比对查询。\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"netstat -an\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"如果只是不想让这三个名称中的一个被显示，使用以下命令:\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"netsat -a --numeric-ports\\nnetsat -a --numeric-hosts\\nnetsat -a --numeric-[users](#/users \\\"users命令\\\")\\n\")])]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"持续输出netstat信息\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"netstat -c   #每隔一秒输出网络信息\\n\")])]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"显示系统不支持的地址族(Address Families)\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"netstat --verbose\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"在输出的末尾，会有如下的信息：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"netstat: no support for `AF IPX' on this system.\\nnetstat: no support for `AF AX25' on this system.\\nnetstat: no support for `AF X25' on this system.\\nnetstat: no support for `AF NETROM' on this system.\\n\")])]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"显示核心路由信息\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"netstat -r\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"使用\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"netstat -rn\")]), _vm._v(\"显示数字格式，不查询主机名称。\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"找出程序运行的端口\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"并不是所有的进程都能找到，没有权限的会不显示，使用 root 权限查看所有的信息。\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"netstat -ap | [grep](#/grep \\\"grep命令\\\") [ssh](#/ssh \\\"ssh命令\\\")\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"找出运行在指定端口的进程：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"netstat -an | grep ':80'\\n\")])]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"显示网络接口列表\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"netstat -i\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"显示详细信息，像是\"), _c('a', {\n    attrs: {\n      \"href\": \"#/ifconfig\",\n      \"title\": \"ifconfig命令\"\n    }\n  }, [_vm._v(\"ifconfig\")]), _vm._v(\"使用\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"netstat -ie\")]), _vm._v(\"。\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"IP和TCP分析\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"查看连接某服务端口最多的的IP地址：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"netstat -ntu | grep :80 | [awk](#/awk \\\"awk命令\\\") '{print $5}' | [cut](#/cut \\\"cut命令\\\") -d: -f1 | awk '{++ip[$1]} END {for(i in ip) print ip[i],\\\"\\\\t\\\",i}' | [sort](#/sort \\\"sort命令\\\") -nr\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"TCP各种状态列表：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"netstat -nt | grep -e 127.0.0.1 -e 0.0.0.0 -e ::: -v | awk '/^tcp/ {++state[$NF]} END {for(i in state) print i,\\\"\\\\t\\\",state[i]}'\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"查看phpcgi进程数，如果接近预设值，说明不够用，需要增加：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"netstat -anpo | grep \\\"[php](#/php \\\"php命令\\\")-cgi\\\" | [wc](#/wc \\\"wc命令\\\") -l\\n\")])])])\n}]}\n\n/***/ }),\n\n/***/ 317:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(905);\n\n/***/ }),\n\n/***/ 905:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(5)(\n  /* script */\n  null,\n  /* template */\n  __webpack_require__(1315),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/236.a9bdf6e27a20ef90ebb2.js","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"netstat命令\")]), _vm._v(\"用来打印Linux中网络系统的状态信息，可让你得知整个Linux系统的网络情况。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"netstat(选项)\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-a或--all：显示所有连线中的Socket；\\n-A<网络类型>或--<网络类型>：列出该网络类型连线中的相关地址；\\n-c或--continuous：持续列出网络状态；\\n-C或--cache：显示路由器配置的快取信息；\\n-e或--extend：显示网络其他相关信息；\\n-F或--fib：显示FIB；\\n-g或--[groups](#/groups \\\"groups命令\\\")：显示多重广播功能群组组员名单；\\n-h或--[help](#/help \\\"help命令\\\")：在线帮助；\\n-i或--interfaces：显示网络界面信息表单；\\n-l或--listening：显示监控中的服务器的Socket；\\n-M或--masquerade：显示伪装的网络连线；\\n-n或--numeric：直接使用[ip](#/ip \\\"ip命令\\\")地址，而不通过域名服务器；\\n-N或--netlink或--symbolic：显示网络硬件外围设备的符号连接名称；\\n-o或--timers：显示计时器；\\n-p或--programs：显示正在使用Socket的程序识别码和程序名称；\\n-r或--[route](#/route \\\"route命令\\\")：显示Routing Table；\\n-s或--statistice：显示网络工作信息统计表；\\n-t或--tcp：显示TCP传输协议的连线状况；\\n-u或--udp：显示UDP传输协议的连线状况；\\n-v或--verbose：显示指令执行过程；\\n-V或--version：显示版本信息；\\n-[w](#/w \\\"w命令\\\")或--raw：显示RAW传输协议的连线状况；\\n-x或--unix：此参数的效果和指定\\\"-A unix\\\"参数相同；\\n--ip或--inet：此参数的效果和指定\\\"-A inet\\\"参数相同。\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"列出所有端口 (包括监听和未监听的)\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"netstat -a     #列出所有端口\\nnetstat -[at](#/at \\\"at命令\\\")    #列出所有tcp端口\\nnetstat -au    #列出所有udp端口                             \\n\")])]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"列出所有处于监听状态的 Sockets\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"netstat -l        #只显示监听端口\\nnetstat -lt       #只列出所有监听 tcp 端口\\nnetstat -lu       #只列出所有监听 udp 端口\\nnetstat -lx       #只列出所有监听 UNIX 端口\\n\")])]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"显示每个协议的统计信息\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"netstat -s   显示所有端口的统计信息\\nnetstat -st   显示TCP端口的统计信息\\nnetstat -[su](#/su \\\"su命令\\\")   显示UDP端口的统计信息\\n\\n\")])]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"在netstat输出中显示 PID 和进程名称\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"netstat -pt\\n\")])]), _vm._v(\" \"), _c('p', [_c('code', {\n    pre: true\n  }, [_vm._v(\"netstat -p\")]), _vm._v(\"可以与其它开关一起使用，就可以添加“PID/进程名称”到netstat输出中，这样debugging的时候可以很方便的发现特定端口运行的程序。\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"在netstat输出中不显示主机，端口和用户名(\"), _c('a', {\n    attrs: {\n      \"href\": \"#/host\",\n      \"title\": \"host命令\"\n    }\n  }, [_vm._v(\"host\")]), _vm._v(\", port or user)\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"当你不想让主机，端口和用户名显示，使用\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"netstat -n\")]), _vm._v(\"。将会使用数字代替那些名称。同样可以加速输出，因为不用进行比对查询。\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"netstat -an\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"如果只是不想让这三个名称中的一个被显示，使用以下命令:\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"netsat -a --numeric-ports\\nnetsat -a --numeric-hosts\\nnetsat -a --numeric-[users](#/users \\\"users命令\\\")\\n\")])]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"持续输出netstat信息\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"netstat -c   #每隔一秒输出网络信息\\n\")])]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"显示系统不支持的地址族(Address Families)\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"netstat --verbose\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"在输出的末尾，会有如下的信息：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"netstat: no support for `AF IPX' on this system.\\nnetstat: no support for `AF AX25' on this system.\\nnetstat: no support for `AF X25' on this system.\\nnetstat: no support for `AF NETROM' on this system.\\n\")])]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"显示核心路由信息\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"netstat -r\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"使用\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"netstat -rn\")]), _vm._v(\"显示数字格式，不查询主机名称。\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"找出程序运行的端口\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"并不是所有的进程都能找到，没有权限的会不显示，使用 root 权限查看所有的信息。\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"netstat -ap | [grep](#/grep \\\"grep命令\\\") [ssh](#/ssh \\\"ssh命令\\\")\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"找出运行在指定端口的进程：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"netstat -an | grep ':80'\\n\")])]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"显示网络接口列表\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"netstat -i\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"显示详细信息，像是\"), _c('a', {\n    attrs: {\n      \"href\": \"#/ifconfig\",\n      \"title\": \"ifconfig命令\"\n    }\n  }, [_vm._v(\"ifconfig\")]), _vm._v(\"使用\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"netstat -ie\")]), _vm._v(\"。\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"IP和TCP分析\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"查看连接某服务端口最多的的IP地址：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"netstat -ntu | grep :80 | [awk](#/awk \\\"awk命令\\\") '{print $5}' | [cut](#/cut \\\"cut命令\\\") -d: -f1 | awk '{++ip[$1]} END {for(i in ip) print ip[i],\\\"\\\\t\\\",i}' | [sort](#/sort \\\"sort命令\\\") -nr\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"TCP各种状态列表：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"netstat -nt | grep -e 127.0.0.1 -e 0.0.0.0 -e ::: -v | awk '/^tcp/ {++state[$NF]} END {for(i in state) print i,\\\"\\\\t\\\",state[i]}'\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"查看phpcgi进程数，如果接近预设值，说明不够用，需要增加：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"netstat -anpo | grep \\\"[php](#/php \\\"php命令\\\")-cgi\\\" | [wc](#/wc \\\"wc命令\\\") -l\\n\")])])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-344b422b\",\"hasScoped\":false}!./~/vue-loader/lib/selector.js?type=template&index=0!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/netstat.md\n// module id = 1315\n// module chunks = 236","module.exports = require(\"!!vue-loader!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./netstat.md\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./command/netstat.md\n// module id = 317\n// module chunks = 236","var Component = require(\"!../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  null,\n  /* template */\n  require(\"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-344b422b\\\",\\\"hasScoped\\\":false}!../node_modules/vue-loader/lib/selector?type=template&index=0!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./netstat.md\"),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/netstat.md\n// module id = 905\n// module chunks = 236"],"sourceRoot":""}