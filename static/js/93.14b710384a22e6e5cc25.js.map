{"version":3,"sources":["webpack:///static/js/93.14b710384a22e6e5cc25.js","webpack:///./command/talk.md?963c","webpack:///./command/talk.md?ab99","webpack:///./command/talk.md"],"names":["webpackJsonp","1051","module","exports","__webpack_require__","Component","1622","render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","_v","pre","attrs","v-pre","href","title","463"],"mappings":"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","file":"static/js/93.14b710384a22e6e5cc25.js","sourcesContent":["webpackJsonp([93],{\n\n/***/ 1051:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(5)(\n  /* script */\n  null,\n  /* template */\n  __webpack_require__(1622),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 1622:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"talk命令\")]), _vm._v(\"是talk服务器的客户端工具，通过talk命令可以让用户和其他用户聊天。linux中talk命令参数程序的使用很简单，只要知道交谈对象的地址，就可以邀请对方交谈。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"talk(参数)\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"参数\")]), _vm._v(\" \"), _c('ul', [_c('li', [_vm._v(\"用户：指定聊天的用户；\")]), _vm._v(\" \"), _c('li', [_vm._v(\"终端：指定用户的终端。\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('p', [_vm._v(\"例如登录在主机rs6000.cic.\"), _c('a', {\n    attrs: {\n      \"href\": \"#/test\",\n      \"title\": \"test命令\"\n    }\n  }, [_vm._v(\"test\")]), _vm._v(\".com上的用户jdx希望和登录在主机tirc.cs.test.com上的用户wangxz进行交谈，则可以输入下面的命令：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"talk wangxz@tirc.cs.test.com\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"Internet上的相关程序（Talk Daemon）就会传送一条信息邀请wangxz来交谈，这时用户wangxz的屏幕上就会出现如下信息，并响铃提示：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"Message from Talk_Daemon@tirc.cs.test.com [at](#/at \\\"at命令\\\") 21:44 …\\ntalk: connection requested by jdx@rs6000.cic.test.com\\ntalk: respond with:  talk jdx@rs6000.cic.test.com\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"这时，用户wangxz应该做的工作就是按照上面的信息提示，即输入linux中talk命令：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"talk jdx@rs6000.cic.test.com\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"之后，连接建立成功，两个用户就可以进行交谈了。这时，双方的终端屏幕上都将显示信息**[Connection established]**并响铃，同时屏幕被linux中talk命令程序以一条水平线分割为上下两部分，上半部分用来显示用户自己输入的内容，下半部分用来显示对方输入的内容。两个用户可以同时输入，他们输入的内容将会立即显示在双方的屏幕上。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"在用户进行输入时，可按\"), _c('strong', [_vm._v(\"BACKSPACE\")]), _vm._v(\"见来更正前一个字符，也可按\"), _c('strong', [_vm._v(\"CTRL+\"), _c('a', {\n    attrs: {\n      \"href\": \"#/w\",\n      \"title\": \"w命令\"\n    }\n  }, [_vm._v(\"w\")]), _c('strong', [_vm._v(\"来删除一个完整的单词，或者用\")]), _vm._v(\"CTRL+U\")]), _vm._v(\"来删除一整行，另外，用户还可以通过按\"), _c('strong', [_vm._v(\"CTRL+L\")]), _vm._v(\"来刷新屏幕。如果要结束交谈，可由任何一方按下\"), _c('strong', [_vm._v(\"CTRL+C\")]), _vm._v(\"来中断连接，但在结束对话前最好道声“再见”，并等待对方回应。linux中talk命令程序结束时，在屏幕上将回显示一条信息：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[Connection closing. Exiting]\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"并非每次要求对方交谈都能成功，有时对方没有登录，则linux中talk命令程序提示信息：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[Your party is not logged on]\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"并退出；如果对方已登录，但因某种原因（如不是正在使用机器）没有响应，那么linux中talk命令程序将会每隔10秒钟给他发一条邀请信息，同时在自己的屏幕上显示：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[Ringing your party again]\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"如果用户不愿等待，则可以按\"), _c('strong', [_vm._v(\"CTRL+C\")]), _vm._v(\"终止linux中talk命令程序。还有的时候系统可能出现下面的信息：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[Checking for invitation on caller’s machine]\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"这说明双方的linux中talk命令程序不兼容，这时可以试试ntalk和ytalk命令，如果没有，就只好找系统管理员了。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"如果用户在做某些紧急工作（如编辑邮件）时不希望被linux中talk命令的邀请打搅，他可以使用命令：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[mesg](#/mesg \\\"mesg命令\\\") n\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"来暂时拒绝交谈，这时如果有用户邀请他交谈，只能得到提示信息：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[Your party is refusing messages]\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"不过要注意的是，一旦完成紧急工作。最好立即打开信息接收开关（用命令\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"mesg y\")]), _vm._v(\"），否则将会失去很多信息交流的机会。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"以上是linux中talk命令参数的是使用方法。\")])])\n}]}\n\n/***/ }),\n\n/***/ 463:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(1051);\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/93.14b710384a22e6e5cc25.js","var Component = require(\"!../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  null,\n  /* template */\n  require(\"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-c3f8e2fc\\\",\\\"hasScoped\\\":false}!../node_modules/vue-loader/lib/selector?type=template&index=0!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./talk.md\"),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/talk.md\n// module id = 1051\n// module chunks = 93","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"talk命令\")]), _vm._v(\"是talk服务器的客户端工具，通过talk命令可以让用户和其他用户聊天。linux中talk命令参数程序的使用很简单，只要知道交谈对象的地址，就可以邀请对方交谈。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"talk(参数)\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"参数\")]), _vm._v(\" \"), _c('ul', [_c('li', [_vm._v(\"用户：指定聊天的用户；\")]), _vm._v(\" \"), _c('li', [_vm._v(\"终端：指定用户的终端。\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('p', [_vm._v(\"例如登录在主机rs6000.cic.\"), _c('a', {\n    attrs: {\n      \"href\": \"#/test\",\n      \"title\": \"test命令\"\n    }\n  }, [_vm._v(\"test\")]), _vm._v(\".com上的用户jdx希望和登录在主机tirc.cs.test.com上的用户wangxz进行交谈，则可以输入下面的命令：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"talk wangxz@tirc.cs.test.com\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"Internet上的相关程序（Talk Daemon）就会传送一条信息邀请wangxz来交谈，这时用户wangxz的屏幕上就会出现如下信息，并响铃提示：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"Message from Talk_Daemon@tirc.cs.test.com [at](#/at \\\"at命令\\\") 21:44 …\\ntalk: connection requested by jdx@rs6000.cic.test.com\\ntalk: respond with:  talk jdx@rs6000.cic.test.com\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"这时，用户wangxz应该做的工作就是按照上面的信息提示，即输入linux中talk命令：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"talk jdx@rs6000.cic.test.com\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"之后，连接建立成功，两个用户就可以进行交谈了。这时，双方的终端屏幕上都将显示信息**[Connection established]**并响铃，同时屏幕被linux中talk命令程序以一条水平线分割为上下两部分，上半部分用来显示用户自己输入的内容，下半部分用来显示对方输入的内容。两个用户可以同时输入，他们输入的内容将会立即显示在双方的屏幕上。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"在用户进行输入时，可按\"), _c('strong', [_vm._v(\"BACKSPACE\")]), _vm._v(\"见来更正前一个字符，也可按\"), _c('strong', [_vm._v(\"CTRL+\"), _c('a', {\n    attrs: {\n      \"href\": \"#/w\",\n      \"title\": \"w命令\"\n    }\n  }, [_vm._v(\"w\")]), _c('strong', [_vm._v(\"来删除一个完整的单词，或者用\")]), _vm._v(\"CTRL+U\")]), _vm._v(\"来删除一整行，另外，用户还可以通过按\"), _c('strong', [_vm._v(\"CTRL+L\")]), _vm._v(\"来刷新屏幕。如果要结束交谈，可由任何一方按下\"), _c('strong', [_vm._v(\"CTRL+C\")]), _vm._v(\"来中断连接，但在结束对话前最好道声“再见”，并等待对方回应。linux中talk命令程序结束时，在屏幕上将回显示一条信息：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[Connection closing. Exiting]\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"并非每次要求对方交谈都能成功，有时对方没有登录，则linux中talk命令程序提示信息：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[Your party is not logged on]\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"并退出；如果对方已登录，但因某种原因（如不是正在使用机器）没有响应，那么linux中talk命令程序将会每隔10秒钟给他发一条邀请信息，同时在自己的屏幕上显示：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[Ringing your party again]\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"如果用户不愿等待，则可以按\"), _c('strong', [_vm._v(\"CTRL+C\")]), _vm._v(\"终止linux中talk命令程序。还有的时候系统可能出现下面的信息：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[Checking for invitation on caller’s machine]\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"这说明双方的linux中talk命令程序不兼容，这时可以试试ntalk和ytalk命令，如果没有，就只好找系统管理员了。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"如果用户在做某些紧急工作（如编辑邮件）时不希望被linux中talk命令的邀请打搅，他可以使用命令：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[mesg](#/mesg \\\"mesg命令\\\") n\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"来暂时拒绝交谈，这时如果有用户邀请他交谈，只能得到提示信息：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[Your party is refusing messages]\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"不过要注意的是，一旦完成紧急工作。最好立即打开信息接收开关（用命令\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"mesg y\")]), _vm._v(\"），否则将会失去很多信息交流的机会。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"以上是linux中talk命令参数的是使用方法。\")])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-c3f8e2fc\",\"hasScoped\":false}!./~/vue-loader/lib/selector.js?type=template&index=0!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/talk.md\n// module id = 1622\n// module chunks = 93","module.exports = require(\"!!vue-loader!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./talk.md\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./command/talk.md\n// module id = 463\n// module chunks = 93"],"sourceRoot":""}