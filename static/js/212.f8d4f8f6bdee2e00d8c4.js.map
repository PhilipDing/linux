{"version":3,"sources":["webpack:///static/js/212.f8d4f8f6bdee2e00d8c4.js","webpack:///./command/pfctl.md?951f","webpack:///./command/pfctl.md","webpack:///./command/pfctl.md?cfdf"],"names":["webpackJsonp","1268","module","exports","render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","_v","attrs","href","title","pre","v-pre","342","__webpack_require__","931","Component"],"mappings":"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","file":"static/js/212.f8d4f8f6bdee2e00d8c4.js","sourcesContent":["webpackJsonp([212],{\n\n/***/ 1268:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"pfctl命令\")]), _vm._v(\"是PF防火墙的配置命令，PF防火墙( 全称：Packet Filter )是UNIX LIKE系统上进行TCP/\"), _c('a', {\n    attrs: {\n      \"href\": \"#/ip\",\n      \"title\": \"ip命令\"\n    }\n  }, [_vm._v(\"ip\")]), _vm._v(\"流量过滤和网络地址转换的软件系统。PF同样也能提供TCP/IP流量的整形和控制，并且提供带宽控制和数据包优先集控制。PF最早是由Daniel Hartmeier开发的，现在的开发和维护由Daniel和openBSD小组的其他成员负责。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"PF防火墙的功能很多，本站只列举一些基本配置。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"激活\")]), _vm._v(\" \"), _c('p', [_vm._v(\"要激活pf并且使它在启动时调用配置文件，编辑\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"/etc/rc.conf\")]), _vm._v(\"文件，修改配置pf的一行：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"pf=[yes](#/yes \\\"yes命令\\\")\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"重启操作系统让配置生效。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"也可以通过pfctl程序启动和停止pf：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"# pfctl -e\\n# pfctl -d\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"注意这仅仅是启动和关闭PF，实际它不会载入规则集，规则集要么在系统启动时载入，要在PF启动后通过命令单独载入。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"配置\")]), _vm._v(\" \"), _c('p', [_vm._v(\"系统引导到在rc脚本文件运行PF时PF从\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"/etc/pf.conf\")]), _vm._v(\"文件载入配置规则。注意当\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"/etc/pf.conf\")]), _vm._v(\"文件是默认配置文件，在系统调用rc脚本文件时，它仅仅是作为文本文件由pfctl装入并解释和插入pf的。对于一些应用来说，其他的规则集可以在系统引导后由其他文件载入。对于一些设计的非常好的unix程序，PF提供了足够的灵活性。\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"pf.conf文件有7个部分：\")])]), _vm._v(\" \"), _c('ol', [_c('li', [_vm._v(\"宏：用户定义的变量，包括IP地址，接口名称等等。\")]), _vm._v(\" \"), _c('li', [_vm._v(\"表：一种用来保存IP地址列表的结构。\")]), _vm._v(\" \"), _c('li', [_vm._v(\"选项：控制PF如何工作的变量。\")]), _vm._v(\" \"), _c('li', [_vm._v(\"整形：重新处理数据包，进行正常化和碎片整理。\")]), _vm._v(\" \"), _c('li', [_vm._v(\"排队：提供带宽控制和数据包优先级控制。\")]), _vm._v(\" \"), _c('li', [_vm._v(\"转换：控制网络地址转换和数据包重定向。\")]), _vm._v(\" \"), _c('li', [_vm._v(\"过滤规则：在数据包通过接口时允许进行选择性的过滤和阻止。\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"除去宏和表，其他的段在配置文件中也应该按照这个顺序出现，尽管对于一些特定的应用并不是所有的段都是必须的。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"空行会被忽略，以#开头的行被认为是注释。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"控制\")]), _vm._v(\" \"), _c('p', [_vm._v(\"引导之后，PF可以通过pfctl程序进行操作，以下是一些例子：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"# pfctl -f /etc/pf.conf  载入 pf.conf 文件\\n# pfctl -nf /etc/pf.conf 解析文件，但不载入\\n# pfctl -Nf /etc/pf.conf 只载入文件中的NAT规则\\n# pfctl -Rf /etc/pf.conf 只载入文件中的过滤规则\\n\\n# pfctl -sn 显示当前的NAT规则\\n# pfctl -sr 显示当前的过滤规则\\n# pfctl -[ss](#/ss \\\"ss命令\\\") 显示当前的状态表\\n# pfctl -si 显示过滤状态和计数\\n# pfctl -sa 显示任何可显示的\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"完整的命令列表，请参阅pfctl的\"), _c('a', {\n    attrs: {\n      \"href\": \"#/man\",\n      \"title\": \"man命令\"\n    }\n  }, [_vm._v(\"man\")]), _vm._v(\"手册页。\")])])\n}]}\n\n/***/ }),\n\n/***/ 342:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(931);\n\n/***/ }),\n\n/***/ 931:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(5)(\n  /* script */\n  null,\n  /* template */\n  __webpack_require__(1268),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/212.f8d4f8f6bdee2e00d8c4.js","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"pfctl命令\")]), _vm._v(\"是PF防火墙的配置命令，PF防火墙( 全称：Packet Filter )是UNIX LIKE系统上进行TCP/\"), _c('a', {\n    attrs: {\n      \"href\": \"#/ip\",\n      \"title\": \"ip命令\"\n    }\n  }, [_vm._v(\"ip\")]), _vm._v(\"流量过滤和网络地址转换的软件系统。PF同样也能提供TCP/IP流量的整形和控制，并且提供带宽控制和数据包优先集控制。PF最早是由Daniel Hartmeier开发的，现在的开发和维护由Daniel和openBSD小组的其他成员负责。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"PF防火墙的功能很多，本站只列举一些基本配置。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"激活\")]), _vm._v(\" \"), _c('p', [_vm._v(\"要激活pf并且使它在启动时调用配置文件，编辑\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"/etc/rc.conf\")]), _vm._v(\"文件，修改配置pf的一行：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"pf=[yes](#/yes \\\"yes命令\\\")\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"重启操作系统让配置生效。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"也可以通过pfctl程序启动和停止pf：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"# pfctl -e\\n# pfctl -d\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"注意这仅仅是启动和关闭PF，实际它不会载入规则集，规则集要么在系统启动时载入，要在PF启动后通过命令单独载入。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"配置\")]), _vm._v(\" \"), _c('p', [_vm._v(\"系统引导到在rc脚本文件运行PF时PF从\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"/etc/pf.conf\")]), _vm._v(\"文件载入配置规则。注意当\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"/etc/pf.conf\")]), _vm._v(\"文件是默认配置文件，在系统调用rc脚本文件时，它仅仅是作为文本文件由pfctl装入并解释和插入pf的。对于一些应用来说，其他的规则集可以在系统引导后由其他文件载入。对于一些设计的非常好的unix程序，PF提供了足够的灵活性。\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"pf.conf文件有7个部分：\")])]), _vm._v(\" \"), _c('ol', [_c('li', [_vm._v(\"宏：用户定义的变量，包括IP地址，接口名称等等。\")]), _vm._v(\" \"), _c('li', [_vm._v(\"表：一种用来保存IP地址列表的结构。\")]), _vm._v(\" \"), _c('li', [_vm._v(\"选项：控制PF如何工作的变量。\")]), _vm._v(\" \"), _c('li', [_vm._v(\"整形：重新处理数据包，进行正常化和碎片整理。\")]), _vm._v(\" \"), _c('li', [_vm._v(\"排队：提供带宽控制和数据包优先级控制。\")]), _vm._v(\" \"), _c('li', [_vm._v(\"转换：控制网络地址转换和数据包重定向。\")]), _vm._v(\" \"), _c('li', [_vm._v(\"过滤规则：在数据包通过接口时允许进行选择性的过滤和阻止。\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"除去宏和表，其他的段在配置文件中也应该按照这个顺序出现，尽管对于一些特定的应用并不是所有的段都是必须的。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"空行会被忽略，以#开头的行被认为是注释。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"控制\")]), _vm._v(\" \"), _c('p', [_vm._v(\"引导之后，PF可以通过pfctl程序进行操作，以下是一些例子：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"# pfctl -f /etc/pf.conf  载入 pf.conf 文件\\n# pfctl -nf /etc/pf.conf 解析文件，但不载入\\n# pfctl -Nf /etc/pf.conf 只载入文件中的NAT规则\\n# pfctl -Rf /etc/pf.conf 只载入文件中的过滤规则\\n\\n# pfctl -sn 显示当前的NAT规则\\n# pfctl -sr 显示当前的过滤规则\\n# pfctl -[ss](#/ss \\\"ss命令\\\") 显示当前的状态表\\n# pfctl -si 显示过滤状态和计数\\n# pfctl -sa 显示任何可显示的\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"完整的命令列表，请参阅pfctl的\"), _c('a', {\n    attrs: {\n      \"href\": \"#/man\",\n      \"title\": \"man命令\"\n    }\n  }, [_vm._v(\"man\")]), _vm._v(\"手册页。\")])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-24848935\",\"hasScoped\":false}!./~/vue-loader/lib/selector.js?type=template&index=0!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/pfctl.md\n// module id = 1268\n// module chunks = 212","module.exports = require(\"!!vue-loader!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./pfctl.md\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./command/pfctl.md\n// module id = 342\n// module chunks = 212","var Component = require(\"!../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  null,\n  /* template */\n  require(\"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-24848935\\\",\\\"hasScoped\\\":false}!../node_modules/vue-loader/lib/selector?type=template&index=0!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./pfctl.md\"),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/pfctl.md\n// module id = 931\n// module chunks = 212"],"sourceRoot":""}