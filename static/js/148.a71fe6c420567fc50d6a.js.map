{"version":3,"sources":["webpack:///static/js/148.a71fe6c420567fc50d6a.js","webpack:///./command/sar.md?ebb8","webpack:///./command/sar.md","webpack:///./command/sar.md?e4f8"],"names":["webpackJsonp","1141","module","exports","render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","_v","pre","attrs","v-pre","406","__webpack_require__","995","Component"],"mappings":"AAAAA,cAAc,MAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAgBC,OAAA,WAAmB,GAAAC,GAAAC,KAAaC,EAAAF,EAAAG,cAA0BH,GAAAI,MAAAC,EAC1E,OAAAL,GAAAM,GAAA,IACCC,iBAAA,WAA+B,GAAAP,GAAAC,KAAaC,EAAAF,EAAAG,eAA0BE,EAAAL,EAAAI,MAAAC,IAAAH,CACvE,OAAAG,GAAA,WAAAA,EAAA,KAAAA,EAAA,UAAAL,EAAAQ,GAAA,WAAAR,EAAAQ,GAAA,oJAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACAI,KAAA,IACGJ,EAAA,QACHK,OACAC,QAAA,MAEGX,EAAAQ,GAAA,qBAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHI,KAAA,IACGJ,EAAA,QACHK,OACAC,QAAA,MAEGX,EAAAQ,GAAA,4OAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAA,EAAA,MAAAL,EAAAQ,GAAA,wBAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,mBAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAA,EAAA,UAAAL,EAAAQ,GAAA,sBAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHI,KAAA,IACGJ,EAAA,QACHK,OACAC,QAAA,MAEGX,EAAAQ,GAAA,8aAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,qHAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAA,EAAA,UAAAL,EAAAQ,GAAA,4BAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHI,KAAA,IACGJ,EAAA,QACHK,OACAC,QAAA,MAEGX,EAAAQ,GAAA,iCDUGI,IACA,SAAUf,EAAQC,EAASe,GEtCjChB,EAAAC,QAAAe,EAAA,MF4CMC,IACA,SAAUjB,EAAQC,EAASe,GG7CjC,GAAAE,GAAAF,EAAA,GAEA,KAEAA,EAAA,MAEA,KAEA,KAEA,KAGAhB,GAAAC,QAAAiB,EAAAjB","file":"static/js/148.a71fe6c420567fc50d6a.js","sourcesContent":["webpackJsonp([148],{\n\n/***/ 1141:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"sar命令\")]), _vm._v(\"是Linux下系统运行状态统计工具，它将指定的操作系统状态计数器显示到标准输出设备。sar工具将对系统当前的状态进行取样，然后通过计算数据和比例来表达系统的当前运行状态。它的特点是可以连续对系统取样，获得大量的取样数据。取样数据和分析的结果都可以存入文件，使用它时消耗的系统资源很小。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"sar(选项)(参数)\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-A：显示所有的报告信息；\\n-b：显示I/O速率；\\n-B：显示换页状态；\\n-c：显示进程创建活动；\\n-d：显示每个块设备的状态；\\n-e：设置显示报告的结束时间；\\n-f：从指定文件提取报告；\\n-i：设状态信息刷新的间隔时间；\\n-P：报告每个CPU的状态；\\n-R：显示内存状态；\\n-u：显示CPU利用率；\\n-v：显示索引节点，文件和其他内核表的状态；\\n-[w](#/w \\\"w命令\\\")：显示交换分区状态；\\n-x：显示给定进程的状态。\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"参数\")]), _vm._v(\" \"), _c('ul', [_c('li', [_vm._v(\"间隔时间：每次报告的间隔时间（秒）；\")]), _vm._v(\" \"), _c('li', [_vm._v(\"次数：显示报告的次数。\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"察看内存和交换空间的使用率：\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"sar -r\\nLinux 2.4.20-8 (www.linuxde.net)    20130503  \\n12:00:01 AM kbmemfree kbmemused  %memused \\nkbmemshrd kbbuffers  kbcached  \\n12:10:00 AM    240468   1048252     81.34    \\n0    133724    485772  \\n12:20:00 AM    240508   1048212     81.34   \\n0    134172    485600  \\n…  \\n08:40:00 PM    934132    354588     27.51    \\n0     26080    185364  \\nAverage:       324346    964374     74.83  \\n0     96072    467559 \\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"kbmemfree与kbmemused字段分别显示内存的未使用与已使用空间，后面跟着的是已使用空间的百分比（%memused字段）。kbbuffers与kbcached字段分别显示缓冲区与系统全域的数据存取量，单位为KB。\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"观察系统部件10分钟，并对数据进行排序：\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"sar -o temp 60 10\\n\")])])])\n}]}\n\n/***/ }),\n\n/***/ 406:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(995);\n\n/***/ }),\n\n/***/ 995:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(5)(\n  /* script */\n  null,\n  /* template */\n  __webpack_require__(1141),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/148.a71fe6c420567fc50d6a.js","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"sar命令\")]), _vm._v(\"是Linux下系统运行状态统计工具，它将指定的操作系统状态计数器显示到标准输出设备。sar工具将对系统当前的状态进行取样，然后通过计算数据和比例来表达系统的当前运行状态。它的特点是可以连续对系统取样，获得大量的取样数据。取样数据和分析的结果都可以存入文件，使用它时消耗的系统资源很小。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"sar(选项)(参数)\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-A：显示所有的报告信息；\\n-b：显示I/O速率；\\n-B：显示换页状态；\\n-c：显示进程创建活动；\\n-d：显示每个块设备的状态；\\n-e：设置显示报告的结束时间；\\n-f：从指定文件提取报告；\\n-i：设状态信息刷新的间隔时间；\\n-P：报告每个CPU的状态；\\n-R：显示内存状态；\\n-u：显示CPU利用率；\\n-v：显示索引节点，文件和其他内核表的状态；\\n-[w](#/w \\\"w命令\\\")：显示交换分区状态；\\n-x：显示给定进程的状态。\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"参数\")]), _vm._v(\" \"), _c('ul', [_c('li', [_vm._v(\"间隔时间：每次报告的间隔时间（秒）；\")]), _vm._v(\" \"), _c('li', [_vm._v(\"次数：显示报告的次数。\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"察看内存和交换空间的使用率：\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"sar -r\\nLinux 2.4.20-8 (www.linuxde.net)    20130503  \\n12:00:01 AM kbmemfree kbmemused  %memused \\nkbmemshrd kbbuffers  kbcached  \\n12:10:00 AM    240468   1048252     81.34    \\n0    133724    485772  \\n12:20:00 AM    240508   1048212     81.34   \\n0    134172    485600  \\n…  \\n08:40:00 PM    934132    354588     27.51    \\n0     26080    185364  \\nAverage:       324346    964374     74.83  \\n0     96072    467559 \\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"kbmemfree与kbmemused字段分别显示内存的未使用与已使用空间，后面跟着的是已使用空间的百分比（%memused字段）。kbbuffers与kbcached字段分别显示缓冲区与系统全域的数据存取量，单位为KB。\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"观察系统部件10分钟，并对数据进行排序：\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"sar -o temp 60 10\\n\")])])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-00e8aa96\",\"hasScoped\":false}!./~/vue-loader/lib/selector.js?type=template&index=0!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/sar.md\n// module id = 1141\n// module chunks = 148","module.exports = require(\"!!vue-loader!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./sar.md\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./command/sar.md\n// module id = 406\n// module chunks = 148","var Component = require(\"!../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  null,\n  /* template */\n  require(\"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-00e8aa96\\\",\\\"hasScoped\\\":false}!../node_modules/vue-loader/lib/selector?type=template&index=0!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./sar.md\"),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/sar.md\n// module id = 995\n// module chunks = 148"],"sourceRoot":""}