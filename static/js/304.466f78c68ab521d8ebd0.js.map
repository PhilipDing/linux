{"version":3,"sources":["webpack:///static/js/304.466f78c68ab521d8ebd0.js","webpack:///./command/lha.md?889a","webpack:///./command/lha.md","webpack:///./command/lha.md?86bc"],"names":["webpackJsonp","1238","module","exports","render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","_v","pre","attrs","v-pre","247","__webpack_require__","835","Component"],"mappings":"AAAAA,cAAc,MAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAgBC,OAAA,WAAmB,GAAAC,GAAAC,KAAaC,EAAAF,EAAAG,cAA0BH,GAAAI,MAAAC,EAC1E,OAAAL,GAAAM,GAAA,IACCC,iBAAA,WAA+B,GAAAP,GAAAC,KAAaC,EAAAF,EAAAG,eAA0BE,EAAAL,EAAAI,MAAAC,IAAAH,CACvE,OAAAG,GAAA,WAAAA,EAAA,KAAAA,EAAA,UAAAL,EAAAQ,GAAA,WAAAR,EAAAQ,GAAA,oCAAAH,EAAA,QACAI,KAAA,IACGT,EAAAQ,GAAA,UAAAR,EAAAQ,GAAA,eAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHI,KAAA,IACGJ,EAAA,QACHK,OACAC,QAAA,MAEGX,EAAAQ,GAAA,ysBAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHI,KAAA,IACGJ,EAAA,QACHK,OACAC,QAAA,MAEGX,EAAAQ,GAAA,iJDUGI,IACA,SAAUf,EAAQC,EAASe,GE5BjChB,EAAAC,QAAAe,EAAA,MFkCMC,IACA,SAAUjB,EAAQC,EAASe,GGnCjC,GAAAE,GAAAF,EAAA,GAEA,KAEAA,EAAA,MAEA,KAEA,KAEA,KAGAhB,GAAAC,QAAAiB,EAAAjB","file":"static/js/304.466f78c68ab521d8ebd0.js","sourcesContent":["webpackJsonp([304],{\n\n/***/ 1238:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"lha命令\")]), _vm._v(\"是从lharc演变而来的压缩程序，文件经它压缩后，会另外产生具有\"), _c('code', {\n    pre: true\n  }, [_vm._v(\".lzh\")]), _vm._v(\"扩展名的压缩文件。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-a或a：压缩文件，并加入到压缩文件内。\\n-a<0/1/2>/u</0/1/2>   压缩文件时，采用不同的文件头。\\n-c或c：压缩文件，重新建构新的压缩文件后，再将其加入。\\n-d或d：从压缩文件内删除指定的文件。\\n-<a/c/u>d或<a/c/u>d：压缩文件，然后将其加入，重新建构，更新压缩文件或，删除原始文件，也就是把文件移到压缩文件中。\\n-e或e：解开压缩文件。\\n-f或f：强制执行lha命令，在解压时会直接覆盖已有的文件而不加以询问。\\n-g或g：使用通用的压缩格式，便于解决兼容性的问题。\\n-<e/x>i或<e/x>i：解开压缩文件时，忽略保存在压缩文件内的文件路径，直接将其解压后存放在现行目录下或是指定的目录中。\\n-l或l：列出压缩文件的相关信息。\\n-m或m：此选项的效果和同时指定\\\"-ad\\\"选项相同。\\n-n或n：不执行指令，仅列出实际执行会进行的动作。\\n-<a/u>o或<a/u>o：采用lharc兼容格式，将压缩后的文件加入，更新压缩文件。\\n-p或p：从压缩文件内输出到标准输出设备。\\n-q或q：不显示指令执行过程。\\n-t或t：检查备份文件内的每个文件是否正确无误。\\n-u或u：更换较新的文件到压缩文件内。\\n-u</0/1/2>或u</0/1/2>：在文件压缩时采用不同的文件头，然后更新到压缩文件内。\\n-v或v：详细列出压缩文件的相关信息。\\n-<e/x>[w](#/w \\\"w命令\\\")=<目的目录>或<e/x>w=<目的目录>：指定解压缩的目录。\\n-x或x：解开压缩文件。\\n-<a/u>z或<a/u>z：不压缩文件，直接把它加入，更新压缩文件。\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"lha -a abc.lhz a.b         #压缩a.b文件，压缩后生成 abc.lhz 文件\\nlha -a abc2 /home/hnlinux  #压缩目录\\nlha -xiw=agis abc          #解压文件abc，到当前目录\\n\")])])])\n}]}\n\n/***/ }),\n\n/***/ 247:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(835);\n\n/***/ }),\n\n/***/ 835:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(5)(\n  /* script */\n  null,\n  /* template */\n  __webpack_require__(1238),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/304.466f78c68ab521d8ebd0.js","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"lha命令\")]), _vm._v(\"是从lharc演变而来的压缩程序，文件经它压缩后，会另外产生具有\"), _c('code', {\n    pre: true\n  }, [_vm._v(\".lzh\")]), _vm._v(\"扩展名的压缩文件。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-a或a：压缩文件，并加入到压缩文件内。\\n-a<0/1/2>/u</0/1/2>   压缩文件时，采用不同的文件头。\\n-c或c：压缩文件，重新建构新的压缩文件后，再将其加入。\\n-d或d：从压缩文件内删除指定的文件。\\n-<a/c/u>d或<a/c/u>d：压缩文件，然后将其加入，重新建构，更新压缩文件或，删除原始文件，也就是把文件移到压缩文件中。\\n-e或e：解开压缩文件。\\n-f或f：强制执行lha命令，在解压时会直接覆盖已有的文件而不加以询问。\\n-g或g：使用通用的压缩格式，便于解决兼容性的问题。\\n-<e/x>i或<e/x>i：解开压缩文件时，忽略保存在压缩文件内的文件路径，直接将其解压后存放在现行目录下或是指定的目录中。\\n-l或l：列出压缩文件的相关信息。\\n-m或m：此选项的效果和同时指定\\\"-ad\\\"选项相同。\\n-n或n：不执行指令，仅列出实际执行会进行的动作。\\n-<a/u>o或<a/u>o：采用lharc兼容格式，将压缩后的文件加入，更新压缩文件。\\n-p或p：从压缩文件内输出到标准输出设备。\\n-q或q：不显示指令执行过程。\\n-t或t：检查备份文件内的每个文件是否正确无误。\\n-u或u：更换较新的文件到压缩文件内。\\n-u</0/1/2>或u</0/1/2>：在文件压缩时采用不同的文件头，然后更新到压缩文件内。\\n-v或v：详细列出压缩文件的相关信息。\\n-<e/x>[w](#/w \\\"w命令\\\")=<目的目录>或<e/x>w=<目的目录>：指定解压缩的目录。\\n-x或x：解开压缩文件。\\n-<a/u>z或<a/u>z：不压缩文件，直接把它加入，更新压缩文件。\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"lha -a abc.lhz a.b         #压缩a.b文件，压缩后生成 abc.lhz 文件\\nlha -a abc2 /home/hnlinux  #压缩目录\\nlha -xiw=agis abc          #解压文件abc，到当前目录\\n\")])])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-21193837\",\"hasScoped\":false}!./~/vue-loader/lib/selector.js?type=template&index=0!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/lha.md\n// module id = 1238\n// module chunks = 304","module.exports = require(\"!!vue-loader!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./lha.md\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./command/lha.md\n// module id = 247\n// module chunks = 304","var Component = require(\"!../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  null,\n  /* template */\n  require(\"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-21193837\\\",\\\"hasScoped\\\":false}!../node_modules/vue-loader/lib/selector?type=template&index=0!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./lha.md\"),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/lha.md\n// module id = 835\n// module chunks = 304"],"sourceRoot":""}