{"version":3,"sources":["webpack:///static/js/351.0b3a591204336305b5bf.js","webpack:///./command/id.md?3484","webpack:///./command/id.md","webpack:///./command/id.md?92f3"],"names":["webpackJsonp","1410","module","exports","render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","_v","pre","attrs","v-pre","201","__webpack_require__","789","Component"],"mappings":"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","file":"static/js/351.0b3a591204336305b5bf.js","sourcesContent":["webpackJsonp([351],{\n\n/***/ 1410:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"id命令\")]), _vm._v(\"可以显示真实有效的用户ID(UID)和组ID(GID)。UID 是对一个用户的单一身份标识。组ID（GID）则对应多个UID。id命令已经默认预装在大多数Linux系统中。要使用它，只需要在你的控制台输入id。不带选项输入id会显示如下。结果会使用活跃用户。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"当我们想知道某个用户的UID和GID时id命令是非常有用的。一些程序可能需要UID/GID来运行。id使我们更加容易地找出用户的UID以GID而不必在\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"/etc/group\")]), _vm._v(\"文件中搜寻。如往常一样，你可以在控制台输入\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"[man](#/man \\\"man命令\\\") id\")]), _vm._v(\"进入id的手册页来获取更多的详情。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"id [-gGnru][--[help](#/help \\\"help命令\\\")][--version][用户名称]\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-g或--group 　 显示用户所属群组的ID。\\n-G或--[groups](#/groups \\\"groups命令\\\")   显示用户所属附加群组的ID。\\n-n或--name 　  显示用户，所属群组或附加群组的名称。\\n-r或--real 　  显示实际ID。\\n-u或--user 　  显示用户ID。\\n-help 　       显示帮助。\\n-version 　    显示版本信息。\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost ~]# id\\nuid=0(root) gid=0(root) groups=0(root),1(bin),2(daemon),3(sys),4(adm),6(disk),10(wheel)\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"解释：用户root的UID号码 = 0，GID号码 = 0。用户root是下面组的成员：\")]), _vm._v(\" \"), _c('ul', [_c('li', [_vm._v(\"root组GID号是：0\")]), _vm._v(\" \"), _c('li', [_vm._v(\"bin组GID号是：1\")]), _vm._v(\" \"), _c('li', [_vm._v(\"daemon组GID号是：2\")]), _vm._v(\" \"), _c('li', [_vm._v(\"sys组GID号是：3\")]), _vm._v(\" \"), _c('li', [_vm._v(\"adm组GID号是：4\")]), _vm._v(\" \"), _c('li', [_vm._v(\"disk组GID号是：6\")]), _vm._v(\" \"), _c('li', [_vm._v(\"wheel组GID号是：10\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"打印用户名、UID 和该用户所属的所有组，要这么做，我们可以使用 -a 选项：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost ~]# id -a\\nuid=0(root) gid=0(root) groups=0(root),1(bin),2(daemon),3(sys),4(adm),6(disk),10(wheel)\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"输出所有不同的组ID ，有效的，真实的和补充的，我们可以使用 -G 选项来实现：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost ~]# id -G\\n0 1 2 3 4 6 10\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"结果只会显示GID号。你可以和\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"/etc/group\")]), _vm._v(\"文件比较。下面是\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"/etc/group\")]), _vm._v(\"文件的示例内容：\")]), _vm._v(\" \"), _c('p', [_vm._v(\"只输出有效的组ID，通过使用 -g 选项来只输出有效组ID：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost ~]# id -g\\n0\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"输出特定用户信息，我们可以输出特定的用户信息相关的UID和GID。只需要在id命令后跟上用户名：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost ~]# id www\\nuid=500(www) gid=500(www) groups=500(www)\\n\")])])])\n}]}\n\n/***/ }),\n\n/***/ 201:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(789);\n\n/***/ }),\n\n/***/ 789:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(5)(\n  /* script */\n  null,\n  /* template */\n  __webpack_require__(1410),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/351.0b3a591204336305b5bf.js","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"id命令\")]), _vm._v(\"可以显示真实有效的用户ID(UID)和组ID(GID)。UID 是对一个用户的单一身份标识。组ID（GID）则对应多个UID。id命令已经默认预装在大多数Linux系统中。要使用它，只需要在你的控制台输入id。不带选项输入id会显示如下。结果会使用活跃用户。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"当我们想知道某个用户的UID和GID时id命令是非常有用的。一些程序可能需要UID/GID来运行。id使我们更加容易地找出用户的UID以GID而不必在\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"/etc/group\")]), _vm._v(\"文件中搜寻。如往常一样，你可以在控制台输入\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"[man](#/man \\\"man命令\\\") id\")]), _vm._v(\"进入id的手册页来获取更多的详情。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"id [-gGnru][--[help](#/help \\\"help命令\\\")][--version][用户名称]\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-g或--group 　 显示用户所属群组的ID。\\n-G或--[groups](#/groups \\\"groups命令\\\")   显示用户所属附加群组的ID。\\n-n或--name 　  显示用户，所属群组或附加群组的名称。\\n-r或--real 　  显示实际ID。\\n-u或--user 　  显示用户ID。\\n-help 　       显示帮助。\\n-version 　    显示版本信息。\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost ~]# id\\nuid=0(root) gid=0(root) groups=0(root),1(bin),2(daemon),3(sys),4(adm),6(disk),10(wheel)\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"解释：用户root的UID号码 = 0，GID号码 = 0。用户root是下面组的成员：\")]), _vm._v(\" \"), _c('ul', [_c('li', [_vm._v(\"root组GID号是：0\")]), _vm._v(\" \"), _c('li', [_vm._v(\"bin组GID号是：1\")]), _vm._v(\" \"), _c('li', [_vm._v(\"daemon组GID号是：2\")]), _vm._v(\" \"), _c('li', [_vm._v(\"sys组GID号是：3\")]), _vm._v(\" \"), _c('li', [_vm._v(\"adm组GID号是：4\")]), _vm._v(\" \"), _c('li', [_vm._v(\"disk组GID号是：6\")]), _vm._v(\" \"), _c('li', [_vm._v(\"wheel组GID号是：10\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"打印用户名、UID 和该用户所属的所有组，要这么做，我们可以使用 -a 选项：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost ~]# id -a\\nuid=0(root) gid=0(root) groups=0(root),1(bin),2(daemon),3(sys),4(adm),6(disk),10(wheel)\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"输出所有不同的组ID ，有效的，真实的和补充的，我们可以使用 -G 选项来实现：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost ~]# id -G\\n0 1 2 3 4 6 10\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"结果只会显示GID号。你可以和\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"/etc/group\")]), _vm._v(\"文件比较。下面是\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"/etc/group\")]), _vm._v(\"文件的示例内容：\")]), _vm._v(\" \"), _c('p', [_vm._v(\"只输出有效的组ID，通过使用 -g 选项来只输出有效组ID：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost ~]# id -g\\n0\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"输出特定用户信息，我们可以输出特定的用户信息相关的UID和GID。只需要在id命令后跟上用户名：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost ~]# id www\\nuid=500(www) gid=500(www) groups=500(www)\\n\")])])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-50cb9c1a\",\"hasScoped\":false}!./~/vue-loader/lib/selector.js?type=template&index=0!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/id.md\n// module id = 1410\n// module chunks = 351","module.exports = require(\"!!vue-loader!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./id.md\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./command/id.md\n// module id = 201\n// module chunks = 351","var Component = require(\"!../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  null,\n  /* template */\n  require(\"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-50cb9c1a\\\",\\\"hasScoped\\\":false}!../node_modules/vue-loader/lib/selector?type=template&index=0!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./id.md\"),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/id.md\n// module id = 789\n// module chunks = 351"],"sourceRoot":""}