{"version":3,"sources":["webpack:///static/js/347.6565e7a21251df9fc409.js","webpack:///./command/ifstat.md?aec5","webpack:///./command/ifstat.md","webpack:///./command/ifstat.md?8e6d"],"names":["webpackJsonp","1439","module","exports","render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","_v","attrs","href","title","pre","v-pre","204","__webpack_require__","792","Component"],"mappings":"AAAAA,cAAc,MAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAgBC,OAAA,WAAmB,GAAAC,GAAAC,KAAaC,EAAAF,EAAAG,cAA0BH,GAAAI,MAAAC,EAC1E,OAAAL,GAAAM,GAAA,IACCC,iBAAA,WAA+B,GAAAP,GAAAC,KAAaC,EAAAF,EAAAG,eAA0BE,EAAAL,EAAAI,MAAAC,IAAAH,CACvE,OAAAG,GAAA,WAAAA,EAAA,KAAAA,EAAA,UAAAL,EAAAQ,GAAA,cAAAR,EAAAQ,GAAA,MAAAH,EAAA,KACAI,OACAC,KAAA,WACAC,MAAA,cAEGX,EAAAQ,GAAA,YAAAR,EAAAQ,GAAA,KAAAH,EAAA,KACHI,OACAC,KAAA,WACAC,MAAA,cAEGX,EAAAQ,GAAA,YAAAR,EAAAQ,GAAA,iFAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHO,KAAA,IACGP,EAAA,QACHI,OACAI,QAAA,MAEGb,EAAAQ,GAAA,yKAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,UAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHO,KAAA,IACGP,EAAA,QACHI,OACAI,QAAA,MAEGb,EAAAQ,GAAA,sLAAqJR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,SAAAH,EAAA,QACxJO,KAAA,IACGZ,EAAAQ,GAAA,uCAAAR,EAAAQ,GAAA,MAAAH,EAAA,QACHO,KAAA,IACGZ,EAAAQ,GAAA,6BAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHO,KAAA,IACGP,EAAA,QACHI,OACAI,QAAA,MAEGb,EAAAQ,GAAA,00BAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHO,KAAA,IACGP,EAAA,QACHI,OACAI,QAAA,MAEGb,EAAAQ,GAAA,g1BDUGM,IACA,SAAUjB,EAAQC,EAASiB,GEpDjClB,EAAAC,QAAAiB,EAAA,MF0DMC,IACA,SAAUnB,EAAQC,EAASiB,GG3DjC,GAAAE,GAAAF,EAAA,GAEA,KAEAA,EAAA,MAEA,KAEA,KAEA,KAGAlB,GAAAC,QAAAmB,EAAAnB","file":"static/js/347.6565e7a21251df9fc409.js","sourcesContent":["webpackJsonp([347],{\n\n/***/ 1439:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"ifstat命令\")]), _vm._v(\"就像\"), _c('a', {\n    attrs: {\n      \"href\": \"#/iostat\",\n      \"title\": \"iostat命令\"\n    }\n  }, [_vm._v(\"iostat\")]), _vm._v(\"/\"), _c('a', {\n    attrs: {\n      \"href\": \"#/vmstat\",\n      \"title\": \"vmstat命令\"\n    }\n  }, [_vm._v(\"vmstat\")]), _vm._v(\"描述其它的系统状况一样，是一个统计网络接口活动状态的工具。ifstat工具系统中并不默认安装，需要自己下载源码包，重新编译安装，使用过程相对比较简单。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"下载\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"http://gael.roualland.[free](#/free \\\"free命令\\\").fr/ifstat/  （官网）\\n[wget](#/wget \\\"wget命令\\\") http://gael.roualland.free.fr/ifstat/ifstat-1.1.[tar](#/tar \\\"tar命令\\\").gz\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"编译安装\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"tar -zxvf ifstat-1.1.tar.gz\\n[cd](#/cd \\\"cd命令\\\") ifstat-1.1\\n./configure            #默认会安装到/usr/local/bin/目录中\\n[make](#/make \\\"make命令\\\") ;make  [install](#/install \\\"install命令\\\")\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"注释：执行\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"[which](#/which \\\"which命令\\\") ifstat\")]), _vm._v(\"输出\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"/usr/local/bin/ifstat\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-l 监测环路网络接口（lo）。缺省情况下，ifstat监测活动的所有非环路网络接口。经使用发现，加上-l参数能监测所有的网络接口的信息，而不是只监测 lo的接口信息，也就是说，加上-l参数比不加-l参数会多一个lo接口的状态信息。\\n-a 监测能检测到的所有网络接口的状态信息。使用发现，比加上-l参数还多一个plip0的接口信息，搜索一下发现这是并口（网络设备中有一 个叫PLIP (Parallel Line Internet Protocol). 它提供了并口...）\\n-z 隐藏流量是无的接口，例如那些接口虽然启动了但是未用的\\n-i 指定要监测的接口,后面跟网络接口名\\n-s 等于加-d snmp:[[comm](#/comm \\\"comm命令\\\")@][#][host](#/host \\\"host命令\\\")[/nn]] 参数，通过SNMP查询一个远程主机\\n-h 显示简短的帮助信息\\n-n 关闭显示周期性出现的头部信息（也就是说，不加-n参数运行ifstat时最顶部会出现网络接口的名称，当一屏显示不下时，会再一次出现接口的名称，提示我们显示的流量信息具体是哪个网络接口的。加上-n参数把周期性的显示接口名称关闭，只显示一次）\\n-t 在每一行的开头加一个时间 戳（能告诉我们具体的时间）\\n-T 报告所有监测接口的全部带宽（最后一列有个total，显示所有的接口的in流量和所有接口的out流量，简单的把所有接口的in流量相加,out流量相 加）\\n-[w](#/w \\\"w命令\\\")  用指定的列宽，而不是为了适应接口名称的长度而去自动放大列宽\\n-W 如果内容比终端窗口的宽度还要宽就自动换行\\n-S 在同一行保持状态更新（不滚动不换行）注：如果不喜欢屏幕滚动则此项非常方便，与bmon的显示方式类似\\n-b 用kbits/s显示带宽而不是kbytes/s\\n-q 安静模式，警告信息不出现\\n-v 显示版本信息\\n-d 指定一个驱动来收集状态信息\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@flow_video]# ifstat -tT\\n  [time](#/time \\\"time命令\\\")           eth0                eth1                eth2                eth3               Total      \\nHH:MM:[ss](#/ss \\\"ss命令\\\")   KB/s in  KB/s out   KB/s in  KB/s out   KB/s in  KB/s out   KB/s in  KB/s out   KB/s in  KB/s out\\n16:53:04      0.84      0.62   1256.27   1173.05      0.12      0.18      0.00      0.00   1257.22   1173.86\\n16:53:05      0.57      0.40      0.57      0.76      0.00      0.00      0.00      0.00      1.14      1.17\\n16:53:06      1.58      0.71      0.42      0.78      0.00      0.00      0.00      0.00      2.01      1.48\\n16:53:07      0.57      0.40      1.91      2.61      0.00      0.00      0.00      0.00      2.48      3.01\\n16:53:08      0.73      0.40    924.02   1248.91      0.00      0.00      0.00      0.00    924.76   1249.31\\n\")])])])\n}]}\n\n/***/ }),\n\n/***/ 204:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(792);\n\n/***/ }),\n\n/***/ 792:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(5)(\n  /* script */\n  null,\n  /* template */\n  __webpack_require__(1439),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/347.6565e7a21251df9fc409.js","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"ifstat命令\")]), _vm._v(\"就像\"), _c('a', {\n    attrs: {\n      \"href\": \"#/iostat\",\n      \"title\": \"iostat命令\"\n    }\n  }, [_vm._v(\"iostat\")]), _vm._v(\"/\"), _c('a', {\n    attrs: {\n      \"href\": \"#/vmstat\",\n      \"title\": \"vmstat命令\"\n    }\n  }, [_vm._v(\"vmstat\")]), _vm._v(\"描述其它的系统状况一样，是一个统计网络接口活动状态的工具。ifstat工具系统中并不默认安装，需要自己下载源码包，重新编译安装，使用过程相对比较简单。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"下载\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"http://gael.roualland.[free](#/free \\\"free命令\\\").fr/ifstat/  （官网）\\n[wget](#/wget \\\"wget命令\\\") http://gael.roualland.free.fr/ifstat/ifstat-1.1.[tar](#/tar \\\"tar命令\\\").gz\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"编译安装\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"tar -zxvf ifstat-1.1.tar.gz\\n[cd](#/cd \\\"cd命令\\\") ifstat-1.1\\n./configure            #默认会安装到/usr/local/bin/目录中\\n[make](#/make \\\"make命令\\\") ;make  [install](#/install \\\"install命令\\\")\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"注释：执行\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"[which](#/which \\\"which命令\\\") ifstat\")]), _vm._v(\"输出\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"/usr/local/bin/ifstat\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-l 监测环路网络接口（lo）。缺省情况下，ifstat监测活动的所有非环路网络接口。经使用发现，加上-l参数能监测所有的网络接口的信息，而不是只监测 lo的接口信息，也就是说，加上-l参数比不加-l参数会多一个lo接口的状态信息。\\n-a 监测能检测到的所有网络接口的状态信息。使用发现，比加上-l参数还多一个plip0的接口信息，搜索一下发现这是并口（网络设备中有一 个叫PLIP (Parallel Line Internet Protocol). 它提供了并口...）\\n-z 隐藏流量是无的接口，例如那些接口虽然启动了但是未用的\\n-i 指定要监测的接口,后面跟网络接口名\\n-s 等于加-d snmp:[[comm](#/comm \\\"comm命令\\\")@][#][host](#/host \\\"host命令\\\")[/nn]] 参数，通过SNMP查询一个远程主机\\n-h 显示简短的帮助信息\\n-n 关闭显示周期性出现的头部信息（也就是说，不加-n参数运行ifstat时最顶部会出现网络接口的名称，当一屏显示不下时，会再一次出现接口的名称，提示我们显示的流量信息具体是哪个网络接口的。加上-n参数把周期性的显示接口名称关闭，只显示一次）\\n-t 在每一行的开头加一个时间 戳（能告诉我们具体的时间）\\n-T 报告所有监测接口的全部带宽（最后一列有个total，显示所有的接口的in流量和所有接口的out流量，简单的把所有接口的in流量相加,out流量相 加）\\n-[w](#/w \\\"w命令\\\")  用指定的列宽，而不是为了适应接口名称的长度而去自动放大列宽\\n-W 如果内容比终端窗口的宽度还要宽就自动换行\\n-S 在同一行保持状态更新（不滚动不换行）注：如果不喜欢屏幕滚动则此项非常方便，与bmon的显示方式类似\\n-b 用kbits/s显示带宽而不是kbytes/s\\n-q 安静模式，警告信息不出现\\n-v 显示版本信息\\n-d 指定一个驱动来收集状态信息\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@flow_video]# ifstat -tT\\n  [time](#/time \\\"time命令\\\")           eth0                eth1                eth2                eth3               Total      \\nHH:MM:[ss](#/ss \\\"ss命令\\\")   KB/s in  KB/s out   KB/s in  KB/s out   KB/s in  KB/s out   KB/s in  KB/s out   KB/s in  KB/s out\\n16:53:04      0.84      0.62   1256.27   1173.05      0.12      0.18      0.00      0.00   1257.22   1173.86\\n16:53:05      0.57      0.40      0.57      0.76      0.00      0.00      0.00      0.00      1.14      1.17\\n16:53:06      1.58      0.71      0.42      0.78      0.00      0.00      0.00      0.00      2.01      1.48\\n16:53:07      0.57      0.40      1.91      2.61      0.00      0.00      0.00      0.00      2.48      3.01\\n16:53:08      0.73      0.40    924.02   1248.91      0.00      0.00      0.00      0.00    924.76   1249.31\\n\")])])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-58476ddd\",\"hasScoped\":false}!./~/vue-loader/lib/selector.js?type=template&index=0!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/ifstat.md\n// module id = 1439\n// module chunks = 347","module.exports = require(\"!!vue-loader!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./ifstat.md\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./command/ifstat.md\n// module id = 204\n// module chunks = 347","var Component = require(\"!../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  null,\n  /* template */\n  require(\"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-58476ddd\\\",\\\"hasScoped\\\":false}!../node_modules/vue-loader/lib/selector?type=template&index=0!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./ifstat.md\"),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/ifstat.md\n// module id = 792\n// module chunks = 347"],"sourceRoot":""}