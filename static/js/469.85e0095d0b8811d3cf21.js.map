{"version":3,"sources":["webpack:///static/js/469.85e0095d0b8811d3cf21.js","webpack:///./command/comm.md?22c2","webpack:///./command/comm.md?ce7e","webpack:///./command/comm.md"],"names":["webpackJsonp","1306","module","exports","render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","_v","pre","attrs","v-pre","669","__webpack_require__","Component","81"],"mappings":"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","file":"static/js/469.85e0095d0b8811d3cf21.js","sourcesContent":["webpackJsonp([469],{\n\n/***/ 1306:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"comm命令\")]), _vm._v(\"可以用于两个文件之间的比较，它有一些选项可以用来调整输出，以便执行交集、求差、以及差集操作。\")]), _vm._v(\" \"), _c('ul', [_c('li', [_vm._v(\"交集：打印出两个文件所共有的行。\")]), _vm._v(\" \"), _c('li', [_vm._v(\"求差：打印出指定文件所包含的且不相同的行。\")]), _vm._v(\" \"), _c('li', [_vm._v(\"差集：打印出包含在一个文件中，但不包含在其他指定文件中的行。\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"comm(选项)(参数)\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-1：不显示在第一个文件出现的内容；\\n-2：不显示在第二个文件中出现的内容；\\n-3：不显示同时在两个文件中都出现的内容。\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"参数\")]), _vm._v(\" \"), _c('ul', [_c('li', [_vm._v(\"文件1：指定要比较的第一个有序文件；\")]), _vm._v(\" \"), _c('li', [_vm._v(\"文件2：指定要比较的第二个有序文件。\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost text]# [cat](#/cat \\\"cat命令\\\") aaa.txt \\naaa\\nbbb\\nccc\\nddd\\neee\\n111\\n222\\n\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost text]# cat bbb.txt \\nbbb\\nccc\\naaa\\nhhh\\nttt\\njjj\\n\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost text]# comm aaa.txt bbb.txt \\naaa\\n                bbb\\n                ccc\\n        aaa\\nddd\\neee\\n111\\n222\\n        hhh\\n        ttt\\n        jjj\\n第一列  第二列  第三列\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"输出的第一列只包含在aaa.txt中出现的行，第二列包含在bbb.txt中出现的行，第三列包含在aaa.txt和bbb.txt中相同的行。各列是以制表符（\\\\t）作为定界符。\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"交集\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"打印两个文件的交集，需要删除第一列和第二列：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost text]# comm aaa.txt bbb.txt -1 -2\\nbbb\\nccc\\n\")])]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"求差\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"打印出两个文件中不相同的行，需要删除第三列：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost text]# comm aaa.txt bbb.txt -3 | [sed](#/sed \\\"sed命令\\\") 's/^\\\\t//'\\naaa\\naaa\\nddd\\neee\\n111\\n222\\nhhh\\nttt\\njjj\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"sed 's/^\\\\t//' 是将制表符（\\\\t）删除，以便把两列合并成一列。\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"差集\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"通过删除不需要的列，可以得到aaa.txt和bbb.txt的差集：\")]), _vm._v(\" \"), _c('p', [_vm._v(\"aaa.txt的差集\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost text]# comm aaa.txt bbb.txt -2 -3\\naaa\\nddd\\neee\\n111\\n222\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"bbb.txt的差集\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost text]# comm aaa.txt bbb.txt -1 -3\\naaa\\nhhh\\nttt\\njjj\\n\")])])])\n}]}\n\n/***/ }),\n\n/***/ 669:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(5)(\n  /* script */\n  null,\n  /* template */\n  __webpack_require__(1306),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 81:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(669);\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/469.85e0095d0b8811d3cf21.js","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"comm命令\")]), _vm._v(\"可以用于两个文件之间的比较，它有一些选项可以用来调整输出，以便执行交集、求差、以及差集操作。\")]), _vm._v(\" \"), _c('ul', [_c('li', [_vm._v(\"交集：打印出两个文件所共有的行。\")]), _vm._v(\" \"), _c('li', [_vm._v(\"求差：打印出指定文件所包含的且不相同的行。\")]), _vm._v(\" \"), _c('li', [_vm._v(\"差集：打印出包含在一个文件中，但不包含在其他指定文件中的行。\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"comm(选项)(参数)\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-1：不显示在第一个文件出现的内容；\\n-2：不显示在第二个文件中出现的内容；\\n-3：不显示同时在两个文件中都出现的内容。\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"参数\")]), _vm._v(\" \"), _c('ul', [_c('li', [_vm._v(\"文件1：指定要比较的第一个有序文件；\")]), _vm._v(\" \"), _c('li', [_vm._v(\"文件2：指定要比较的第二个有序文件。\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost text]# [cat](#/cat \\\"cat命令\\\") aaa.txt \\naaa\\nbbb\\nccc\\nddd\\neee\\n111\\n222\\n\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost text]# cat bbb.txt \\nbbb\\nccc\\naaa\\nhhh\\nttt\\njjj\\n\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost text]# comm aaa.txt bbb.txt \\naaa\\n                bbb\\n                ccc\\n        aaa\\nddd\\neee\\n111\\n222\\n        hhh\\n        ttt\\n        jjj\\n第一列  第二列  第三列\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"输出的第一列只包含在aaa.txt中出现的行，第二列包含在bbb.txt中出现的行，第三列包含在aaa.txt和bbb.txt中相同的行。各列是以制表符（\\\\t）作为定界符。\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"交集\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"打印两个文件的交集，需要删除第一列和第二列：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost text]# comm aaa.txt bbb.txt -1 -2\\nbbb\\nccc\\n\")])]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"求差\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"打印出两个文件中不相同的行，需要删除第三列：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost text]# comm aaa.txt bbb.txt -3 | [sed](#/sed \\\"sed命令\\\") 's/^\\\\t//'\\naaa\\naaa\\nddd\\neee\\n111\\n222\\nhhh\\nttt\\njjj\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"sed 's/^\\\\t//' 是将制表符（\\\\t）删除，以便把两列合并成一列。\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"差集\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"通过删除不需要的列，可以得到aaa.txt和bbb.txt的差集：\")]), _vm._v(\" \"), _c('p', [_vm._v(\"aaa.txt的差集\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost text]# comm aaa.txt bbb.txt -2 -3\\naaa\\nddd\\neee\\n111\\n222\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"bbb.txt的差集\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost text]# comm aaa.txt bbb.txt -1 -3\\naaa\\nhhh\\nttt\\njjj\\n\")])])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-32ac7822\",\"hasScoped\":false}!./~/vue-loader/lib/selector.js?type=template&index=0!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/comm.md\n// module id = 1306\n// module chunks = 469","var Component = require(\"!../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  null,\n  /* template */\n  require(\"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-32ac7822\\\",\\\"hasScoped\\\":false}!../node_modules/vue-loader/lib/selector?type=template&index=0!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./comm.md\"),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/comm.md\n// module id = 669\n// module chunks = 469","module.exports = require(\"!!vue-loader!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./comm.md\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./command/comm.md\n// module id = 81\n// module chunks = 469"],"sourceRoot":""}