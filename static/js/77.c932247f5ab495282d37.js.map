{"version":3,"sources":["webpack:///static/js/77.c932247f5ab495282d37.js","webpack:///./command/traceroute.md?4880","webpack:///./command/traceroute.md?ee00","webpack:///./command/traceroute.md"],"names":["webpackJsonp","1068","module","exports","__webpack_require__","Component","1445","render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","_v","attrs","href","title","pre","v-pre","480"],"mappings":"AAAAA,cAAc,KAERC,KACA,SAAUC,EAAQC,EAASC,GCHjC,GAAAC,GAAAD,EAAA,GAEA,KAEAA,EAAA,MAEA,KAEA,KAEA,KAGAF,GAAAC,QAAAE,EAAAF,SDUMG,KACA,SAAUJ,EAAQC,GExBxBD,EAAAC,SAAgBI,OAAA,WAAmB,GAAAC,GAAAC,KAAaC,EAAAF,EAAAG,cAA0BH,GAAAI,MAAAC,EAC1E,OAAAL,GAAAM,GAAA,IACCC,iBAAA,WAA+B,GAAAP,GAAAC,KAAaC,EAAAF,EAAAG,eAA0BE,EAAAL,EAAAI,MAAAC,IAAAH,CACvE,OAAAG,GAAA,WAAAA,EAAA,KAAAA,EAAA,UAAAL,EAAAQ,GAAA,kBAAAR,EAAAQ,GAAA,4CAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,iIAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,sGAAAH,EAAA,KACAI,OACAC,KAAA,OACAC,MAAA,UAEGX,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,SAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHO,KAAA,IACGP,EAAA,QACHI,OACAI,QAAA,MAEGb,EAAAQ,GAAA,4BAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHO,KAAA,IACGP,EAAA,QACHI,OACAI,QAAA,MAEGb,EAAAQ,GAAA,yYAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,wBAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHO,KAAA,IACGP,EAAA,QACHI,OACAI,QAAA,MAEGb,EAAAQ,GAAA,2gCAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,wDAAAH,EAAA,QACHO,KAAA,IACGZ,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,2CAAAH,EAAA,QACHO,KAAA,IACGZ,EAAAQ,GAAA,gCAAAR,EAAAQ,GAAA,sBAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,wFAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,yFAAAH,EAAA,QACHO,KAAA,IACGZ,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,2BAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,uLF+BGM,IACA,SAAUpB,EAAQC,EAASC,GGhEjCF,EAAAC,QAAAC,EAAA","file":"static/js/77.c932247f5ab495282d37.js","sourcesContent":["webpackJsonp([77],{\n\n/***/ 1068:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(5)(\n  /* script */\n  null,\n  /* template */\n  __webpack_require__(1445),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 1445:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"traceroute命令\")]), _vm._v(\"用于追踪数据包在网络上的传输时的全部路径，它默认发送的数据包大小是40字节。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"通过traceroute我们可以知道信息从你的计算机到互联网另一端的主机是走的什么路径。当然每次数据包由某一同样的出发点（source）到达某一同样的目的地(destination)走的路径可能会不一样，但基本上来说大部分时候所走的路由是相同的。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"traceroute通过发送小的数据包到目的设备直到其返回，来测量其需要多长时间。一条路径上的每个设备traceroute要测3次。输出结果中包括每次测试的时间(ms)和设备的名称（如有的话）及其\"), _c('a', {\n    attrs: {\n      \"href\": \"#/ip\",\n      \"title\": \"ip命令\"\n    }\n  }, [_vm._v(\"ip\")]), _vm._v(\"地址。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"traceroute(选项)(参数)\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-d：使用Socket层级的排错功能；\\n-f<存活数值>：设置第一个检测数据包的存活数值TTL的大小；\\n-F：设置勿离断位；\\n-g<网关>：设置来源路由网关，最多可设置8个；\\n-i<网络界面>：使用指定的网络界面送出数据包；\\n-I：使用ICMP回应取代UDP资料信息；\\n-m<存活数值>：设置检测数据包的最大存活数值TTL的大小；\\n-n：直接使用IP地址而非主机名称；\\n-p<通信端口>：设置UDP传输协议的通信端口；\\n-r：忽略普通的Routing Table，直接将数据包送到远端主机上。\\n-s<来源地址>：设置本地主机送出数据包的IP地址；\\n-t<服务类型>：设置检测数据包的TOS数值；\\n-v：详细显示指令的执行过程；\\n-[w](#/w \\\"w命令\\\")<超时秒数>：设置等待远端主机回报的时间；\\n-x：开启或关闭数据包的正确性检验。\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"参数\")]), _vm._v(\" \"), _c('p', [_vm._v(\"主机：指定目的主机IP地址或主机名。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"traceroute www.58.com\\ntraceroute to www.58.com (211.151.111.30), 30 hops max, 40 byte packets\\n 1  unknown (192.168.2.1)  3.453 ms  3.801 ms  3.937 ms\\n 2  221.6.45.33 (221.6.45.33)  7.768 ms  7.816 ms  7.840 ms\\n 3  221.6.0.233 (221.6.0.233)  13.784 ms  13.827 ms 221.6.9.81 (221.6.9.81)  9.758 ms\\n 4  221.6.2.169 (221.6.2.169)  11.777 ms 122.96.66.13 (122.96.66.13)  34.952 ms 221.6.2.53 (221.6.2.53)  41.372 ms\\n 5  219.158.96.149 (219.158.96.149)  39.167 ms  39.210 ms  39.238 ms\\n 6  123.126.0.194 (123.126.0.194)  37.270 ms 123.126.0.66 (123.126.0.66)  37.163 ms  37.441 ms\\n 7  124.65.57.26 (124.65.57.26)  42.787 ms  42.799 ms  42.809 ms\\n 8  61.148.146.210 (61.148.146.210)  30.176 ms 61.148.154.98 (61.148.154.98)  32.613 ms  32.675 ms\\n 9  202.106.42.102 (202.106.42.102)  44.563 ms  44.600 ms  44.627 ms\\n10  210.77.139.150 (210.77.139.150)  53.302 ms  53.233 ms  53.032 ms\\n11  211.151.104.6 (211.151.104.6)  39.585 ms  39.502 ms  39.598 ms\\n12  211.151.111.30 (211.151.111.30)  35.161 ms  35.938 ms  36.005 ms\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"记录按序列号从1开始，每个纪录就是一跳 ，每跳表示一个网关，我们看到每行有三个时间，单位是ms，其实就是\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"-q\")]), _vm._v(\"的默认参数。探测数据包向每个网关发送三个数据包后，网关响应后返回的时间；如果用\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"traceroute -q 4 www.58.com\")]), _vm._v(\"，表示向每个网关发送4个数据包。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"有时我们traceroute一台主机时，会看到有一些行是以星号表示的。出现这样的情况，可能是防火墙封掉了ICMP的返回信息，所以我们得不到什么相关的数据包返回数据。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"有时我们在某一网关处延时比较长，有可能是某台网关比较阻塞，也可能是物理设备本身的原因。当然如果某台DNS出现问题时，不能解析主机名、域名时，也会 有延时长的现象；您可以加\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"-n\")]), _vm._v(\"参数来避免DNS解析，以IP格式输出数据。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"如果在局域网中的不同网段之间，我们可以通过traceroute 来排查问题所在，是主机的问题还是网关的问题。如果我们通过远程来访问某台服务器遇到问题时，我们用到traceroute 追踪数据包所经过的网关，提交IDC服务商，也有助于解决问题；但目前看来在国内解决这样的问题是比较困难的，就是我们发现问题所在，IDC服务商也不可能帮助我们解决。\")])])\n}]}\n\n/***/ }),\n\n/***/ 480:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(1068);\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/77.c932247f5ab495282d37.js","var Component = require(\"!../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  null,\n  /* template */\n  require(\"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-5b230d6c\\\",\\\"hasScoped\\\":false}!../node_modules/vue-loader/lib/selector?type=template&index=0!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./traceroute.md\"),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/traceroute.md\n// module id = 1068\n// module chunks = 77","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"traceroute命令\")]), _vm._v(\"用于追踪数据包在网络上的传输时的全部路径，它默认发送的数据包大小是40字节。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"通过traceroute我们可以知道信息从你的计算机到互联网另一端的主机是走的什么路径。当然每次数据包由某一同样的出发点（source）到达某一同样的目的地(destination)走的路径可能会不一样，但基本上来说大部分时候所走的路由是相同的。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"traceroute通过发送小的数据包到目的设备直到其返回，来测量其需要多长时间。一条路径上的每个设备traceroute要测3次。输出结果中包括每次测试的时间(ms)和设备的名称（如有的话）及其\"), _c('a', {\n    attrs: {\n      \"href\": \"#/ip\",\n      \"title\": \"ip命令\"\n    }\n  }, [_vm._v(\"ip\")]), _vm._v(\"地址。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"traceroute(选项)(参数)\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-d：使用Socket层级的排错功能；\\n-f<存活数值>：设置第一个检测数据包的存活数值TTL的大小；\\n-F：设置勿离断位；\\n-g<网关>：设置来源路由网关，最多可设置8个；\\n-i<网络界面>：使用指定的网络界面送出数据包；\\n-I：使用ICMP回应取代UDP资料信息；\\n-m<存活数值>：设置检测数据包的最大存活数值TTL的大小；\\n-n：直接使用IP地址而非主机名称；\\n-p<通信端口>：设置UDP传输协议的通信端口；\\n-r：忽略普通的Routing Table，直接将数据包送到远端主机上。\\n-s<来源地址>：设置本地主机送出数据包的IP地址；\\n-t<服务类型>：设置检测数据包的TOS数值；\\n-v：详细显示指令的执行过程；\\n-[w](#/w \\\"w命令\\\")<超时秒数>：设置等待远端主机回报的时间；\\n-x：开启或关闭数据包的正确性检验。\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"参数\")]), _vm._v(\" \"), _c('p', [_vm._v(\"主机：指定目的主机IP地址或主机名。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"traceroute www.58.com\\ntraceroute to www.58.com (211.151.111.30), 30 hops max, 40 byte packets\\n 1  unknown (192.168.2.1)  3.453 ms  3.801 ms  3.937 ms\\n 2  221.6.45.33 (221.6.45.33)  7.768 ms  7.816 ms  7.840 ms\\n 3  221.6.0.233 (221.6.0.233)  13.784 ms  13.827 ms 221.6.9.81 (221.6.9.81)  9.758 ms\\n 4  221.6.2.169 (221.6.2.169)  11.777 ms 122.96.66.13 (122.96.66.13)  34.952 ms 221.6.2.53 (221.6.2.53)  41.372 ms\\n 5  219.158.96.149 (219.158.96.149)  39.167 ms  39.210 ms  39.238 ms\\n 6  123.126.0.194 (123.126.0.194)  37.270 ms 123.126.0.66 (123.126.0.66)  37.163 ms  37.441 ms\\n 7  124.65.57.26 (124.65.57.26)  42.787 ms  42.799 ms  42.809 ms\\n 8  61.148.146.210 (61.148.146.210)  30.176 ms 61.148.154.98 (61.148.154.98)  32.613 ms  32.675 ms\\n 9  202.106.42.102 (202.106.42.102)  44.563 ms  44.600 ms  44.627 ms\\n10  210.77.139.150 (210.77.139.150)  53.302 ms  53.233 ms  53.032 ms\\n11  211.151.104.6 (211.151.104.6)  39.585 ms  39.502 ms  39.598 ms\\n12  211.151.111.30 (211.151.111.30)  35.161 ms  35.938 ms  36.005 ms\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"记录按序列号从1开始，每个纪录就是一跳 ，每跳表示一个网关，我们看到每行有三个时间，单位是ms，其实就是\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"-q\")]), _vm._v(\"的默认参数。探测数据包向每个网关发送三个数据包后，网关响应后返回的时间；如果用\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"traceroute -q 4 www.58.com\")]), _vm._v(\"，表示向每个网关发送4个数据包。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"有时我们traceroute一台主机时，会看到有一些行是以星号表示的。出现这样的情况，可能是防火墙封掉了ICMP的返回信息，所以我们得不到什么相关的数据包返回数据。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"有时我们在某一网关处延时比较长，有可能是某台网关比较阻塞，也可能是物理设备本身的原因。当然如果某台DNS出现问题时，不能解析主机名、域名时，也会 有延时长的现象；您可以加\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"-n\")]), _vm._v(\"参数来避免DNS解析，以IP格式输出数据。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"如果在局域网中的不同网段之间，我们可以通过traceroute 来排查问题所在，是主机的问题还是网关的问题。如果我们通过远程来访问某台服务器遇到问题时，我们用到traceroute 追踪数据包所经过的网关，提交IDC服务商，也有助于解决问题；但目前看来在国内解决这样的问题是比较困难的，就是我们发现问题所在，IDC服务商也不可能帮助我们解决。\")])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-5b230d6c\",\"hasScoped\":false}!./~/vue-loader/lib/selector.js?type=template&index=0!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/traceroute.md\n// module id = 1445\n// module chunks = 77","module.exports = require(\"!!vue-loader!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./traceroute.md\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./command/traceroute.md\n// module id = 480\n// module chunks = 77"],"sourceRoot":""}