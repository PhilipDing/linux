{"version":3,"sources":["webpack:///static/js/342.1daba69384580c98a000.js","webpack:///./command/inotifywait.md?0664","webpack:///./command/inotifywait.md","webpack:///./command/inotifywait.md?6a88"],"names":["webpackJsonp","1637","module","exports","render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","_v","pre","attrs","v-pre","href","title","staticStyle","width","border","height","209","__webpack_require__","797","Component"],"mappings":"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","file":"static/js/342.1daba69384580c98a000.js","sourcesContent":["webpackJsonp([342],{\n\n/***/ 1637:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"Inotify\")]), _vm._v(\"一种强大的、细粒度的、异步文件系统监控机制，它满足各种各样的文件监控需要，可以监控文件系统的访问属性、读写属性、权限属性、删除创建、移动等操作，也就是可以监控文件发生的一切变化。。\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"inotify-tools\")]), _vm._v(\"是一个C库和一组命令行的工作提供Linux下inotify的简单接口。inotify-tools安装后会得到\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"inotifywait\")]), _vm._v(\"和\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"inotifywatch\")]), _vm._v(\"这两条命令：\")]), _vm._v(\" \"), _c('ul', [_c('li', [_c('strong', [_vm._v(\"inotifywait命令\")]), _vm._v(\"可以用来收集有关文件访问信息，Linux发行版一般没有包括这个命令，需要安装inotify-tools，这个命令还需要将inotify支持编译入Linux内核，好在大多数Linux发行版都在内核中启用了inotify。\")]), _vm._v(\" \"), _c('li', [_c('strong', [_vm._v(\"inotifywatch命令\")]), _vm._v(\"用于收集关于被监视的文件系统的统计数据，包括每个 inotify 事件发生多少次。\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"开始之前需要检测系统内核是否支持inotify：\")]), _vm._v(\" \"), _c('p', [_vm._v(\"使用\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"[uname](#/uname \\\"uname命令\\\") -r\")]), _vm._v(\"命令检查Linux内核，如果低于2.6.13，就需要重新编译内核加入inotify的支持。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"使用\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"ll /proc/sys/fs/inotify\")]), _vm._v(\"命令，是否有以下三条信息输出，如果没有表示不支持。\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"ll /proc/sys/fs/inotify\\ntotal 0\\n-rw-r--r-- 1 root root 0 Jan  4 15:41 max_queued_events\\n-rw-r--r-- 1 root root 0 Jan  4 15:41 max_user_instances\\n-rw-r--r-- 1 root root 0 Jan  4 15:41 max_user_watches\\n\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"安装inotify-tools\")]), _vm._v(\" \"), _c('ul', [_c('li', [_vm._v(\"inotify-tools项目地址：\"), _c('a', {\n    attrs: {\n      \"href\": \"https://github.com/rvoicilas/inotify-tools\"\n    }\n  }, [_vm._v(\"https://github.com/rvoicilas/inotify-tools\")])]), _vm._v(\" \"), _c('li', [_vm._v(\"inotify-tools下载地址：\"), _c('a', {\n    attrs: {\n      \"href\": \"http://github.com/downloads/rvoicilas/inotify-tools/inotify-tools-3.14.tar.gz\"\n    }\n  }, [_vm._v(\"http://github.com/downloads/rvoicilas/inotify-tools/inotify-tools-3.14.tar.gz\")])])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"#CentOS release 5.8/64位：\\n[tar](#/tar \\\"tar命令\\\") zxvf inotify-tools-3.14.tar.gz\\n[cd](#/cd \\\"cd命令\\\") inotify-tools-3.14\\n./configure\\n[make](#/make \\\"make命令\\\")\\nmake [install](#/install \\\"install命令\\\")\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"其他Linux发行版安装方法可以参见：\"), _c('a', {\n    attrs: {\n      \"href\": \"https://github.com/rvoicilas/inotify-tools/wiki#wiki-getting\"\n    }\n  }, [_vm._v(\"https://github.com/rvoicilas/inotify-tools/wiki#wiki-getting\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"inotify相关参数\")]), _vm._v(\" \"), _c('p', [_vm._v(\"inotify定义了下列的接口参数，可以用来限制inotify消耗kernel memory的大小。由于这些参数都是内存参数，因此，可以根据应用需求，实时的调节其大小：\")]), _vm._v(\" \"), _c('ul', [_c('li', [_c('code', {\n    pre: true\n  }, [_vm._v(\"/proc/sys/fs/inotify/max_queued_evnets\")]), _vm._v(\"表示调用inotify_init时分配给inotify instance中可排队的event的数目的最大值，超出这个值的事件被丢弃，但会触发IN_Q_OVERFLOW事件。\")]), _vm._v(\" \"), _c('li', [_c('code', {\n    pre: true\n  }, [_vm._v(\"/proc/sys/fs/inotify/max_user_instances\")]), _vm._v(\"表示每一个real user \"), _c('a', {\n    attrs: {\n      \"href\": \"#/id\",\n      \"title\": \"id命令\"\n    }\n  }, [_vm._v(\"id\")]), _vm._v(\"可创建的inotify instatnces的数量上限。\")]), _vm._v(\" \"), _c('li', [_c('code', {\n    pre: true\n  }, [_vm._v(\"/proc/sys/fs/inotify/max_user_watches\")]), _vm._v(\"表示每个inotify instatnces可监控的最大目录数量。如果监控的文件数目巨大，需要根据情况，适当增加此值的大小。\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"根据以上在32位或者64位系统都可以执行：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[echo](#/echo \\\"echo命令\\\") 104857600 > /proc/sys/fs/inotify/max_user_watches\\necho 'echo 104857600 > /proc/sys/fs/inotify/max_user_watches' >> /etc/rc.local\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"如果遇到以下错误：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"inotifywait: error while loading shared libraries: libinotifytools.so.0: cannot open shared object [file](#/file \\\"file命令\\\"): No such file or directory\\n\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"**解决方法：**\\n32位系统：[ln](#/ln \\\"ln命令\\\") -s /usr/local/lib/libinotifytools.so.0 /usr/lib/libinotifytools.so.0\\n64位系统：ln -s /usr/local/lib/libinotifytools.so.0 /usr/lib64/libinotifytools.so.0\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"inotifywait命令使用\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"#!/bin/bash\\n#filename watchdir.sh\\npath=$1\\n/usr/local/bin/inotifywait -mrq --timefmt '%d/%m/%y/%H:%M' --format '%T %[w](#/w \\\"w命令\\\") %f' -e modify,delete,create,attrib $path\\n\\n执行输出：\\n./watchdir.sh /data/wsdata/tools/\\n04/01/13/16:34 /data/wsdata/tools/ .j.jsp.swp\\n04/01/13/16:34 /data/wsdata/tools/ .j.jsp.swx\\n04/01/13/16:34 /data/wsdata/tools/ .j.jsp.swx\\n04/01/13/16:34 /data/wsdata/tools/ .j.jsp.swp\\n04/01/13/16:34 /data/wsdata/tools/ .j.jsp.swp\\n04/01/13/16:34 /data/wsdata/tools/ .j.jsp.swp\\n04/01/13/16:34 /data/wsdata/tools/ .j.jsp.swp\\n04/01/13/16:34 /data/wsdata/tools/ .j.jsp.swp\\n04/01/13/16:35 /data/wsdata/tools/ 4913\\n04/01/13/16:35 /data/wsdata/tools/ 4913\\n04/01/13/16:35 /data/wsdata/tools/ 4913\\n04/01/13/16:35 /data/wsdata/tools/ j.jsp\\n04/01/13/16:35 /data/wsdata/tools/ j.jsp\\n04/01/13/16:35 /data/wsdata/tools/ j.jsp\\n04/01/13/16:35 /data/wsdata/tools/ j.jsp~\\n04/01/13/16:35 /data/wsdata/tools/ .j.jsp.swp\\n\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"inotifywait命令参数\")]), _vm._v(\" \"), _c('ul', [_c('li', [_c('code', {\n    pre: true\n  }, [_vm._v(\"-m\")]), _vm._v(\"是要持续监视变化。\")]), _vm._v(\" \"), _c('li', [_c('code', {\n    pre: true\n  }, [_vm._v(\"-r\")]), _vm._v(\"使用递归形式监视目录。\")]), _vm._v(\" \"), _c('li', [_c('code', {\n    pre: true\n  }, [_vm._v(\"-q\")]), _vm._v(\"减少冗余信息，只打印出需要的信息。\")]), _vm._v(\" \"), _c('li', [_c('code', {\n    pre: true\n  }, [_vm._v(\"-e\")]), _vm._v(\"指定要监视的事件列表。\")]), _vm._v(\" \"), _c('li', [_c('code', {\n    pre: true\n  }, [_vm._v(\"--timefmt\")]), _vm._v(\"是指定时间的输出格式。\")]), _vm._v(\" \"), _c('li', [_c('code', {\n    pre: true\n  }, [_vm._v(\"--format\")]), _vm._v(\"指定文件变化的详细信息。\")])]), _vm._v(\" \"), _c('h4', [_vm._v(\"可监听的事件\")]), _vm._v(\" \"), _c('table', {\n    staticStyle: {\n      \"width\": \"100%\"\n    },\n    attrs: {\n      \"border\": \"0\",\n      \"height\": \"193\",\n      \"width\": \"74\"\n    }\n  }, [_c('tbody', [_c('tr', [_c('th', [_vm._v(\"事件\")]), _vm._v(\" \"), _c('th', [_vm._v(\"描述\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"access\")]), _vm._v(\" \"), _c('td', [_vm._v(\"**访问**，读取文件。\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"modify\")]), _vm._v(\" \"), _c('td', [_vm._v(\"**修改**，文件内容被修改。\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"attrib\")]), _vm._v(\" \"), _c('td', [_vm._v(\"**属性**，文件元数据被修改。\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"move\")]), _vm._v(\" \"), _c('td', [_vm._v(\"**移动**，对文件进行移动操作。\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"create\")]), _vm._v(\" \"), _c('td', [_vm._v(\"**创建**，生成新文件\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"open\")]), _vm._v(\" \"), _c('td', [_vm._v(\"**打开**，对文件进行打开操作。\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"close\")]), _vm._v(\" \"), _c('td', [_vm._v(\"**关闭**，对文件进行关闭操作。\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"delete\")]), _vm._v(\" \"), _c('td', [_vm._v(\"**删除**，文件被删除。\")])])])])])\n}]}\n\n/***/ }),\n\n/***/ 209:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(797);\n\n/***/ }),\n\n/***/ 797:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(5)(\n  /* script */\n  null,\n  /* template */\n  __webpack_require__(1637),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/342.1daba69384580c98a000.js","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"Inotify\")]), _vm._v(\"一种强大的、细粒度的、异步文件系统监控机制，它满足各种各样的文件监控需要，可以监控文件系统的访问属性、读写属性、权限属性、删除创建、移动等操作，也就是可以监控文件发生的一切变化。。\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"inotify-tools\")]), _vm._v(\"是一个C库和一组命令行的工作提供Linux下inotify的简单接口。inotify-tools安装后会得到\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"inotifywait\")]), _vm._v(\"和\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"inotifywatch\")]), _vm._v(\"这两条命令：\")]), _vm._v(\" \"), _c('ul', [_c('li', [_c('strong', [_vm._v(\"inotifywait命令\")]), _vm._v(\"可以用来收集有关文件访问信息，Linux发行版一般没有包括这个命令，需要安装inotify-tools，这个命令还需要将inotify支持编译入Linux内核，好在大多数Linux发行版都在内核中启用了inotify。\")]), _vm._v(\" \"), _c('li', [_c('strong', [_vm._v(\"inotifywatch命令\")]), _vm._v(\"用于收集关于被监视的文件系统的统计数据，包括每个 inotify 事件发生多少次。\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"开始之前需要检测系统内核是否支持inotify：\")]), _vm._v(\" \"), _c('p', [_vm._v(\"使用\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"[uname](#/uname \\\"uname命令\\\") -r\")]), _vm._v(\"命令检查Linux内核，如果低于2.6.13，就需要重新编译内核加入inotify的支持。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"使用\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"ll /proc/sys/fs/inotify\")]), _vm._v(\"命令，是否有以下三条信息输出，如果没有表示不支持。\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"ll /proc/sys/fs/inotify\\ntotal 0\\n-rw-r--r-- 1 root root 0 Jan  4 15:41 max_queued_events\\n-rw-r--r-- 1 root root 0 Jan  4 15:41 max_user_instances\\n-rw-r--r-- 1 root root 0 Jan  4 15:41 max_user_watches\\n\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"安装inotify-tools\")]), _vm._v(\" \"), _c('ul', [_c('li', [_vm._v(\"inotify-tools项目地址：\"), _c('a', {\n    attrs: {\n      \"href\": \"https://github.com/rvoicilas/inotify-tools\"\n    }\n  }, [_vm._v(\"https://github.com/rvoicilas/inotify-tools\")])]), _vm._v(\" \"), _c('li', [_vm._v(\"inotify-tools下载地址：\"), _c('a', {\n    attrs: {\n      \"href\": \"http://github.com/downloads/rvoicilas/inotify-tools/inotify-tools-3.14.tar.gz\"\n    }\n  }, [_vm._v(\"http://github.com/downloads/rvoicilas/inotify-tools/inotify-tools-3.14.tar.gz\")])])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"#CentOS release 5.8/64位：\\n[tar](#/tar \\\"tar命令\\\") zxvf inotify-tools-3.14.tar.gz\\n[cd](#/cd \\\"cd命令\\\") inotify-tools-3.14\\n./configure\\n[make](#/make \\\"make命令\\\")\\nmake [install](#/install \\\"install命令\\\")\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"其他Linux发行版安装方法可以参见：\"), _c('a', {\n    attrs: {\n      \"href\": \"https://github.com/rvoicilas/inotify-tools/wiki#wiki-getting\"\n    }\n  }, [_vm._v(\"https://github.com/rvoicilas/inotify-tools/wiki#wiki-getting\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"inotify相关参数\")]), _vm._v(\" \"), _c('p', [_vm._v(\"inotify定义了下列的接口参数，可以用来限制inotify消耗kernel memory的大小。由于这些参数都是内存参数，因此，可以根据应用需求，实时的调节其大小：\")]), _vm._v(\" \"), _c('ul', [_c('li', [_c('code', {\n    pre: true\n  }, [_vm._v(\"/proc/sys/fs/inotify/max_queued_evnets\")]), _vm._v(\"表示调用inotify_init时分配给inotify instance中可排队的event的数目的最大值，超出这个值的事件被丢弃，但会触发IN_Q_OVERFLOW事件。\")]), _vm._v(\" \"), _c('li', [_c('code', {\n    pre: true\n  }, [_vm._v(\"/proc/sys/fs/inotify/max_user_instances\")]), _vm._v(\"表示每一个real user \"), _c('a', {\n    attrs: {\n      \"href\": \"#/id\",\n      \"title\": \"id命令\"\n    }\n  }, [_vm._v(\"id\")]), _vm._v(\"可创建的inotify instatnces的数量上限。\")]), _vm._v(\" \"), _c('li', [_c('code', {\n    pre: true\n  }, [_vm._v(\"/proc/sys/fs/inotify/max_user_watches\")]), _vm._v(\"表示每个inotify instatnces可监控的最大目录数量。如果监控的文件数目巨大，需要根据情况，适当增加此值的大小。\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"根据以上在32位或者64位系统都可以执行：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[echo](#/echo \\\"echo命令\\\") 104857600 > /proc/sys/fs/inotify/max_user_watches\\necho 'echo 104857600 > /proc/sys/fs/inotify/max_user_watches' >> /etc/rc.local\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"如果遇到以下错误：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"inotifywait: error while loading shared libraries: libinotifytools.so.0: cannot open shared object [file](#/file \\\"file命令\\\"): No such file or directory\\n\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"**解决方法：**\\n32位系统：[ln](#/ln \\\"ln命令\\\") -s /usr/local/lib/libinotifytools.so.0 /usr/lib/libinotifytools.so.0\\n64位系统：ln -s /usr/local/lib/libinotifytools.so.0 /usr/lib64/libinotifytools.so.0\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"inotifywait命令使用\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"#!/bin/bash\\n#filename watchdir.sh\\npath=$1\\n/usr/local/bin/inotifywait -mrq --timefmt '%d/%m/%y/%H:%M' --format '%T %[w](#/w \\\"w命令\\\") %f' -e modify,delete,create,attrib $path\\n\\n执行输出：\\n./watchdir.sh /data/wsdata/tools/\\n04/01/13/16:34 /data/wsdata/tools/ .j.jsp.swp\\n04/01/13/16:34 /data/wsdata/tools/ .j.jsp.swx\\n04/01/13/16:34 /data/wsdata/tools/ .j.jsp.swx\\n04/01/13/16:34 /data/wsdata/tools/ .j.jsp.swp\\n04/01/13/16:34 /data/wsdata/tools/ .j.jsp.swp\\n04/01/13/16:34 /data/wsdata/tools/ .j.jsp.swp\\n04/01/13/16:34 /data/wsdata/tools/ .j.jsp.swp\\n04/01/13/16:34 /data/wsdata/tools/ .j.jsp.swp\\n04/01/13/16:35 /data/wsdata/tools/ 4913\\n04/01/13/16:35 /data/wsdata/tools/ 4913\\n04/01/13/16:35 /data/wsdata/tools/ 4913\\n04/01/13/16:35 /data/wsdata/tools/ j.jsp\\n04/01/13/16:35 /data/wsdata/tools/ j.jsp\\n04/01/13/16:35 /data/wsdata/tools/ j.jsp\\n04/01/13/16:35 /data/wsdata/tools/ j.jsp~\\n04/01/13/16:35 /data/wsdata/tools/ .j.jsp.swp\\n\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"inotifywait命令参数\")]), _vm._v(\" \"), _c('ul', [_c('li', [_c('code', {\n    pre: true\n  }, [_vm._v(\"-m\")]), _vm._v(\"是要持续监视变化。\")]), _vm._v(\" \"), _c('li', [_c('code', {\n    pre: true\n  }, [_vm._v(\"-r\")]), _vm._v(\"使用递归形式监视目录。\")]), _vm._v(\" \"), _c('li', [_c('code', {\n    pre: true\n  }, [_vm._v(\"-q\")]), _vm._v(\"减少冗余信息，只打印出需要的信息。\")]), _vm._v(\" \"), _c('li', [_c('code', {\n    pre: true\n  }, [_vm._v(\"-e\")]), _vm._v(\"指定要监视的事件列表。\")]), _vm._v(\" \"), _c('li', [_c('code', {\n    pre: true\n  }, [_vm._v(\"--timefmt\")]), _vm._v(\"是指定时间的输出格式。\")]), _vm._v(\" \"), _c('li', [_c('code', {\n    pre: true\n  }, [_vm._v(\"--format\")]), _vm._v(\"指定文件变化的详细信息。\")])]), _vm._v(\" \"), _c('h4', [_vm._v(\"可监听的事件\")]), _vm._v(\" \"), _c('table', {\n    staticStyle: {\n      \"width\": \"100%\"\n    },\n    attrs: {\n      \"border\": \"0\",\n      \"height\": \"193\",\n      \"width\": \"74\"\n    }\n  }, [_c('tbody', [_c('tr', [_c('th', [_vm._v(\"事件\")]), _vm._v(\" \"), _c('th', [_vm._v(\"描述\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"access\")]), _vm._v(\" \"), _c('td', [_vm._v(\"**访问**，读取文件。\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"modify\")]), _vm._v(\" \"), _c('td', [_vm._v(\"**修改**，文件内容被修改。\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"attrib\")]), _vm._v(\" \"), _c('td', [_vm._v(\"**属性**，文件元数据被修改。\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"move\")]), _vm._v(\" \"), _c('td', [_vm._v(\"**移动**，对文件进行移动操作。\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"create\")]), _vm._v(\" \"), _c('td', [_vm._v(\"**创建**，生成新文件\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"open\")]), _vm._v(\" \"), _c('td', [_vm._v(\"**打开**，对文件进行打开操作。\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"close\")]), _vm._v(\" \"), _c('td', [_vm._v(\"**关闭**，对文件进行关闭操作。\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"delete\")]), _vm._v(\" \"), _c('td', [_vm._v(\"**删除**，文件被删除。\")])])])])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-dbb06216\",\"hasScoped\":false}!./~/vue-loader/lib/selector.js?type=template&index=0!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/inotifywait.md\n// module id = 1637\n// module chunks = 342","module.exports = require(\"!!vue-loader!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./inotifywait.md\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./command/inotifywait.md\n// module id = 209\n// module chunks = 342","var Component = require(\"!../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  null,\n  /* template */\n  require(\"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-dbb06216\\\",\\\"hasScoped\\\":false}!../node_modules/vue-loader/lib/selector?type=template&index=0!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./inotifywait.md\"),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/inotifywait.md\n// module id = 797\n// module chunks = 342"],"sourceRoot":""}