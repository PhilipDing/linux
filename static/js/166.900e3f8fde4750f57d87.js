webpackJsonp([166],{1366:function(n,t){n.exports={render:function(){var n=this,t=n.$createElement;n._self._c;return n._m(0)},staticRenderFns:[function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("section",[e("p",[e("strong",[n._v("restorecon命令")]),n._v("用来恢复SELinux文件属性即恢复文件的安全上下文。")]),n._v(" "),e("h3",[n._v("语法")]),n._v(" "),e("pre",{pre:!0},[e("code",{attrs:{"v-pre":""}},[n._v("restorecon [-iFnrRv] [-e excludedir ] [-o filename ] [-f filename | pathname...]\n")])]),n._v(" "),e("h3",[n._v("选项")]),n._v(" "),e("pre",{pre:!0},[e("code",{attrs:{"v-pre":""}},[n._v("-i：忽略不存在的文件。\n-f：infilename 文件 infilename 中记录要处理的文件。\n-e：directory 排除目录。\n-R/-r：递归处理目录。\n-n：不改变文件标签。\n-o/outfilename：保存文件列表到 outfilename，在文件不正确情况下。\n-v：将过程显示到屏幕上。\n-F：强制恢复文件安全语境。\n")])]),n._v(" "),e("h3",[n._v("实例")]),n._v(" "),e("p",[n._v("假设CentOS安装了apache，网页默认的主目录是"),e("code",{pre:!0},[n._v("/var/www/html")]),n._v("，我们经常遇到这样的问题，在其他目录中创建了一个网页文件，然后用"),e("a",{attrs:{href:"#/mv",title:"mv命令"}},[n._v("mv")]),n._v("移动到网页默认目录"),e("code",{pre:!0},[n._v("/var/www/html")]),n._v("中，但是在浏览器中却打不开这个文件，这很可能是因为这个文件的SELinux配置信息是继承原来那个目录的，与"),e("code",{pre:!0},[n._v("/var/www/html")]),n._v("目录不同，使用mv移动的时候，这个SELinux配置信息也一起移动过来了，从而导致无法打开页面，具体请看下面的实例：")]),n._v(" "),e("pre",{staticStyle:{color:"rgb(0, 0, 0)","font-style":"normal","font-variant":"normal","font-weight":"normal","letter-spacing":"normal","line-height":"normal",orphans:"auto","text-align":"start","text-indent":"0px","text-transform":"none",widows:"auto","word-spacing":"0px","-webkit-text-stroke-width":"0px"}},[n._v('/*使用CentOS举例,如果默认没有安装apache，确保网络连接，使用下面的命令安装*/\n[root@linuxde.net ~]# [yum](#/yum "yum命令") [install](#/install "install命令") [httpd](#/httpd "httpd命令")\n /*我们在root的家目录新建一个html文件*/\n[root@linuxde.net ~]# [pwd](#/pwd "pwd命令")\n/root\n\n[root@linuxde.net ~]# [vi](#/vi "vi命令") index.html\n\n/*随便输入一段文字，保存退出*/\nwelcome to www.linuxde.net\n\n/*将这个文件mv到网页默认目录下*/\n[root@linuxde.net ~]# mv index.html /var/www/html/\n\n/*\n * 这个时候我们使用firefox浏览器输入127.0.0.1/index.html发现打不开，\n * 查看一下SELinux的日志文件，发现了下面这一段报错信息，从这个报错信息不难看出，\n * 进程httpd访问网页主目录中的index.html时被SELinux阻止，原因是因为，SELinux配置信息不正确,\n * 正确的SELinux配置信息应该是scontext=后面的部分，\n * 而index.html文件的SELinux配置信息却是tcontext=后面的部分，\n * 从tcontext=的第三段“admin_home_t”不难看出，这个文件的SELinux配置信息是root用户家目录的。\n */\n[type](#/type "type命令")=AVC msg=audit(1378974214.610:465): avc:  denied  { open } for  pid=2359 [comm](#/comm "comm命令")="httpd" path="/var/www/html/index.html" dev="sda1" ino=1317685 scontext=system_u:system_r:httpd_t:s0 tcontext=unconfined_u:object_r:admin_home_t:s0 tclass=[file](#/file "file命令")\n\n/*使用[ls](#/ls "ls命令") -Z也可以看出,文件和目录的SELinux信息不匹配*/\n[root@linuxde.net html]# ls -Z /var/www/html/\n.... unconfined_u:object_r:admin_home_t:s0 index.html\n\n[root@linuxde.net html]# ls -Zd /var/www/html/\n.... system_u:object_r:httpd_sys_content_t:s0 /var/www/html/\n\n/*使用restorecon来恢复网页主目录中所有文件的SELinux配置信息(如果目标为一个目录，可以添加-R参数递归)*/\n[root@linuxde.net html]# restorecon -R /var/www/html/\n```')])])}]}},389:function(n,t,e){n.exports=e(977)},977:function(n,t,e){var o=e(5)(null,e(1366),null,null,null);n.exports=o.exports}});
//# sourceMappingURL=166.900e3f8fde4750f57d87.js.map