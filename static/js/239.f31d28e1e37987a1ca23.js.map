{"version":3,"sources":["webpack:///static/js/239.f31d28e1e37987a1ca23.js","webpack:///./command/nano.md?b27e","webpack:///./command/nano.md","webpack:///./command/nano.md?5cb2"],"names":["webpackJsonp","1464","module","exports","render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","_v","attrs","href","title","pre","v-pre","313","__webpack_require__","901","Component"],"mappings":"AAAAA,cAAc,MAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAgBC,OAAA,WAAmB,GAAAC,GAAAC,KAAaC,EAAAF,EAAAG,cAA0BH,GAAAI,MAAAC,EAC1E,OAAAL,GAAAM,GAAA,IACCC,iBAAA,WAA+B,GAAAP,GAAAC,KAAaC,EAAAF,EAAAG,eAA0BE,EAAAL,EAAAI,MAAAC,IAAAH,CACvE,OAAAG,GAAA,WAAAA,EAAA,KAAAA,EAAA,UAAAL,EAAAQ,GAAA,UAAAR,EAAAQ,GAAA,qCAAAH,EAAA,KACAI,OACAC,KAAA,OACAC,MAAA,UAEGX,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,sDAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,oJAAAH,EAAA,QACHO,KAAA,IACGZ,EAAAQ,GAAA,qBAAAR,EAAAQ,GAAA,UAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHO,KAAA,IACGP,EAAA,QACHI,OACAI,QAAA,MAEGb,EAAAQ,GAAA,mCAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHO,KAAA,IACGP,EAAA,QACHI,OACAI,QAAA,MAEGb,EAAAQ,GAAA,oqEAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAA,EAAA,UAAAL,EAAAQ,GAAA,YAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAA,EAAA,MAAAL,EAAAQ,GAAA,oBAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,sBAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAA,EAAA,UAAAL,EAAAQ,GAAA,gBAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAA,EAAA,MAAAL,EAAAQ,GAAA,iBAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,oBAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAA,EAAA,UAAAL,EAAAQ,GAAA,iBAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,kJAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAA,EAAA,UAAAL,EAAAQ,GAAA,UAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,sEAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAA,EAAA,UAAAL,EAAAQ,GAAA,UAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAA,EAAA,MAAAL,EAAAQ,GAAA,gBAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,kBAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAA,EAAA,UAAAL,EAAAQ,GAAA,UAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,sBAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAA,EAAA,UAAAL,EAAAQ,GAAA,UAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,aAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,yJDUGM,IACA,SAAUjB,EAAQC,EAASiB,GEjCjClB,EAAAC,QAAAiB,EAAA,MFuCMC,IACA,SAAUnB,EAAQC,EAASiB,GGxCjC,GAAAE,GAAAF,EAAA,GAEA,KAEAA,EAAA,MAEA,KAEA,KAEA,KAGAlB,GAAAC,QAAAmB,EAAAnB","file":"static/js/239.f31d28e1e37987a1ca23.js","sourcesContent":["webpackJsonp([239],{\n\n/***/ 1464:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"nano\")]), _vm._v(\"是一个字符终端的文本编辑器，有点像DOS下的editor程序。它比\"), _c('a', {\n    attrs: {\n      \"href\": \"#/vi\",\n      \"title\": \"vi命令\"\n    }\n  }, [_vm._v(\"vi\")]), _vm._v(\"/vim要简单得多，比较适合Linux初学者使用。某些Linux发行版的默认编辑器就是nano。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"nano命令可以打开指定文件进行编辑，默认情况下它会自动断行，即在一行中输入过长的内容时自动拆分成几行，但用这种方式来处理某些文件可能会带来问题，比如Linux系统的配置文件，自动断行就会使本来只能写在一行上的内容折断成多行了，有可能造成系统不灵了。因此，如果你想避免这种情况出现，就加上\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"-[w](#/w \\\"w命令\\\")\")]), _vm._v(\"选项吧。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"nano [选项] [[+行,列] 文件名]...\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\" -h, -?         --[help](#/help \\\"help命令\\\")                  显示此信息\\n +行,列                                 从所指列数与行数开始\\n -A             --smarthome             启用智能 HOME 键\\n -B             --backup                储存既有文件的备份\\n -C <目录>      --backupdir=<目录>      用以储存独一备份文件的目录\\n -D             --boldtext              用粗体替代颜色反转\\n -E             --tabstospaces          将已输入的制表符转换为空白\\n -F             --multibuffer           启用多重文件缓冲区功能\\n -H             --historylog            记录与读取搜索/替换的历史字符串\\n -I             --ignorercfiles         不要参考nanorc 文件\\n -K             --rebindkeypad          修正数字键区按键混淆问题\\n -L             --nonewlines            不要将换行加到文件末端\\n -N             --noconvert             不要从 DOS/Mac 格式转换\\n -O             --morespace             编辑时多使用一行\\n -Q <字符串>    --quotestr=<字符串>     引用代表字符串\\n -R             --restricted            限制模式\\n -S             --smooth                按行滚动而不是半屏\\n -T <#列数>     --tabsize=<#列数>       设定制表符宽度为 #列数\\n -U             --quickblank            状态行快速闪动\\n -V             --version               显示版本资讯并离开\\n -W             --wordbounds            更正确地侦测单字边界\\n -Y <字符串>    --syntax=<字符串>       用于加亮的语法定义\\n -c             --const                 持续显示游标位置\\n -d             --rebinddelete          修正退格键/删除键混淆问题\\n -i             --autoindent            自动缩进新行\\n -k             --[cut](#/cut \\\"cut命令\\\")                   从游标剪切至行尾\\n -l             --nofollow              不要依照符号连结，而是覆盖\\n -m             --mouse                 启用鼠标功能\\n -o <目录>      --operatingdir=<目录>   设定操作目录\\n -p             --preserve              保留XON (^Q) 和XOFF (^S) 按键\\n -q             --quiet                 沉默忽略启动问题, 比如rc 文件错误\\n -r <#列数>     --fill=<#列数>          设定折行宽度为 #列数\\n -s <程序>      --speller=<程序>        启用替代的拼写检查程序\\n -t             --[tempfile](#/tempfile \\\"tempfile命令\\\")              离开时自动储存，不要提示\\n -u             --undo                  允许通用撤销[试验性特性]\\n -v             --view                  查看(只读)模式\\n -w             --nowrap                不要自动换行\\n -x             --nohelp                不要显示辅助区\\n -z             --suspend               启用暂停功能\\n -$             --softwrap              启用软换行\\n -a, -b, -e,\\n -f, -g, -j                             (忽略，为与[pico](#/pico \\\"pico命令\\\") 相容)\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"用法\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"光标控制\")])]), _vm._v(\" \"), _c('ul', [_c('li', [_vm._v(\"移动光标：使用用方向键移动。\")]), _vm._v(\" \"), _c('li', [_vm._v(\"选择文字：按住鼠标左键拖到。\")])]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"复制、剪贴和粘贴\")])]), _vm._v(\" \"), _c('ul', [_c('li', [_vm._v(\"复制一整行：Alt+6\")]), _vm._v(\" \"), _c('li', [_vm._v(\"剪贴一整行：Ctrl+K\")])]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"粘贴：Ctrl+U\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"如果需要复制／剪贴多行或者一行中的一部分，先将光标移动到需要复制／剪贴的文本的开头，按Ctrl+6（或者Alt+A）做标记，然后移动光标到 待复制／剪贴的文本末尾。这时选定的文本会反白，用Alt+6来复制，Ctrl+K来剪贴。若在选择文本过程中要取消，只需要再按一次Ctrl+6。\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"搜索\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"按Ctrl+W，然后输入你要搜索的关键字，回车确定。这将会定位到第一个匹配的文本，接着可以用Alt+W来定位到下一个匹配的文本。\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"翻页\")])]), _vm._v(\" \"), _c('ul', [_c('li', [_vm._v(\"Ctrl+Y到上一页\")]), _vm._v(\" \"), _c('li', [_vm._v(\"Ctrl+V到下一页\")])]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"保存\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"使用Ctrl+O来保存所做的修改\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"退出\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"按Ctrl+X\")]), _vm._v(\" \"), _c('p', [_vm._v(\"如果你修改了文件，下面会询问你是否需要保存修改。输入Y确认保存，输入N不保存，按Ctrl+C取消返回。如果输入了Y，下一步会让你输入想要保存的文件名。如果不需要修改文件名直接回车就行；若想要保存成别的名字（也就是另存为）则输入新名称然后确 定。这个时候也可用Ctrl+C来取消返回。\")])])\n}]}\n\n/***/ }),\n\n/***/ 313:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(901);\n\n/***/ }),\n\n/***/ 901:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(5)(\n  /* script */\n  null,\n  /* template */\n  __webpack_require__(1464),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/239.f31d28e1e37987a1ca23.js","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"nano\")]), _vm._v(\"是一个字符终端的文本编辑器，有点像DOS下的editor程序。它比\"), _c('a', {\n    attrs: {\n      \"href\": \"#/vi\",\n      \"title\": \"vi命令\"\n    }\n  }, [_vm._v(\"vi\")]), _vm._v(\"/vim要简单得多，比较适合Linux初学者使用。某些Linux发行版的默认编辑器就是nano。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"nano命令可以打开指定文件进行编辑，默认情况下它会自动断行，即在一行中输入过长的内容时自动拆分成几行，但用这种方式来处理某些文件可能会带来问题，比如Linux系统的配置文件，自动断行就会使本来只能写在一行上的内容折断成多行了，有可能造成系统不灵了。因此，如果你想避免这种情况出现，就加上\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"-[w](#/w \\\"w命令\\\")\")]), _vm._v(\"选项吧。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"nano [选项] [[+行,列] 文件名]...\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\" -h, -?         --[help](#/help \\\"help命令\\\")                  显示此信息\\n +行,列                                 从所指列数与行数开始\\n -A             --smarthome             启用智能 HOME 键\\n -B             --backup                储存既有文件的备份\\n -C <目录>      --backupdir=<目录>      用以储存独一备份文件的目录\\n -D             --boldtext              用粗体替代颜色反转\\n -E             --tabstospaces          将已输入的制表符转换为空白\\n -F             --multibuffer           启用多重文件缓冲区功能\\n -H             --historylog            记录与读取搜索/替换的历史字符串\\n -I             --ignorercfiles         不要参考nanorc 文件\\n -K             --rebindkeypad          修正数字键区按键混淆问题\\n -L             --nonewlines            不要将换行加到文件末端\\n -N             --noconvert             不要从 DOS/Mac 格式转换\\n -O             --morespace             编辑时多使用一行\\n -Q <字符串>    --quotestr=<字符串>     引用代表字符串\\n -R             --restricted            限制模式\\n -S             --smooth                按行滚动而不是半屏\\n -T <#列数>     --tabsize=<#列数>       设定制表符宽度为 #列数\\n -U             --quickblank            状态行快速闪动\\n -V             --version               显示版本资讯并离开\\n -W             --wordbounds            更正确地侦测单字边界\\n -Y <字符串>    --syntax=<字符串>       用于加亮的语法定义\\n -c             --const                 持续显示游标位置\\n -d             --rebinddelete          修正退格键/删除键混淆问题\\n -i             --autoindent            自动缩进新行\\n -k             --[cut](#/cut \\\"cut命令\\\")                   从游标剪切至行尾\\n -l             --nofollow              不要依照符号连结，而是覆盖\\n -m             --mouse                 启用鼠标功能\\n -o <目录>      --operatingdir=<目录>   设定操作目录\\n -p             --preserve              保留XON (^Q) 和XOFF (^S) 按键\\n -q             --quiet                 沉默忽略启动问题, 比如rc 文件错误\\n -r <#列数>     --fill=<#列数>          设定折行宽度为 #列数\\n -s <程序>      --speller=<程序>        启用替代的拼写检查程序\\n -t             --[tempfile](#/tempfile \\\"tempfile命令\\\")              离开时自动储存，不要提示\\n -u             --undo                  允许通用撤销[试验性特性]\\n -v             --view                  查看(只读)模式\\n -w             --nowrap                不要自动换行\\n -x             --nohelp                不要显示辅助区\\n -z             --suspend               启用暂停功能\\n -$             --softwrap              启用软换行\\n -a, -b, -e,\\n -f, -g, -j                             (忽略，为与[pico](#/pico \\\"pico命令\\\") 相容)\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"用法\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"光标控制\")])]), _vm._v(\" \"), _c('ul', [_c('li', [_vm._v(\"移动光标：使用用方向键移动。\")]), _vm._v(\" \"), _c('li', [_vm._v(\"选择文字：按住鼠标左键拖到。\")])]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"复制、剪贴和粘贴\")])]), _vm._v(\" \"), _c('ul', [_c('li', [_vm._v(\"复制一整行：Alt+6\")]), _vm._v(\" \"), _c('li', [_vm._v(\"剪贴一整行：Ctrl+K\")])]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"粘贴：Ctrl+U\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"如果需要复制／剪贴多行或者一行中的一部分，先将光标移动到需要复制／剪贴的文本的开头，按Ctrl+6（或者Alt+A）做标记，然后移动光标到 待复制／剪贴的文本末尾。这时选定的文本会反白，用Alt+6来复制，Ctrl+K来剪贴。若在选择文本过程中要取消，只需要再按一次Ctrl+6。\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"搜索\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"按Ctrl+W，然后输入你要搜索的关键字，回车确定。这将会定位到第一个匹配的文本，接着可以用Alt+W来定位到下一个匹配的文本。\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"翻页\")])]), _vm._v(\" \"), _c('ul', [_c('li', [_vm._v(\"Ctrl+Y到上一页\")]), _vm._v(\" \"), _c('li', [_vm._v(\"Ctrl+V到下一页\")])]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"保存\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"使用Ctrl+O来保存所做的修改\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"退出\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"按Ctrl+X\")]), _vm._v(\" \"), _c('p', [_vm._v(\"如果你修改了文件，下面会询问你是否需要保存修改。输入Y确认保存，输入N不保存，按Ctrl+C取消返回。如果输入了Y，下一步会让你输入想要保存的文件名。如果不需要修改文件名直接回车就行；若想要保存成别的名字（也就是另存为）则输入新名称然后确 定。这个时候也可用Ctrl+C来取消返回。\")])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-60bc2b7a\",\"hasScoped\":false}!./~/vue-loader/lib/selector.js?type=template&index=0!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/nano.md\n// module id = 1464\n// module chunks = 239","module.exports = require(\"!!vue-loader!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./nano.md\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./command/nano.md\n// module id = 313\n// module chunks = 239","var Component = require(\"!../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  null,\n  /* template */\n  require(\"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-60bc2b7a\\\",\\\"hasScoped\\\":false}!../node_modules/vue-loader/lib/selector?type=template&index=0!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./nano.md\"),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/nano.md\n// module id = 901\n// module chunks = 239"],"sourceRoot":""}