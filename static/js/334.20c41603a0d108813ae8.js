webpackJsonp([334],{1560:function(p,e){p.exports={render:function(){var p=this,e=p.$createElement;p._self._c;return p._m(0)},staticRenderFns:[function(){var p=this,e=p.$createElement,t=p._self._c||e;return t("section",[t("p",[t("strong",[p._v("ip6tables命令")]),p._v("和"),t("a",{attrs:{href:"#/iptables",title:"iptables命令"}},[p._v("iptables")]),p._v("一样，都是linux中防火墙软件，不同的是ip6tables采用的TCP/"),t("a",{attrs:{href:"#/ip",title:"ip命令"}},[p._v("ip")]),p._v("协议为IPv6。")]),p._v(" "),t("h3",[p._v("语法")]),p._v(" "),t("pre",{pre:!0},[t("code",{attrs:{"v-pre":""}},[p._v("ip6tables(选项)\n")])]),p._v(" "),t("h3",[p._v("选项")]),p._v(" "),t("pre",{pre:!0},[t("code",{attrs:{"v-pre":""}},[p._v("-t<表>：指定要操纵的表；\n-A：向规则链中添加条目；\n-D：从规则链中删除条目；\n-i：向规则链中插入条目；\n-R：替换规则链中的条目；\n-L：显示规则链中已有的条目；\n-F：清楚规则链中已有的条目；\n-Z：清空规则链中的数据包计算器和字节计数器；\n-N：创建新的用户自定义规则链；\n-P：定义规则链中的默认目标；\n-h：显示帮助信息；\n-p：指定要匹配的数据包协议类型；\n-s：指定要匹配的数据包源ip地址；\n-j<目标>：指定要跳转的目标；\n-i<网络接口>：指定数据包进入本机的网络接口；\n-o<网络接口>：指定数据包要离开本机所使用的网络接口。\n-c<计数器>：在执行插入操作（insert），追加操作（append），替换操作（replace）时初始化包计数器和字节计数器。\n")])]),p._v(" "),t("h3",[p._v("实例")]),p._v(" "),t("p",[p._v("在命令行窗口输入下面的指令就可以查看当前的 IPv6 防火墙配置：")]),p._v(" "),t("pre",{pre:!0},[t("code",{attrs:{"v-pre":""}},[p._v('ip6tables -[nl](#/nl "nl命令") --line-numbers\n')])]),p._v(" "),t("p",[t("strong",[p._v("/etc/sysconfig/ip6tables文件")])]),p._v(" "),t("p",[p._v("使用编辑器编辑"),t("code",{pre:!0},[p._v("/etc/sysconfig/ip6tables")]),p._v("文件：")]),p._v(" "),t("pre",{pre:!0},[t("code",{attrs:{"v-pre":""}},[p._v('[vi](#/vi "vi命令") /etc/sysconfig/ip6tables\n')])]),p._v(" "),t("p",[p._v("可能会看到下面的默认 ip6tables 规则：")]),p._v(" "),t("pre",{pre:!0},[t("code",{attrs:{"v-pre":""}},[p._v('*filter\n:INPUT [accept](#/accept "accept命令") [0:0]\n:FORWARD ACCEPT [0:0]\n:OUTPUT ACCEPT [0:0]\n:RH-Firewall-1-INPUT - [0:0]\n-A INPUT -j RH-Firewall-1-INPUT\n-A FORWARD -j RH-Firewall-1-INPUT\n-A RH-Firewall-1-INPUT -i lo -j ACCEPT\n-A RH-Firewall-1-INPUT -p icmpv6 -j ACCEPT\n-A RH-Firewall-1-INPUT -p 50 -j ACCEPT\n-A RH-Firewall-1-INPUT -p 51 -j ACCEPT\n-A RH-Firewall-1-INPUT -p udp --dport 5353 -d ff02::fb -j ACCEPT\n-A RH-Firewall-1-INPUT -p udp -m udp --dport 631 -j ACCEPT\n-A RH-Firewall-1-INPUT -p tcp -m tcp --dport 631 -j ACCEPT\n-A RH-Firewall-1-INPUT -p udp -m udp --dport 32768:61000 -j ACCEPT\n-A RH-Firewall-1-INPUT -p tcp -m tcp --dport 32768:61000 ! --syn -j ACCEPT\n-A RH-Firewall-1-INPUT -m tcp -p tcp --dport 22 -j ACCEPT\n-A RH-Firewall-1-INPUT -j [reject](#/reject "reject命令") --reject-with icmp6-adm-prohibited\nCOMMIT\n')])]),p._v(" "),t("p",[p._v("与 IPv4 的 iptables 规则类似，但又不完全相同。")]),p._v(" "),t("p",[p._v("要开启 80 端口（HTTP 服务器端口），在 COMMIT 一行之前添加如下规则：")]),p._v(" "),t("pre",{pre:!0},[t("code",{attrs:{"v-pre":""}},[p._v("-A RH-Firewall-1-INPUT -m tcp -p tcp --dport 80 -j ACCEPT\n")])]),p._v(" "),t("p",[t("code",{pre:!0},[p._v("-p tcp")]),p._v("表示仅针对 tcp 协议的通信。"),t("code",{pre:!0},[p._v("--dport")]),p._v("指定端口号。")]),p._v(" "),t("p",[p._v("要开启 53 端口（DNS 服务器端口），在 COMMIT 一行之前添加如下规则：")]),p._v(" "),t("pre",{pre:!0},[t("code",{attrs:{"v-pre":""}},[p._v("-A RH-Firewall-1-INPUT -m tcp -p tcp --dport 53 -j ACCEPT\n-A RH-Firewall-1-INPUT -m udp -p tcp --dport 53 -j ACCEPT\n")])]),p._v(" "),t("p",[p._v("同时针对 tcp 和 udp 协议开启 53 端口。")]),p._v(" "),t("p",[p._v("要开启 443 端口，在 COMMIT 一行之前添加如下规则：")]),p._v(" "),t("pre",{pre:!0},[t("code",{attrs:{"v-pre":""}},[p._v("-A RH-Firewall-1-INPUT -m tcp -p tcp --dport 443 -j ACCEPT\n")])]),p._v(" "),t("p",[p._v("要开启 25 端口（SMTP 邮件服务器端口），在 COMMIT 一行之前添加如下规则：")]),p._v(" "),t("pre",{pre:!0},[t("code",{attrs:{"v-pre":""}},[p._v("-A RH-Firewall-1-INPUT -m tcp -p tcp --dport 25 -j ACCEPT\n")])]),p._v(" "),t("p",[p._v("对于那些没有特定规则与之匹配的数据包，可能是我们不想要的，多半是有问题的。我们可能也希望在丢弃（DROP）之前记录它们。此时，可以将最后一行：")]),p._v(" "),t("pre",{pre:!0},[t("code",{attrs:{"v-pre":""}},[p._v("-A RH-Firewall-1-INPUT -j REJECT --reject-with icmp6-adm-prohibited\nCOMMIT\n")])]),p._v(" "),t("p",[p._v("改为：")]),p._v(" "),t("pre",{pre:!0},[t("code",{attrs:{"v-pre":""}},[p._v("-A RH-Firewall-1-INPUT -j LOG\n-A RH-Firewall-1-INPUT -j DROP\nCOMMIT\n")])]),p._v(" "),t("p",[p._v("保存并关闭该文件。然后重新启动 ip6tables 防火墙：")]),p._v(" "),t("pre",{pre:!0},[t("code",{attrs:{"v-pre":""}},[p._v('# [service](#/service "service命令") ip6tables restart\n')])]),p._v(" "),t("p",[p._v("然后重新查看 ip6tables 规则，可以看到如下所示的输出：")]),p._v(" "),t("pre",{pre:!0},[t("code",{attrs:{"v-pre":""}},[p._v("# ip6tables -vnL --line-numbers\n")])]),p._v(" "),t("p",[p._v("输出示例：")]),p._v(" "),t("pre",{pre:!0},[t("code",{attrs:{"v-pre":""}},[p._v("Chain INPUT (policy ACCEPT 0 packets, 0 bytes)\nnum   pkts bytes target     prot opt in     out     source               destination\n1    42237 3243K RH-Firewall-1-INPUT  all      *      *       ::/0                 ::/0\nChain FORWARD (policy ACCEPT 0 packets, 0 bytes)\nnum   pkts bytes target     prot opt in     out     source               destination\n1        0     0 RH-Firewall-1-INPUT  all      *      *       ::/0                 ::/0\nChain OUTPUT (policy ACCEPT 12557 packets, 2042K bytes)\nnum   pkts bytes target     prot opt in     out     source               destination\nChain RH-Firewall-1-INPUT (2 references)\nnum   pkts bytes target     prot opt in     out     source               destination\n1        6   656 ACCEPT     all      lo     *       ::/0                 ::/0\n2    37519 2730K ACCEPT     icmpv6    *      *       ::/0                 ::/0\n3        0     0 ACCEPT     esp      *      *       ::/0                 ::/0\n4        0     0 ACCEPT     ah       *      *       ::/0                 ::/0\n5      413 48385 ACCEPT     udp      *      *       ::/0                 ff02::fb/128       udp dpt:5353\n6        0     0 ACCEPT     udp      *      *       ::/0                 ::/0               udp dpt:631\n7        0     0 ACCEPT     tcp      *      *       ::/0                 ::/0               tcp dpt:631\n8      173 79521 ACCEPT     udp      *      *       ::/0                 ::/0               udp dpts:32768:61000\n9        0     0 ACCEPT     tcp      *      *       ::/0                 ::/0               tcp dpts:32768:61000 flags:!0x16/0x02\n10       0     0 ACCEPT     tcp      *      *       ::/0                 ::/0               tcp dpt:22\n11       0     0 ACCEPT     tcp      *      *       ::/0                 ::/0               tcp dpt:80\n12       0     0 ACCEPT     tcp      *      *       ::/0                 ::/0               tcp dpt:53\n13    4108  380K ACCEPT     udp      *      *       ::/0                 ::/0               udp dpt:53\n14      18  4196 REJECT     all      *      *       ::/0                 ::/0\n")])]),p._v(" "),t("p",[t("strong",[p._v("IPv6 私有 IP")])]),p._v(" "),t("p",[p._v("IPv4 通常默认即可保护内部局域网私有 IP 上的主机。但是 IPv6 的地址非常丰富，不再需要使用类似 NAT 等协议的私有网络。这样一来，所有的内部主机都可以拥有公网 IP 而直接连接到互联网，也就同时暴露于互联网上的各种威胁之中了。那么，如何配置 IPv6 防火墙使其默认将除了 ping6 请求之外的所有输入数据包都丢弃呢？可以使用"),t("a",{attrs:{href:"http://tools.ietf.org/html/rfc4193"}},[p._v("FC00::/7")]),p._v(" 前缀来标识本地 IPv6 单播地址。")]),p._v(" "),t("p",[t("strong",[p._v("允许特定的 ICMPv6 通信")])]),p._v(" "),t("p",[p._v("使用 IPv6 的时候需要允许比 IPv4 更多类型的 ICMP 通信以保证路由和 IP 地址自动配置等功能正常工作。有时候，如果你的规则设置太过苛刻，可能都无法分配到正确的 IPv6 地址。当然，不使用 DHCP 而是手动配置 IP 地址的除外。")]),p._v(" "),t("p",[p._v("下面是一些比较常见的 ipv6-icmp 配置实例：")]),p._v(" "),t("pre",{pre:!0},[t("code",{attrs:{"v-pre":""}},[p._v(':ICMPv6 - [0:0]\n# Approve certain ICMPv6 types and all outgoing ICMPv6\n# http://forum.linode.com/viewtopic.[php](#/php "php命令")?p=39840#39840\n-A INPUT -p icmpv6 -j ICMPv6\n-A ICMPv6 -p icmpv6 --icmpv6-[type](#/type "type命令") [echo](#/echo "echo命令")-request -j ACCEPT\n-A ICMPv6 -p icmpv6 --icmpv6-type destination-unreachable -j ACCEPT\n-A ICMPv6 -p icmpv6 --icmpv6-type packet-too-big -j ACCEPT\n-A ICMPv6 -p icmpv6 --icmpv6-type [time](#/time "time命令")-exceeded -j ACCEPT\n-A ICMPv6 -p icmpv6 --icmpv6-type parameter-problem -j ACCEPT\n-A ICMPv6 -p icmpv6 --icmpv6-type router-solicitation -j ACCEPT\n-A ICMPv6 -p icmpv6 --icmpv6-type router-advertisement -j ACCEPT\n-A ICMPv6 -p icmpv6 --icmpv6-type neighbour-solicitation -j ACCEPT\n-A ICMPv6 -p icmpv6 --icmpv6-type neighbour-advertisement -j ACCEPT\n-A ICMPv6 -p icmpv6 --icmpv6-type redirect -j ACCEPT\n-A ICMPv6 -p icmpv6 --icmpv6-type 141 -j ACCEPT\n-A ICMPv6 -p icmpv6 --icmpv6-type 142 -j ACCEPT\n-A ICMPv6 -p icmpv6 --icmpv6-type 148 -j ACCEPT\n-A ICMPv6 -p icmpv6 --icmpv6-type 149 -j ACCEPT\n-A ICMPv6 -p icmpv6 --icmpv6-type 130 -s fe80::/10 -j ACCEPT\n-A ICMPv6 -p icmpv6 --icmpv6-type 131 -s fe80::/10 -j ACCEPT\n-A ICMPv6 -p icmpv6 --icmpv6-type 132 -s fe80::/10 -j ACCEPT\n-A ICMPv6 -p icmpv6 --icmpv6-type 143 -s fe80::/10 -j ACCEPT\n-A ICMPv6 -p icmpv6 --icmpv6-type 151 -s fe80::/10 -j ACCEPT\n-A ICMPv6 -p icmpv6 --icmpv6-type 152 -s fe80::/10 -j ACCEPT\n-A ICMPv6 -p icmpv6 --icmpv6-type 153 -s fe80::/10 -j ACCEPT\n-A ICMPv6 -j RETURN\n-A OUTPUT -p icmpv6 -j ACCEPT\n')])])])}]}},217:function(p,e,t){p.exports=t(806)},806:function(p,e,t){var v=t(5)(null,t(1560),null,null,null);p.exports=v.exports}});
//# sourceMappingURL=334.20c41603a0d108813ae8.js.map