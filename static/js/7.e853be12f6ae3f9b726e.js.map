{"version":3,"sources":["webpack:///static/js/7.e853be12f6ae3f9b726e.js","webpack:///./command/nethogs.md?30e2","webpack:///./command/nethogs.md","webpack:///./command/images/nethogs.jpg","webpack:///./command/nethogs.md?53f6"],"names":["webpackJsonp","1187","module","exports","__webpack_require__","render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","_v","attrs","href","title","pre","v-pre","src","alt","316","603","p","905","Component"],"mappings":"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","file":"static/js/7.e853be12f6ae3f9b726e.js","sourcesContent":["webpackJsonp([7],{\n\n/***/ 1187:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_vm._v(\"有很多适用于Linux系统的开源网络监视工具。比如说，你可以用命令iftop来检查带宽使用情况。\"), _c('a', {\n    attrs: {\n      \"href\": \"#/netstat\",\n      \"title\": \"netstat命令\"\n    }\n  }, [_vm._v(\"netstat\")]), _vm._v(\"用来查看接口统计报告，还有\"), _c('a', {\n    attrs: {\n      \"href\": \"#/top\",\n      \"title\": \"top命令\"\n    }\n  }, [_vm._v(\"top\")]), _vm._v(\"监控系统当前运行进程。但是如果你想要找一个能够按进程实时统计网络带宽利用率的工具，那么NetHogs值得一看。\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"NetHogs\")]), _vm._v(\"是一个开源的命令行工具（类似于Linux的top命令），用来按进程或程序实时统计网络带宽使用率。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"来自NetHogs项目网站:\")]), _vm._v(\" \"), _c('blockquote', [_c('p', [_vm._v(\"NetHogs是一个小型的net top工具，不像大多数工具那样拖慢每个协议或者是每个子网的速度而是按照进程进行带宽分组。NetHogs不需要依赖载入某个特殊的内核模块。如果发生了网络阻塞你可以启动NetHogs立即看到哪个PID造成的这种状况。这样就很容易找出哪个程序跑飞了然后突然占用你的带宽。\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"本文为你介绍如何在Unix/Linux操作系统下如何安装和使用NetHogs按进程监控网络带宽使用率。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"在RHEL、CentOS和Fedora下安装NetHogs\")]), _vm._v(\" \"), _c('p', [_vm._v(\"要安装NetHogs，你必须要启用你所用Linux下的EPEL源。然后运行下面的\"), _c('a', {\n    attrs: {\n      \"href\": \"#/yum\",\n      \"title\": \"yum命令\"\n    }\n  }, [_vm._v(\"yum\")]), _vm._v(\"命令下载安装NetHogs包。\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"# yum [install](#/install \\\"install命令\\\") nethogs\\n\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"在Ubuntu、Linux mint和Debian下安装NetHogs\")]), _vm._v(\" \"), _c('p', [_vm._v(\"键入\"), _c('a', {\n    attrs: {\n      \"href\": \"#/apt-get\",\n      \"title\": \"apt-get命令\"\n    }\n  }, [_vm._v(\"apt-get\")]), _vm._v(\"命令安装NetHogs包：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"$ [sudo](#/sudo \\\"sudo命令\\\") apt-get install nethogs\\n\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"NetHogs用法\")]), _vm._v(\" \"), _c('p', [_vm._v(\"在基于RedHat系统下键入如下命令启动NetHogs工具。\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"# nethogs\\n\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"在Debian/Ubuntu/Linux Mint下要执行NetHogs你必须拥有root权限：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"$ sudo nethogs\\n\\n\")])]), _vm._v(\" \"), _c('p', [_c('img', {\n    attrs: {\n      \"src\": __webpack_require__(603),\n      \"alt\": \"nethogs\"\n    }\n  })]), _vm._v(\" \"), _c('p', [_vm._v(\"Ubuntu 12.10 下的NetHogs预览\")]), _vm._v(\" \"), _c('p', [_vm._v(\"正如上图所示，send列和received列显示的是按照每个进程的流量统计。总的收发数据带宽在最下方，而且可以用交互命令控制排序，下面将要讨论这些交互命令。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"NetHogs 命令行参数\")]), _vm._v(\" \"), _c('p', [_vm._v(\"以下就是NetHogs命令行的参数，用-d来添加刷新频率参数，device name 用来检测给定的某个或者某些设备的带宽（默认是eth0）。例如：设置5秒钟的刷新频率，键入如下命令即可：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"# nethogs -d 5\\n\\n\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"$ sudo nethogs -d 5\\n\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"如果只用来监视设备（eth0）的网络带宽可以使用如下命令：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"# nethogs eth0\\n\\n\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"$ sudo nethogs eth0\\n\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"如果要同时监视eth0和eth1接口，使用以下命令即可：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"# nethogs eth0 eth1\\n\\n\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"$ sudo nethogs eth0 eth1\\n\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"其他参数和用法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-d : 刷新间隔\\n-h : 帮助\\n-p : promiscious 模式\\n-t : trace模式 \\n-V : 版本\\n\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"交互命令\")]), _vm._v(\" \"), _c('p', [_vm._v(\"以下是NetHogs的一些交互命令（键盘快捷键）\")]), _vm._v(\" \"), _c('ul', [_c('li', [_vm._v(\"m : 修改单位\")]), _vm._v(\" \"), _c('li', [_vm._v(\"r : 按流量排序\")]), _vm._v(\" \"), _c('li', [_vm._v(\"s : 按发送流量排序\")]), _vm._v(\" \"), _c('li', [_vm._v(\"q : 退出命令提示符\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"关于NetHogs命令行工具的完整参数列表，可以参考NetHogs的手册，使用方法是在终端里输入\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"[man](#/man \\\"man命令\\\") nethogs\")]), _vm._v(\"或者\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"sudo man nethogs\")]), _vm._v(\"，更多信息请参考\"), _c('a', {\n    attrs: {\n      \"href\": \"http://nethogs.sourceforge.net/\"\n    }\n  }, [_vm._v(\"NetHogs项目主页\")]), _vm._v(\"。\")])])\n}]}\n\n/***/ }),\n\n/***/ 316:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(905);\n\n/***/ }),\n\n/***/ 603:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"static/img/nethogs.a4e542a.jpg\";\n\n/***/ }),\n\n/***/ 905:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(5)(\n  /* script */\n  null,\n  /* template */\n  __webpack_require__(1187),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/7.e853be12f6ae3f9b726e.js","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_vm._v(\"有很多适用于Linux系统的开源网络监视工具。比如说，你可以用命令iftop来检查带宽使用情况。\"), _c('a', {\n    attrs: {\n      \"href\": \"#/netstat\",\n      \"title\": \"netstat命令\"\n    }\n  }, [_vm._v(\"netstat\")]), _vm._v(\"用来查看接口统计报告，还有\"), _c('a', {\n    attrs: {\n      \"href\": \"#/top\",\n      \"title\": \"top命令\"\n    }\n  }, [_vm._v(\"top\")]), _vm._v(\"监控系统当前运行进程。但是如果你想要找一个能够按进程实时统计网络带宽利用率的工具，那么NetHogs值得一看。\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"NetHogs\")]), _vm._v(\"是一个开源的命令行工具（类似于Linux的top命令），用来按进程或程序实时统计网络带宽使用率。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"来自NetHogs项目网站:\")]), _vm._v(\" \"), _c('blockquote', [_c('p', [_vm._v(\"NetHogs是一个小型的net top工具，不像大多数工具那样拖慢每个协议或者是每个子网的速度而是按照进程进行带宽分组。NetHogs不需要依赖载入某个特殊的内核模块。如果发生了网络阻塞你可以启动NetHogs立即看到哪个PID造成的这种状况。这样就很容易找出哪个程序跑飞了然后突然占用你的带宽。\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"本文为你介绍如何在Unix/Linux操作系统下如何安装和使用NetHogs按进程监控网络带宽使用率。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"在RHEL、CentOS和Fedora下安装NetHogs\")]), _vm._v(\" \"), _c('p', [_vm._v(\"要安装NetHogs，你必须要启用你所用Linux下的EPEL源。然后运行下面的\"), _c('a', {\n    attrs: {\n      \"href\": \"#/yum\",\n      \"title\": \"yum命令\"\n    }\n  }, [_vm._v(\"yum\")]), _vm._v(\"命令下载安装NetHogs包。\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"# yum [install](#/install \\\"install命令\\\") nethogs\\n\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"在Ubuntu、Linux mint和Debian下安装NetHogs\")]), _vm._v(\" \"), _c('p', [_vm._v(\"键入\"), _c('a', {\n    attrs: {\n      \"href\": \"#/apt-get\",\n      \"title\": \"apt-get命令\"\n    }\n  }, [_vm._v(\"apt-get\")]), _vm._v(\"命令安装NetHogs包：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"$ [sudo](#/sudo \\\"sudo命令\\\") apt-get install nethogs\\n\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"NetHogs用法\")]), _vm._v(\" \"), _c('p', [_vm._v(\"在基于RedHat系统下键入如下命令启动NetHogs工具。\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"# nethogs\\n\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"在Debian/Ubuntu/Linux Mint下要执行NetHogs你必须拥有root权限：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"$ sudo nethogs\\n\\n\")])]), _vm._v(\" \"), _c('p', [_c('img', {\n    attrs: {\n      \"src\": require(\"./images/nethogs.jpg\"),\n      \"alt\": \"nethogs\"\n    }\n  })]), _vm._v(\" \"), _c('p', [_vm._v(\"Ubuntu 12.10 下的NetHogs预览\")]), _vm._v(\" \"), _c('p', [_vm._v(\"正如上图所示，send列和received列显示的是按照每个进程的流量统计。总的收发数据带宽在最下方，而且可以用交互命令控制排序，下面将要讨论这些交互命令。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"NetHogs 命令行参数\")]), _vm._v(\" \"), _c('p', [_vm._v(\"以下就是NetHogs命令行的参数，用-d来添加刷新频率参数，device name 用来检测给定的某个或者某些设备的带宽（默认是eth0）。例如：设置5秒钟的刷新频率，键入如下命令即可：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"# nethogs -d 5\\n\\n\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"$ sudo nethogs -d 5\\n\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"如果只用来监视设备（eth0）的网络带宽可以使用如下命令：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"# nethogs eth0\\n\\n\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"$ sudo nethogs eth0\\n\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"如果要同时监视eth0和eth1接口，使用以下命令即可：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"# nethogs eth0 eth1\\n\\n\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"$ sudo nethogs eth0 eth1\\n\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"其他参数和用法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-d : 刷新间隔\\n-h : 帮助\\n-p : promiscious 模式\\n-t : trace模式 \\n-V : 版本\\n\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"交互命令\")]), _vm._v(\" \"), _c('p', [_vm._v(\"以下是NetHogs的一些交互命令（键盘快捷键）\")]), _vm._v(\" \"), _c('ul', [_c('li', [_vm._v(\"m : 修改单位\")]), _vm._v(\" \"), _c('li', [_vm._v(\"r : 按流量排序\")]), _vm._v(\" \"), _c('li', [_vm._v(\"s : 按发送流量排序\")]), _vm._v(\" \"), _c('li', [_vm._v(\"q : 退出命令提示符\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"关于NetHogs命令行工具的完整参数列表，可以参考NetHogs的手册，使用方法是在终端里输入\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"[man](#/man \\\"man命令\\\") nethogs\")]), _vm._v(\"或者\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"sudo man nethogs\")]), _vm._v(\"，更多信息请参考\"), _c('a', {\n    attrs: {\n      \"href\": \"http://nethogs.sourceforge.net/\"\n    }\n  }, [_vm._v(\"NetHogs项目主页\")]), _vm._v(\"。\")])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-0c1cb52a\",\"hasScoped\":false}!./~/vue-loader/lib/selector.js?type=template&index=0!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/nethogs.md\n// module id = 1187\n// module chunks = 7","module.exports = require(\"!!vue-loader!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./nethogs.md\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./command/nethogs.md\n// module id = 316\n// module chunks = 7","module.exports = __webpack_public_path__ + \"static/img/nethogs.a4e542a.jpg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./command/images/nethogs.jpg\n// module id = 603\n// module chunks = 7","var Component = require(\"!../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  null,\n  /* template */\n  require(\"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-0c1cb52a\\\",\\\"hasScoped\\\":false}!../node_modules/vue-loader/lib/selector?type=template&index=0!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./nethogs.md\"),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/nethogs.md\n// module id = 905\n// module chunks = 7"],"sourceRoot":""}