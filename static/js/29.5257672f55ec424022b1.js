webpackJsonp([29],{1116:function(e,t,n){var r=n(5)(null,n(1485),null,null,null);e.exports=r.exports},1485:function(e,t){e.exports={render:function(){var e=this,t=e.$createElement;e._self._c;return e._m(0)},staticRenderFns:[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("section",[n("p",[n("strong",[e._v("xargs命令")]),e._v("是给其他命令传递参数的一个过滤器，也是组合多个命令的一个工具。它擅长将标准输入数据转换成命令行参数，xargs能够处理管道或者stdin并将其转换成特定命令的命令参数。xargs也可以将单行或多行文本输入转换为其他格式，例如多行变单行，单行变多行。xargs的默认命令是"),n("a",{attrs:{href:"#/echo",title:"echo命令"}},[e._v("echo")]),e._v("，空格是默认定界符。这意味着通过管道传递给xargs的输入将会包含换行和空白，不过通过xargs的处理，换行和空白将被空格取代。xargs是构建单行命令的重要组件之一。")]),e._v(" "),n("h3",[e._v("xargs命令用法")]),e._v(" "),n("p",[e._v("xargs用作替换工具，读取输入数据重新格式化后输出。")]),e._v(" "),n("p",[e._v("定义一个测试文件，内有多行文本数据：")]),e._v(" "),n("pre",{pre:!0},[n("code",{attrs:{"v-pre":""}},[e._v('[cat](#/cat "cat命令") [test](#/test "test命令").txt\n\na b c d e f g\nh i j k l m n\no p q\nr s t\nu v [w](#/w "w命令") x y z\n\n')])]),e._v(" "),n("p",[e._v("多行输入单行输出：")]),e._v(" "),n("pre",{pre:!0},[n("code",{attrs:{"v-pre":""}},[e._v("cat test.txt | xargs\n\na b c d e f g h i j k l m n o p q r s t u v w x y z\n")])]),e._v(" "),n("p",[n("strong",[e._v("-n选项")]),e._v("多行输出：")]),e._v(" "),n("pre",{pre:!0},[n("code",{attrs:{"v-pre":""}},[e._v("cat test.txt | xargs -n3\n\na b c\nd e f\ng h i\nj k l\nm n o\np q r\ns t u\nv w x\ny z\n")])]),e._v(" "),n("p",[n("strong",[e._v("-d选项")]),e._v("可以自定义一个定界符：")]),e._v(" "),n("pre",{pre:!0},[n("code",{attrs:{"v-pre":""}},[e._v('echo "nameXnameXnameXname" | xargs -dX\n\nname name name name\n')])]),e._v(" "),n("p",[e._v("结合**-n选项**使用：")]),e._v(" "),n("pre",{pre:!0},[n("code",{attrs:{"v-pre":""}},[e._v('echo "nameXnameXnameXname" | xargs -dX -n2\n\nname name\nname name\n')])]),e._v(" "),n("p",[n("strong",[e._v("读取stdin，将格式化后的参数传递给命令")])]),e._v(" "),n("p",[e._v("假设一个命令为 sk.sh 和一个保存参数的文件arg.txt：")]),e._v(" "),n("pre",{pre:!0},[n("code",{attrs:{"v-pre":""}},[e._v("#!/bin/bash\n#sk.sh命令内容，打印出所有参数。\n\necho $*\n\n")])]),e._v(" "),n("p",[e._v("arg.txt文件内容：")]),e._v(" "),n("pre",{pre:!0},[n("code",{attrs:{"v-pre":""}},[e._v("cat arg.txt\n\naaa\nbbb\nccc\n\n")])]),e._v(" "),n("p",[e._v("xargs的一个"),n("strong",[e._v("选项-I")]),e._v("，使用-I指定一个替换字符串{}，这个字符串在xargs扩展时会被替换掉，当-I与xargs结合使用，每一个参数命令都会被执行一次：")]),e._v(" "),n("pre",{pre:!0},[n("code",{attrs:{"v-pre":""}},[e._v("cat arg.txt | xargs -I {} ./sk.sh -p {} -l\n\n-p aaa -l\n-p bbb -l\n-p ccc -l\n\n")])]),e._v(" "),n("p",[e._v("复制所有图片文件到 /data/images 目录下：")]),e._v(" "),n("pre",{pre:!0},[n("code",{attrs:{"v-pre":""}},[e._v('[ls](#/ls "ls命令") *.jpg | xargs -n1 -I [cp](#/cp "cp命令") {} /data/images\n')])]),e._v(" "),n("p",[n("strong",[e._v("xargs结合"),n("a",{attrs:{href:"#/find",title:"find命令"}},[e._v("find")]),e._v("使用")])]),e._v(" "),n("p",[e._v("用"),n("a",{attrs:{href:"#/rm",title:"rm命令"}},[e._v("rm")]),e._v(" 删除太多的文件时候，可能得到一个错误信息：/bin/rm Argument list too long. 用xargs去避免这个问题：")]),e._v(" "),n("pre",{pre:!0},[n("code",{attrs:{"v-pre":""}},[e._v('find . -[type](#/type "type命令") f -name "*.log" -print0 | xargs -0 rm -f\n')])]),e._v(" "),n("p",[e._v("xargs -0将\\0作为定界符。")]),e._v(" "),n("p",[e._v("统计一个源代码目录中所有"),n("a",{attrs:{href:"#/php",title:"php命令"}},[e._v("php")]),e._v("文件的行数：")]),e._v(" "),n("pre",{pre:!0},[n("code",{attrs:{"v-pre":""}},[e._v('find . -type f -name "*.php" -print0 | xargs -0 [wc](#/wc "wc命令") -l\n')])]),e._v(" "),n("p",[e._v("查找所有的jpg 文件，并且压缩它们：")]),e._v(" "),n("pre",{pre:!0},[n("code",{attrs:{"v-pre":""}},[e._v('find . -type f -name "*.jpg" -print | xargs [tar](#/tar "tar命令") -czvf images.tar.gz\n\n')])]),e._v(" "),n("p",[n("strong",[e._v("xargs其他应用")])]),e._v(" "),n("p",[e._v("假如你有一个文件包含了很多你希望下载的URL，你能够使用xargs下载所有链接：")]),e._v(" "),n("pre",{pre:!0},[n("code",{attrs:{"v-pre":""}},[e._v('cat url-list.txt | xargs [wget](#/wget "wget命令") -c\n\n')])]),e._v(" "),n("h3",[e._v("子Shell（Subshells）")]),e._v(" "),n("p",[e._v("运行一个shell脚本时会启动另一个命令解释器.，就好像你的命令是在命令行提示下被解释的一样，类似于批处理文件里的一系列命令。每个shell脚本有效地运行在父shell(parent shell)的一个子进程里。这个父shell是指在一个控制终端或在一个xterm窗口中给你命令指示符的进程。")]),e._v(" "),n("pre",{pre:!0},[n("code",{attrs:{"v-pre":""}},[e._v("cmd1 | ( cmd2; cmd3; cmd4 ) | cmd5\n")])]),e._v(" "),n("p",[e._v("如果cmd2 是"),n("a",{attrs:{href:"#/cd",title:"cd命令"}},[e._v("cd")]),e._v(" /，那么就会改变子Shell的工作目录，这种改变只是局限于子shell内部，cmd5则完全不知道工作目录发生的变化。子shell是嵌在圆括号()内部的命令序列，子Shell内部定义的变量为局部变量。")]),e._v(" "),n("p",[e._v("子shell可用于为一组命令设定临时的环境变量：")]),e._v(" "),n("pre",{staticClass:"PROGRAMLISTING"},[e._v('COMMAND1\nCOMMAND2\nCOMMAND3\n(\n  IFS=:\n  PATH=/bin\n  [unset](#/unset "unset命令") TERMINFO\n  [set](#/set "set命令") -C\n  shift 5\n  COMMAND4\n  COMMAND5\n  [exit](#/exit "exit命令") 3 # 只是从子shell退出。\n)\n# 父shell不受影响，变量值没有更改。\nCOMMAND6\nCOMMAND7\n```')])])}]}},528:function(e,t,n){e.exports=n(1116)}});
//# sourceMappingURL=29.5257672f55ec424022b1.js.map