webpackJsonp([277],{1508:function(n,t){n.exports={render:function(){var n=this,t=n.$createElement;n._self._c;return n._m(0)},staticRenderFns:[function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("section",[e("p",[e("strong",[n._v("ltrace命令")]),n._v("是用来跟踪进程调用库函数的情况。")]),n._v(" "),e("h3",[n._v("语法")]),n._v(" "),e("pre",{pre:!0},[e("code",{attrs:{"v-pre":""}},[n._v('ltrace [option ...] [[command](#/command "command命令") [arg ...]]\n')])]),n._v(" "),e("h3",[n._v("选项")]),n._v(" "),e("pre",{pre:!0},[e("code",{attrs:{"v-pre":""}},[n._v('-a 对齐具体某个列的返回值。\n-c 计算时间和调用，并在程序退出时打印摘要。\n-C 解码低级别名称（内核级）为用户级名称。\n-d 打印调试信息。\n-e 改变跟踪的事件。\n-f 跟踪子进程。\n-h 打印帮助信息。\n-i 打印指令指针，当库调用时。\n-l 只打印某个库中的调用。\n-L 不打印库调用。\n-n, --[indent](#/indent "indent命令")=NR 对每个调用级别嵌套以NR个空格进行缩进输出。\n-o, --output=[file](#/file "file命令") 把输出定向到文件。\n-p PID 附着在值为PID的进程号上进行ltrace。\n-r 打印相对时间戳。\n-s STRLEN 设置打印的字符串最大长度。\n-S 显示系统调用。\n-t, -tt, -ttt 打印绝对时间戳。\n-T 输出每个调用过程的时间开销。\n-u USERNAME 使用某个用户[id](#/id "id命令")或组ID来运行命令。\n-V, --version 打印版本信息，然后退出。\n-x NAME treat the global NAME like a library subroutine.（求翻译）\n')])]),n._v(" "),e("h3",[n._v("实例")]),n._v(" "),e("p",[n._v("最基本应用，不带任何参数：")]),n._v(" "),e("pre",{pre:!0},[e("code",{attrs:{"v-pre":""}},[n._v('[guest@localhost tmp]$ ltrace ./a.out\n__libc_start_main(0x80484aa, 1, 0xbfc07744, 0x8048550, 0x8048540 <unfinished ...>\n[printf](#/printf "printf命令")("no1:%d \\t no2:%d \\t [diff](#/diff "diff命令"):%d\\n", 10, 6, 4no1:10 no2:6 diff:4 ) = 24\nprintf("no1:%d \\t no2:%d \\t diff:%d\\n", 9, 7, 2no1:9 no2:7 diff:2 ) = 23\nprintf("no1:%d \\t no2:%d \\t diff:%d\\n", 8, 8, 0no1:8 no2:8 diff:0 ) = 23\n--- SIGFPE (Floating point exception) ---\n+++ killed by SIGFPE +++\n')])]),n._v(" "),e("p",[n._v("输出调用时间开销：")]),n._v(" "),e("pre",{pre:!0},[e("code",{attrs:{"v-pre":""}},[n._v('[guest@localhost tmp]$ ltrace -T ./a.out\n__libc_start_main(0x80484aa, 1, 0xbf81d394, 0x8048550, 0x8048540 <unfinished ...>\nprintf("no1:%d \\t no2:%d \\t diff:%d\\n", 10, 6, 4no1:10 no2:6 diff:4 ) = 24 <0.000972>\nprintf("no1:%d \\t no2:%d \\t diff:%d\\n", 9, 7, 2no1:9 no2:7 diff:2 ) = 23 <0.000155>\nprintf("no1:%d \\t no2:%d \\t diff:%d\\n", 8, 8, 0no1:8 no2:8 diff:0 ) = 23 <0.000153>\n--- SIGFPE (Floating point exception) ---\n+++ killed by SIGFPE +++\n')])]),n._v(" "),e("p",[n._v("显示系统调用：")]),n._v(" "),e("pre",{pre:!0},[e("code",{attrs:{"v-pre":""}},[n._v('[guest@localhost tmp]$ ltrace -S ./a.out\nSYS_brk(NULL) = 0x9e20000\nSYS_access(0xa4710f, 4, 0xa4afc0, 0, 0xa4b644) = 0\nSYS_open("/etc/[ld](#/ld "ld命令").so.preload", 0, 02) = 3\nSYS_fstat64(3, 0xbfbd7a94, 0xa4afc0, -1, 3) = 0\nSYS_mmap2(0, 17, 3, 2, 3) = 0xb7f2a000\nSYS_close(3) = 0\nSYS_open("/lib/libcwait.so", 0, 00) = 3\nSYS_read(3, "\\177ELF\\001\\001\\001", 512) = 512\nSYS_fstat64(3, 0xbfbd76fc, 0xa4afc0, 4, 0xa4b658) = 0\nSYS_mmap2(0, 4096, 3, 34, -1) = 0xb7f29000\nSYS_mmap2(0, 5544, 5, 2050, 3) = 0x423000\nSYS_mmap2(0x424000, 4096, 3, 2066, 3) = 0x424000\n.............省去若干行\n')])])])}]}},275:function(n,t,e){n.exports=e(863)},863:function(n,t,e){var o=e(5)(null,e(1508),null,null,null);n.exports=o.exports}});
//# sourceMappingURL=277.a71a8c64ede953d115cc.js.map