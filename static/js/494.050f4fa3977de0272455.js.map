{"version":3,"sources":["webpack:///static/js/494.050f4fa3977de0272455.js","webpack:///./command/bzip2.md?176c","webpack:///./command/bzip2.md","webpack:///./command/bzip2.md?fe6c"],"names":["webpackJsonp","1164","module","exports","render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","_v","pre","attrs","v-pre","56","__webpack_require__","644","Component"],"mappings":"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","file":"static/js/494.050f4fa3977de0272455.js","sourcesContent":["webpackJsonp([494],{\n\n/***/ 1164:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"bzip2命令\")]), _vm._v(\"用于创建和管理（包括解压缩）“.bz2”格式的压缩包。我们遇见Linux压缩打包方法有很多种，以下讲解了Linux压缩打包方法中的Linux bzip2命令的多种范例供大家查看，相信大家看完后会有很多收获。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"bzip2(选项)(参数)\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-c或——stdout：将压缩与解压缩的结果送到标准输出；\\n-d或——decompress：执行解压缩；\\n-f或-force：bzip2在压缩或解压缩时，若输出文件与现有文件同名，预设不会覆盖现有文件。若要覆盖。请使用此参数；\\n-h或——[help](#/help \\\"help命令\\\")：在线帮助；\\n-k或——keep：bzip2在压缩或解压缩后，会删除原始文件。若要保留原始文件，请使用此参数；\\n-s或——small：降低程序执行时内存的使用量；\\n-t或——[test](#/test \\\"test命令\\\")：测试.bz2压缩文件的完整性；\\n-v或——verbose：压缩或解压缩文件时，显示详细的信息；\\n-z或——[compress](#/compress \\\"compress命令\\\")：强制执行压缩；\\n-V或——version：显示版本信息；\\n--repetitive-best：若文件中有重复出现的资料时，可利用此参数提高压缩效果；\\n--repetitive-fast：若文件中有重复出现的资料时，可利用此参数加快执行效果。\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"参数\")]), _vm._v(\" \"), _c('p', [_vm._v(\"文件：指定要压缩的文件。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"压缩指定文件filename:\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"bzip2 filename\\n或\\nbzip2 -z filename\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"这里，压缩的时候不会输出，会将原来的文件filename给删除，替换成filename.bz2.如果以前有filename.bz2则不会替换并提示错误（如果想要替换则指定-f选项，例如\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"bzip2 -f filename\")]), _vm._v(\"；如果filename是目录则也提醒错误不做任何操作；如果filename已经是压过的了有bz2后缀就提醒一下，不再压缩，没有bz2后缀会再次压缩。\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"解压指定的文件filename.bz2:\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"bzip2 -d filename.bz2\\n或\\n[bunzip2](#/bunzip2 \\\"bunzip2命令\\\") filename.bz2\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"这里，解压的时候没标准输出，会将原来的文件filename.bz2给替换成filename。如果以前有filename则不会替换并提示错误（如果想要替换则指定\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"-f\")]), _vm._v(\"选项，例如\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"bzip2 -[df](#/df \\\"df命令\\\") filename.bz2\")]), _vm._v(\"。\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"压缩解压的时候将结果也输出：\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"$bzip2 -v filename\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"输入之后，输出如下：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"filename:  0.119:1, 67.200 bits/byte, -740.00% saved, 5 in, 42 out.\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"这里，加上\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"-v\")]), _vm._v(\"选项就会输出了,只用压缩举例了，解压的时候同理\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"bzip2 -dv filename.bz2\")]), _vm._v(\"不再举例了。\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"模拟解压实际并不解压：\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"bzip2 -tv filename.bz2\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"输入之后，输出如下：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"filename.bz2: ok\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"这里，\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"-t\")]), _vm._v(\"指定要进行模拟解压，不实际生成结果，也就是说类似检查文件,当然就算目录下面有filename也不会有什么错误输出了，因为它根本不会真的解压文件。为了在屏幕上输出，这里加上\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"-v\")]), _vm._v(\"选项了,如果是真的解压\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"bzip2 -dv filename.bz2\")]), _vm._v(\"则输出的是把\\\"ok\\\"替换成了\\\"done\\\"。\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"压缩解压的时候，除了生成结果文件，将原来的文件也保存:\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"bzip2 -k filename\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"这里，加上\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"-k\")]), _vm._v(\"就保存原始的文件了，否则原始文件会被结果文件替代。只用压缩举例了，解压的时候同理\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"$bzip2 -dk filename.bz2\")]), _vm._v(\"不再举例了。\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"解压到标准输出：\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"bzip2 -dc filename.bz2\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"输入之后，输出如下：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"hahahhaahahha\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"这里，使用\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"-c\")]), _vm._v(\"指定到标准输出，输出的是文件filename的内容，不会将filename.bz2删除。\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"压缩到标准输出：\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"bzip2 -c filename\\nbzip2: I won't [write](#/write \\\"write命令\\\") compressed data to a terminal.\\nbzip2: For help, [type](#/type \\\"type命令\\\"): `bzip2 --help'.\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"这里，使用\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"-c\")]), _vm._v(\"指定压缩到标准输出不删除原有文件，不同的是，压缩后的文件无法输出到标准输出。\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"使用bzip2的时候将所有后面的看作文件(即使文件名以'-'开头)：\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"bzip2 -- -myfilename\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"这里主要是为了防止文件名中\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"-\")]), _vm._v(\"产生以为是选项的歧义。\")])])\n}]}\n\n/***/ }),\n\n/***/ 56:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(644);\n\n/***/ }),\n\n/***/ 644:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(5)(\n  /* script */\n  null,\n  /* template */\n  __webpack_require__(1164),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/494.050f4fa3977de0272455.js","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"bzip2命令\")]), _vm._v(\"用于创建和管理（包括解压缩）“.bz2”格式的压缩包。我们遇见Linux压缩打包方法有很多种，以下讲解了Linux压缩打包方法中的Linux bzip2命令的多种范例供大家查看，相信大家看完后会有很多收获。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"bzip2(选项)(参数)\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-c或——stdout：将压缩与解压缩的结果送到标准输出；\\n-d或——decompress：执行解压缩；\\n-f或-force：bzip2在压缩或解压缩时，若输出文件与现有文件同名，预设不会覆盖现有文件。若要覆盖。请使用此参数；\\n-h或——[help](#/help \\\"help命令\\\")：在线帮助；\\n-k或——keep：bzip2在压缩或解压缩后，会删除原始文件。若要保留原始文件，请使用此参数；\\n-s或——small：降低程序执行时内存的使用量；\\n-t或——[test](#/test \\\"test命令\\\")：测试.bz2压缩文件的完整性；\\n-v或——verbose：压缩或解压缩文件时，显示详细的信息；\\n-z或——[compress](#/compress \\\"compress命令\\\")：强制执行压缩；\\n-V或——version：显示版本信息；\\n--repetitive-best：若文件中有重复出现的资料时，可利用此参数提高压缩效果；\\n--repetitive-fast：若文件中有重复出现的资料时，可利用此参数加快执行效果。\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"参数\")]), _vm._v(\" \"), _c('p', [_vm._v(\"文件：指定要压缩的文件。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"压缩指定文件filename:\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"bzip2 filename\\n或\\nbzip2 -z filename\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"这里，压缩的时候不会输出，会将原来的文件filename给删除，替换成filename.bz2.如果以前有filename.bz2则不会替换并提示错误（如果想要替换则指定-f选项，例如\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"bzip2 -f filename\")]), _vm._v(\"；如果filename是目录则也提醒错误不做任何操作；如果filename已经是压过的了有bz2后缀就提醒一下，不再压缩，没有bz2后缀会再次压缩。\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"解压指定的文件filename.bz2:\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"bzip2 -d filename.bz2\\n或\\n[bunzip2](#/bunzip2 \\\"bunzip2命令\\\") filename.bz2\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"这里，解压的时候没标准输出，会将原来的文件filename.bz2给替换成filename。如果以前有filename则不会替换并提示错误（如果想要替换则指定\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"-f\")]), _vm._v(\"选项，例如\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"bzip2 -[df](#/df \\\"df命令\\\") filename.bz2\")]), _vm._v(\"。\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"压缩解压的时候将结果也输出：\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"$bzip2 -v filename\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"输入之后，输出如下：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"filename:  0.119:1, 67.200 bits/byte, -740.00% saved, 5 in, 42 out.\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"这里，加上\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"-v\")]), _vm._v(\"选项就会输出了,只用压缩举例了，解压的时候同理\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"bzip2 -dv filename.bz2\")]), _vm._v(\"不再举例了。\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"模拟解压实际并不解压：\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"bzip2 -tv filename.bz2\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"输入之后，输出如下：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"filename.bz2: ok\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"这里，\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"-t\")]), _vm._v(\"指定要进行模拟解压，不实际生成结果，也就是说类似检查文件,当然就算目录下面有filename也不会有什么错误输出了，因为它根本不会真的解压文件。为了在屏幕上输出，这里加上\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"-v\")]), _vm._v(\"选项了,如果是真的解压\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"bzip2 -dv filename.bz2\")]), _vm._v(\"则输出的是把\\\"ok\\\"替换成了\\\"done\\\"。\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"压缩解压的时候，除了生成结果文件，将原来的文件也保存:\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"bzip2 -k filename\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"这里，加上\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"-k\")]), _vm._v(\"就保存原始的文件了，否则原始文件会被结果文件替代。只用压缩举例了，解压的时候同理\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"$bzip2 -dk filename.bz2\")]), _vm._v(\"不再举例了。\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"解压到标准输出：\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"bzip2 -dc filename.bz2\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"输入之后，输出如下：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"hahahhaahahha\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"这里，使用\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"-c\")]), _vm._v(\"指定到标准输出，输出的是文件filename的内容，不会将filename.bz2删除。\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"压缩到标准输出：\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"bzip2 -c filename\\nbzip2: I won't [write](#/write \\\"write命令\\\") compressed data to a terminal.\\nbzip2: For help, [type](#/type \\\"type命令\\\"): `bzip2 --help'.\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"这里，使用\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"-c\")]), _vm._v(\"指定压缩到标准输出不删除原有文件，不同的是，压缩后的文件无法输出到标准输出。\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"使用bzip2的时候将所有后面的看作文件(即使文件名以'-'开头)：\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"bzip2 -- -myfilename\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"这里主要是为了防止文件名中\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"-\")]), _vm._v(\"产生以为是选项的歧义。\")])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-0b8494ee\",\"hasScoped\":false}!./~/vue-loader/lib/selector.js?type=template&index=0!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/bzip2.md\n// module id = 1164\n// module chunks = 494","module.exports = require(\"!!vue-loader!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./bzip2.md\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./command/bzip2.md\n// module id = 56\n// module chunks = 494","var Component = require(\"!../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  null,\n  /* template */\n  require(\"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-0b8494ee\\\",\\\"hasScoped\\\":false}!../node_modules/vue-loader/lib/selector?type=template&index=0!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./bzip2.md\"),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/bzip2.md\n// module id = 644\n// module chunks = 494"],"sourceRoot":""}