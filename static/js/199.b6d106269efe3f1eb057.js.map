{"version":3,"sources":["webpack:///static/js/199.b6d106269efe3f1eb057.js","webpack:///./command/ps.md?d73a","webpack:///./command/ps.md","webpack:///./command/ps.md?03fc"],"names":["webpackJsonp","1395","module","exports","render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","_v","attrs","href","title","pre","v-pre","356","__webpack_require__","944","Component"],"mappings":"AAAAA,cAAc,MAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAgBC,OAAA,WAAmB,GAAAC,GAAAC,KAAaC,EAAAF,EAAAG,cAA0BH,GAAAI,MAAAC,EAC1E,OAAAL,GAAAM,GAAA,IACCC,iBAAA,WAA+B,GAAAP,GAAAC,KAAaC,EAAAF,EAAAG,eAA0BE,EAAAL,EAAAI,MAAAC,IAAAH,CACvE,OAAAG,GAAA,WAAAA,EAAA,KAAAA,EAAA,UAAAL,EAAAQ,GAAA,UAAAR,EAAAQ,GAAA,sBAAAH,EAAA,KACAI,OACAC,KAAA,SACAC,MAAA,YAEGX,EAAAQ,GAAA,UAAAR,EAAAQ,GAAA,2HAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHO,KAAA,IACGP,EAAA,QACHI,OACAI,QAAA,MAEGb,EAAAQ,GAAA,gBAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHO,KAAA,IACGP,EAAA,QACHI,OACAI,QAAA,MAEGb,EAAAQ,GAAA,0xDAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,yCDUGM,IACA,SAAUjB,EAAQC,EAASiB,GE/BjClB,EAAAC,QAAAiB,EAAA,MFqCMC,IACA,SAAUnB,EAAQC,EAASiB,GGtCjC,GAAAE,GAAAF,EAAA,GAEA,KAEAA,EAAA,MAEA,KAEA,KAEA,KAGAlB,GAAAC,QAAAmB,EAAAnB","file":"static/js/199.b6d106269efe3f1eb057.js","sourcesContent":["webpackJsonp([199],{\n\n/***/ 1395:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"ps命令\")]), _vm._v(\"用于报告当前系统的进程状态。可以搭配\"), _c('a', {\n    attrs: {\n      \"href\": \"#/kill\",\n      \"title\": \"kill命令\"\n    }\n  }, [_vm._v(\"kill\")]), _vm._v(\"指令随时中断、删除不必要的程序。ps命令是最基本同时也是非常强大的进程查看命令，使用该命令可以确定有哪些进程正在运行和运行的状态、进程是否结束、进程有没有僵死、哪些进程占用了过多的资源等等，总之大部分信息都是可以通过执行该命令得到的。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"ps(选项)\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-a：显示所有终端机下执行的程序，除了阶段作业领导者之外。\\na：显示现行终端机下的所有程序，包括其他用户的程序。\\n-A：显示所有程序。\\n-c：显示CLS和PRI栏位。\\nc：列出程序时，显示每个程序真正的指令名称，而不包含路径，选项或常驻服务的标示。\\n-C<指令名称>：指定执行指令的名称，并列出该指令的程序的状况。\\n-d：显示所有程序，但不包括阶段作业领导者的程序。\\n-e：此选项的效果和指定\\\"A\\\"选项相同。\\ne：列出程序时，显示每个程序所使用的环境变量。\\n-f：显示UID,PPIP,C与STIME栏位。\\nf：用ASCII字符显示树状结构，表达程序间的相互关系。\\n-g<群组名称>：此选项的效果和指定\\\"-G\\\"选项相同，当亦能使用阶段作业领导者的名称来指定。\\ng：显示现行终端机下的所有程序，包括群组领导者的程序。\\n-G<群组识别码>：列出属于该群组的程序的状况，也可使用群组名称来指定。\\nh：不显示标题列。\\n-H：显示树状结构，表示程序间的相互关系。\\n-j或j：采用工作控制的格式显示程序状况。\\n-l或l：采用详细的格式来显示程序状况。\\nL：列出栏位的相关信息。\\n-m或m：显示所有的执行绪。\\nn：以数字来表示USER和WCHAN栏位。\\n-N：显示所有的程序，除了执行ps指令终端机下的程序之外。\\n-p<程序识别码>：指定程序识别码，并列出该程序的状况。\\np<程序识别码>：此选项的效果和指定\\\"-p\\\"选项相同，只在列表格式方面稍有差异。\\nr：只列出现行终端机正在执行中的程序。\\n-s<阶段作业>：指定阶段作业的程序识别码，并列出隶属该阶段作业的程序的状况。\\ns：采用程序信号的格式显示程序状况。\\nS：列出程序时，包括已中断的子程序资料。\\n-t<终端机编号>：指定终端机编号，并列出属于该终端机的程序的状况。\\nt<终端机编号>：此选项的效果和指定\\\"-t\\\"选项相同，只在列表格式方面稍有差异。\\n-T：显示现行终端机下的所有程序。\\n-u<用户识别码>：此选项的效果和指定\\\"-U\\\"选项相同。\\nu：以用户为主的格式来显示程序状况。\\n-U<用户识别码>：列出属于该用户的程序的状况，也可使用用户名称来指定。\\nU<用户名称>：列出属于该用户的程序的状况。\\nv：采用虚拟内存的格式显示程序状况。\\n-V或V：显示版本信息。\\n-[w](#/w \\\"w命令\\\")或w：采用宽阔的格式来显示程序状况。　\\nx：显示所有程序，不以终端机来区分。\\nX：采用旧式的Linux i386登陆格式显示程序状况。\\n-y：配合选项\\\"-l\\\"使用时，不显示F(flag)栏位，并以RSS栏位取代ADDR栏位　。\\n-<程序识别码>：此选项的效果和指定\\\"p\\\"选项相同。\\n--cols<每列字符数>：设置每列的最大字符数。\\n--columns<每列字符数>：此选项的效果和指定\\\"--cols\\\"选项相同。\\n--cumulative：此选项的效果和指定\\\"S\\\"选项相同。\\n--deselect：此选项的效果和指定\\\"-N\\\"选项相同。\\n--forest：此选项的效果和指定\\\"f\\\"选项相同。\\n--headers：重复显示标题列。\\n--[help](#/help \\\"help命令\\\")：在线帮助。\\n--[info](#/info \\\"info命令\\\")：显示排错信息。\\n--lines<显示列数>：设置显示画面的列数。\\n--no-headers：此选项的效果和指定\\\"h\\\"选项相同，只在列表格式方面稍有差异。\\n--group<群组名称>：此选项的效果和指定\\\"-G\\\"选项相同。\\n--Group<群组识别码>：此选项的效果和指定\\\"-G\\\"选项相同。\\n--pid<程序识别码>：此选项的效果和指定\\\"-p\\\"选项相同。\\n--rows<显示列数>：此选项的效果和指定\\\"--lines\\\"选项相同。\\n--sid<阶段作业>：此选项的效果和指定\\\"-s\\\"选项相同。\\n--tty<终端机编号>：此选项的效果和指定\\\"-t\\\"选项相同。\\n--user<用户名称>：此选项的效果和指定\\\"-U\\\"选项相同。\\n--User<用户识别码>：此选项的效果和指定\\\"-U\\\"选项相同。\\n--version：此选项的效果和指定\\\"-V\\\"选项相同。\\n--widty<每列字符数>：此选项的效果和指定\\\"-cols\\\"选项相同。\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"由于ps命令能够支持的系统类型相当的多，所以选项多的离谱！\")])])\n}]}\n\n/***/ }),\n\n/***/ 356:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(944);\n\n/***/ }),\n\n/***/ 944:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(5)(\n  /* script */\n  null,\n  /* template */\n  __webpack_require__(1395),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/199.b6d106269efe3f1eb057.js","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"ps命令\")]), _vm._v(\"用于报告当前系统的进程状态。可以搭配\"), _c('a', {\n    attrs: {\n      \"href\": \"#/kill\",\n      \"title\": \"kill命令\"\n    }\n  }, [_vm._v(\"kill\")]), _vm._v(\"指令随时中断、删除不必要的程序。ps命令是最基本同时也是非常强大的进程查看命令，使用该命令可以确定有哪些进程正在运行和运行的状态、进程是否结束、进程有没有僵死、哪些进程占用了过多的资源等等，总之大部分信息都是可以通过执行该命令得到的。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"ps(选项)\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-a：显示所有终端机下执行的程序，除了阶段作业领导者之外。\\na：显示现行终端机下的所有程序，包括其他用户的程序。\\n-A：显示所有程序。\\n-c：显示CLS和PRI栏位。\\nc：列出程序时，显示每个程序真正的指令名称，而不包含路径，选项或常驻服务的标示。\\n-C<指令名称>：指定执行指令的名称，并列出该指令的程序的状况。\\n-d：显示所有程序，但不包括阶段作业领导者的程序。\\n-e：此选项的效果和指定\\\"A\\\"选项相同。\\ne：列出程序时，显示每个程序所使用的环境变量。\\n-f：显示UID,PPIP,C与STIME栏位。\\nf：用ASCII字符显示树状结构，表达程序间的相互关系。\\n-g<群组名称>：此选项的效果和指定\\\"-G\\\"选项相同，当亦能使用阶段作业领导者的名称来指定。\\ng：显示现行终端机下的所有程序，包括群组领导者的程序。\\n-G<群组识别码>：列出属于该群组的程序的状况，也可使用群组名称来指定。\\nh：不显示标题列。\\n-H：显示树状结构，表示程序间的相互关系。\\n-j或j：采用工作控制的格式显示程序状况。\\n-l或l：采用详细的格式来显示程序状况。\\nL：列出栏位的相关信息。\\n-m或m：显示所有的执行绪。\\nn：以数字来表示USER和WCHAN栏位。\\n-N：显示所有的程序，除了执行ps指令终端机下的程序之外。\\n-p<程序识别码>：指定程序识别码，并列出该程序的状况。\\np<程序识别码>：此选项的效果和指定\\\"-p\\\"选项相同，只在列表格式方面稍有差异。\\nr：只列出现行终端机正在执行中的程序。\\n-s<阶段作业>：指定阶段作业的程序识别码，并列出隶属该阶段作业的程序的状况。\\ns：采用程序信号的格式显示程序状况。\\nS：列出程序时，包括已中断的子程序资料。\\n-t<终端机编号>：指定终端机编号，并列出属于该终端机的程序的状况。\\nt<终端机编号>：此选项的效果和指定\\\"-t\\\"选项相同，只在列表格式方面稍有差异。\\n-T：显示现行终端机下的所有程序。\\n-u<用户识别码>：此选项的效果和指定\\\"-U\\\"选项相同。\\nu：以用户为主的格式来显示程序状况。\\n-U<用户识别码>：列出属于该用户的程序的状况，也可使用用户名称来指定。\\nU<用户名称>：列出属于该用户的程序的状况。\\nv：采用虚拟内存的格式显示程序状况。\\n-V或V：显示版本信息。\\n-[w](#/w \\\"w命令\\\")或w：采用宽阔的格式来显示程序状况。　\\nx：显示所有程序，不以终端机来区分。\\nX：采用旧式的Linux i386登陆格式显示程序状况。\\n-y：配合选项\\\"-l\\\"使用时，不显示F(flag)栏位，并以RSS栏位取代ADDR栏位　。\\n-<程序识别码>：此选项的效果和指定\\\"p\\\"选项相同。\\n--cols<每列字符数>：设置每列的最大字符数。\\n--columns<每列字符数>：此选项的效果和指定\\\"--cols\\\"选项相同。\\n--cumulative：此选项的效果和指定\\\"S\\\"选项相同。\\n--deselect：此选项的效果和指定\\\"-N\\\"选项相同。\\n--forest：此选项的效果和指定\\\"f\\\"选项相同。\\n--headers：重复显示标题列。\\n--[help](#/help \\\"help命令\\\")：在线帮助。\\n--[info](#/info \\\"info命令\\\")：显示排错信息。\\n--lines<显示列数>：设置显示画面的列数。\\n--no-headers：此选项的效果和指定\\\"h\\\"选项相同，只在列表格式方面稍有差异。\\n--group<群组名称>：此选项的效果和指定\\\"-G\\\"选项相同。\\n--Group<群组识别码>：此选项的效果和指定\\\"-G\\\"选项相同。\\n--pid<程序识别码>：此选项的效果和指定\\\"-p\\\"选项相同。\\n--rows<显示列数>：此选项的效果和指定\\\"--lines\\\"选项相同。\\n--sid<阶段作业>：此选项的效果和指定\\\"-s\\\"选项相同。\\n--tty<终端机编号>：此选项的效果和指定\\\"-t\\\"选项相同。\\n--user<用户名称>：此选项的效果和指定\\\"-U\\\"选项相同。\\n--User<用户识别码>：此选项的效果和指定\\\"-U\\\"选项相同。\\n--version：此选项的效果和指定\\\"-V\\\"选项相同。\\n--widty<每列字符数>：此选项的效果和指定\\\"-cols\\\"选项相同。\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"由于ps命令能够支持的系统类型相当的多，所以选项多的离谱！\")])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-4ff8afea\",\"hasScoped\":false}!./~/vue-loader/lib/selector.js?type=template&index=0!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/ps.md\n// module id = 1395\n// module chunks = 199","module.exports = require(\"!!vue-loader!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./ps.md\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./command/ps.md\n// module id = 356\n// module chunks = 199","var Component = require(\"!../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  null,\n  /* template */\n  require(\"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-4ff8afea\\\",\\\"hasScoped\\\":false}!../node_modules/vue-loader/lib/selector?type=template&index=0!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./ps.md\"),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/ps.md\n// module id = 944\n// module chunks = 199"],"sourceRoot":""}