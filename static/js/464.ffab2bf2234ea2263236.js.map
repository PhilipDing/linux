{"version":3,"sources":["webpack:///static/js/464.ffab2bf2234ea2263236.js","webpack:///./command/cp.md?4505","webpack:///./command/cp.md?8b7b","webpack:///./command/cp.md"],"names":["webpackJsonp","1459","module","exports","render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","_v","pre","attrs","v-pre","href","title","675","__webpack_require__","Component","86"],"mappings":"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","file":"static/js/464.ffab2bf2234ea2263236.js","sourcesContent":["webpackJsonp([464],{\n\n/***/ 1459:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"cp命令\")]), _vm._v(\"用来将一个或多个源文件或者目录复制到指定的目的文件或目录。它可以将单个源文件复制成一个指定文件名的具体的文件或一个已经存在的目录下。cp命令还支持同时复制多个文件，当一次复制多个文件时，目标文件参数必须是一个已经存在的目录，否则将出现错误。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"cp(选项)(参数)\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-a：此参数的效果和同时指定\\\"-dpR\\\"参数相同；\\n-d：当复制符号连接时，把目标文件或目录也建立为符号连接，并指向与源文件或目录连接的原始文件或目录；\\n-f：强行复制文件或目录，不论目标文件或目录是否已存在；\\n-i：覆盖既有文件之前先询问用户；\\n-l：对源文件建立硬连接，而非复制文件；\\n-p：保留源文件或目录的属性；\\n-R/r：递归处理，将指定目录下的所有文件与子目录一并处理；\\n-s：对源文件建立符号连接，而非复制文件；\\n-u：使用这项参数后只会在源文件的更改时间较目标文件更新时或是名称相互对应的目标文件并不存在时，才复制文件；\\n-S：在备份文件时，用指定的后缀“SUFFIX”代替文件的默认后缀；\\n-b：覆盖已存在的文件目标前将目标文件备份；\\n-v：详细显示命令执行的操作。\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"参数\")]), _vm._v(\" \"), _c('ul', [_c('li', [_vm._v(\"源文件：制定源文件列表。默认情况下，cp命令不能复制目录，如果要复制目录，则必须使用\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"-R\")]), _vm._v(\"选项；\")]), _vm._v(\" \"), _c('li', [_vm._v(\"目标文件：指定目标文件。当“源文件”为多个文件时，要求“目标文件”为指定的目录。\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('p', [_vm._v(\"如果把一个文件复制到一个目标文件中，而目标文件已经存在，那么，该目标文件的内容将被破坏。此命令中所有参数既可以是绝对路径名，也可以是相对路径名。通常会用到点\"), _c('code', {\n    pre: true\n  }, [_vm._v(\".\")]), _vm._v(\"或点点\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"..\")]), _vm._v(\"的形式。例如，下面的命令将指定文件复制到当前目录下：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"cp ../mary/homework/assign .\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"所有目标文件指定的目录必须是己经存在的，cp命令不能创建目录。如果没有文件复制的权限，则系统会显示出错信息。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"将文件\"), _c('a', {\n    attrs: {\n      \"href\": \"#/file\",\n      \"title\": \"file命令\"\n    }\n  }, [_vm._v(\"file\")]), _vm._v(\"复制到目录\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"/usr/men/tmp\")]), _vm._v(\"下，并改名为file1\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"cp file /usr/men/tmp/file1\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"将目录\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"/usr/men\")]), _vm._v(\"下的所有文件及其子目录复制到目录\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"/usr/zh\")]), _vm._v(\"中\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"cp -r /usr/men /usr/zh\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"交互式地将目录\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"/usr/men\")]), _vm._v(\"中的以m打头的所有.c文件复制到目录\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"/usr/zh\")]), _vm._v(\"中\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"cp -i /usr/men m*.c /usr/zh\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"我们在Linux下使用cp命令复制文件时候，有时候会需要覆盖一些同名文件，覆盖文件的时候都会有提示：需要不停的按Y来确定执行覆盖。文件数量不多还好，但是要是几百个估计按Y都要吐血了，于是折腾来半天总结了一个方法：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"cp aaa/* /bbb\\n复制目录aaa下所有到/bbb目录下，这时如果/bbb目录下有和aaa同名的文件，需要按Y来确认并且会略过aaa目录下的子目录。\\n\\ncp -r aaa/* /bbb\\n这次依然需要按Y来确认操作，但是没有忽略子目录。\\n\\ncp -r -a aaa/* /bbb\\n依然需要按Y来确认操作，并且把aaa目录以及子目录和文件属性也传递到了/bbb。\\n\\n\\\\cp -r -a aaa/* /bbb\\n成功，没有提示按Y、传递了目录属性、没有略过目录。\\n\")])])])\n}]}\n\n/***/ }),\n\n/***/ 675:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(5)(\n  /* script */\n  null,\n  /* template */\n  __webpack_require__(1459),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 86:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(675);\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/464.ffab2bf2234ea2263236.js","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"cp命令\")]), _vm._v(\"用来将一个或多个源文件或者目录复制到指定的目的文件或目录。它可以将单个源文件复制成一个指定文件名的具体的文件或一个已经存在的目录下。cp命令还支持同时复制多个文件，当一次复制多个文件时，目标文件参数必须是一个已经存在的目录，否则将出现错误。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"cp(选项)(参数)\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-a：此参数的效果和同时指定\\\"-dpR\\\"参数相同；\\n-d：当复制符号连接时，把目标文件或目录也建立为符号连接，并指向与源文件或目录连接的原始文件或目录；\\n-f：强行复制文件或目录，不论目标文件或目录是否已存在；\\n-i：覆盖既有文件之前先询问用户；\\n-l：对源文件建立硬连接，而非复制文件；\\n-p：保留源文件或目录的属性；\\n-R/r：递归处理，将指定目录下的所有文件与子目录一并处理；\\n-s：对源文件建立符号连接，而非复制文件；\\n-u：使用这项参数后只会在源文件的更改时间较目标文件更新时或是名称相互对应的目标文件并不存在时，才复制文件；\\n-S：在备份文件时，用指定的后缀“SUFFIX”代替文件的默认后缀；\\n-b：覆盖已存在的文件目标前将目标文件备份；\\n-v：详细显示命令执行的操作。\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"参数\")]), _vm._v(\" \"), _c('ul', [_c('li', [_vm._v(\"源文件：制定源文件列表。默认情况下，cp命令不能复制目录，如果要复制目录，则必须使用\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"-R\")]), _vm._v(\"选项；\")]), _vm._v(\" \"), _c('li', [_vm._v(\"目标文件：指定目标文件。当“源文件”为多个文件时，要求“目标文件”为指定的目录。\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('p', [_vm._v(\"如果把一个文件复制到一个目标文件中，而目标文件已经存在，那么，该目标文件的内容将被破坏。此命令中所有参数既可以是绝对路径名，也可以是相对路径名。通常会用到点\"), _c('code', {\n    pre: true\n  }, [_vm._v(\".\")]), _vm._v(\"或点点\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"..\")]), _vm._v(\"的形式。例如，下面的命令将指定文件复制到当前目录下：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"cp ../mary/homework/assign .\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"所有目标文件指定的目录必须是己经存在的，cp命令不能创建目录。如果没有文件复制的权限，则系统会显示出错信息。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"将文件\"), _c('a', {\n    attrs: {\n      \"href\": \"#/file\",\n      \"title\": \"file命令\"\n    }\n  }, [_vm._v(\"file\")]), _vm._v(\"复制到目录\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"/usr/men/tmp\")]), _vm._v(\"下，并改名为file1\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"cp file /usr/men/tmp/file1\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"将目录\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"/usr/men\")]), _vm._v(\"下的所有文件及其子目录复制到目录\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"/usr/zh\")]), _vm._v(\"中\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"cp -r /usr/men /usr/zh\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"交互式地将目录\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"/usr/men\")]), _vm._v(\"中的以m打头的所有.c文件复制到目录\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"/usr/zh\")]), _vm._v(\"中\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"cp -i /usr/men m*.c /usr/zh\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"我们在Linux下使用cp命令复制文件时候，有时候会需要覆盖一些同名文件，覆盖文件的时候都会有提示：需要不停的按Y来确定执行覆盖。文件数量不多还好，但是要是几百个估计按Y都要吐血了，于是折腾来半天总结了一个方法：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"cp aaa/* /bbb\\n复制目录aaa下所有到/bbb目录下，这时如果/bbb目录下有和aaa同名的文件，需要按Y来确认并且会略过aaa目录下的子目录。\\n\\ncp -r aaa/* /bbb\\n这次依然需要按Y来确认操作，但是没有忽略子目录。\\n\\ncp -r -a aaa/* /bbb\\n依然需要按Y来确认操作，并且把aaa目录以及子目录和文件属性也传递到了/bbb。\\n\\n\\\\cp -r -a aaa/* /bbb\\n成功，没有提示按Y、传递了目录属性、没有略过目录。\\n\")])])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-6244a963\",\"hasScoped\":false}!./~/vue-loader/lib/selector.js?type=template&index=0!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/cp.md\n// module id = 1459\n// module chunks = 464","var Component = require(\"!../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  null,\n  /* template */\n  require(\"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-6244a963\\\",\\\"hasScoped\\\":false}!../node_modules/vue-loader/lib/selector?type=template&index=0!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./cp.md\"),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/cp.md\n// module id = 675\n// module chunks = 464","module.exports = require(\"!!vue-loader!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./cp.md\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./command/cp.md\n// module id = 86\n// module chunks = 464"],"sourceRoot":""}