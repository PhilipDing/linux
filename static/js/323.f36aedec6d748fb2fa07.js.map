{"version":3,"sources":["webpack:///static/js/323.f36aedec6d748fb2fa07.js","webpack:///./command/jed.md?9d55","webpack:///./command/jed.md","webpack:///./command/jed.md?6fc5"],"names":["webpackJsonp","1227","module","exports","render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","_v","attrs","href","title","pre","v-pre","228","__webpack_require__","816","Component"],"mappings":"AAAAA,cAAc,MAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAgBC,OAAA,WAAmB,GAAAC,GAAAC,KAAaC,EAAAF,EAAAG,cAA0BH,GAAAI,MAAAC,EAC1E,OAAAL,GAAAM,GAAA,IACCC,iBAAA,WAA+B,GAAAP,GAAAC,KAAaC,EAAAF,EAAAG,eAA0BE,EAAAL,EAAAI,MAAAC,IAAAH,CACvE,OAAAG,GAAA,WAAAA,EAAA,KAAAA,EAAA,UAAAL,EAAAQ,GAAA,WAAAR,EAAAQ,GAAA,+CAAAH,EAAA,KACAI,OACAC,KAAA,UACAC,MAAA,aAEGX,EAAAQ,GAAA,WAAAR,EAAAQ,GAAA,6BAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHO,KAAA,IACGP,EAAA,QACHI,OACAI,QAAA,MAEGb,EAAAQ,GAAA,qBAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHO,KAAA,IACGP,EAAA,QACHI,OACAI,QAAA,MAEGb,EAAAQ,GAAA,sKAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,oBAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,2FAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHO,KAAA,IACGP,EAAA,QACHI,OACAI,QAAA,MAEGb,EAAAQ,GAAA,2BAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAA,EAAA,UAAAL,EAAAQ,GAAA,UAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,sFAAAH,EAAA,QACHO,KAAA,IACGZ,EAAAQ,GAAA,kCAAAR,EAAAQ,GAAA,aAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHO,KAAA,IACGP,EAAA,QACHI,OACAI,QAAA,MAEGb,EAAAQ,GAAA,qUAA0WR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,wCAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,6DAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAA,EAAA,UAAAL,EAAAQ,GAAA,UAAAR,EAAAQ,GAAA,KAAAH,EAAA,OAC7WO,KAAA,IACGP,EAAA,QACHI,OACAI,QAAA,MAEGb,EAAAQ,GAAA,gJDUGM,IACA,SAAUjB,EAAQC,EAASiB,GEnDjClB,EAAAC,QAAAiB,EAAA,MFyDMC,IACA,SAAUnB,EAAQC,EAASiB,GG1DjC,GAAAE,GAAAF,EAAA,GAEA,KAEAA,EAAA,MAEA,KAEA,KAEA,KAGAlB,GAAAC,QAAAmB,EAAAnB","file":"static/js/323.f36aedec6d748fb2fa07.js","sourcesContent":["webpackJsonp([323],{\n\n/***/ 1227:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"jed命令\")]), _vm._v(\"是由Slang所开发，其主要用用途是编辑程序的源代码。它支持彩色语法加亮显示，可以模拟\"), _c('a', {\n    attrs: {\n      \"href\": \"#/emacs\",\n      \"title\": \"emacs命令\"\n    }\n  }, [_vm._v(\"emacs\")]), _vm._v(\"，EDT，wordstar和Brief编辑器。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"jed(选项)(参数)\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-2：显示上下两个编辑区；\\n-[batch](#/batch \\\"batch命令\\\")：以批处理模式来执行；\\n-f<函数>：执行Slang函数；\\n-g<行数>：移到缓冲区中指定的行数；\\n-i<文件>：将指定的文件载入缓冲区；\\n-n：不要载入jed.rc配置文件；\\n-s<字符串>：查找并移到指定的字符串。\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"参数\")]), _vm._v(\" \"), _c('p', [_vm._v(\"文件：指定待编辑的文件列表。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('p', [_vm._v(\"以上下两个编辑区的方式，开启 mysource.c 原始代码文件。若要切换编辑区，可利用稍后介绍的命令，开启操作命令，开启功能表后，按 3 ，再按 2 ，即可切换编辑区：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"jed -2 mysource.c\\n\")])]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"操作\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"有些Emacs的组合键和jed菜单组合键冲突例如Alt+f在Emacs中应该是“前进一个单词”，而在jed中则是“文件菜单” 想使用Emacs风格的组合键的话，编辑\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"/usr/share/jed/lib/menus.slc\")]), _vm._v(\"找到如下段落：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"unsetsetkey (\\\"selectmenubar\\\", \\\"\\\\em\\\");\\nunsetsetkey (\\\"@\\\\emF\\\", \\\"\\\\ef\\\");\\nunsetsetkey (\\\"@\\\\emE\\\", \\\"\\\\ee\\\");\\nunsetsetkey (\\\"@\\\\emo\\\", \\\"\\\\eo\\\");\\n% Mode menu unsetsetkey (\\\"@\\\\emS\\\", \\\"\\\\es\\\");\\nunsetsetkey (\\\"@\\\\emB\\\", \\\"\\\\eb\\\");\\nunsetsetkey (\\\"@\\\\emi\\\", \\\"\\\\ei\\\");\\nunsetsetkey (\\\"@\\\\emH\\\", \\\"\\\\eh\\\");\\nunset_setkey (\\\"@\\\\emy\\\", \\\"\\\\ey\\\");\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"可以根据自己的需要修改，也可以简单的注释掉；使用菜单可以用F10键。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"由于Jed可模拟多种编辑器，其各自按键指令也有所不同。这里以模拟 Emacs 为例，说明在编辑器中的操作方法。\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"文件\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"/usr/share/jed/lib/*.sl 这是默认的运行jed slang的文件。\\n/usr/share/jed/lib/site.sl 这是默认的启动文件。\\n/etc/jed.rc 这是全局系统配置文件。\\n~/.jedrc 这是用户配置文件。\\n\")])])])\n}]}\n\n/***/ }),\n\n/***/ 228:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(816);\n\n/***/ }),\n\n/***/ 816:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(5)(\n  /* script */\n  null,\n  /* template */\n  __webpack_require__(1227),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/323.f36aedec6d748fb2fa07.js","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"jed命令\")]), _vm._v(\"是由Slang所开发，其主要用用途是编辑程序的源代码。它支持彩色语法加亮显示，可以模拟\"), _c('a', {\n    attrs: {\n      \"href\": \"#/emacs\",\n      \"title\": \"emacs命令\"\n    }\n  }, [_vm._v(\"emacs\")]), _vm._v(\"，EDT，wordstar和Brief编辑器。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"jed(选项)(参数)\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-2：显示上下两个编辑区；\\n-[batch](#/batch \\\"batch命令\\\")：以批处理模式来执行；\\n-f<函数>：执行Slang函数；\\n-g<行数>：移到缓冲区中指定的行数；\\n-i<文件>：将指定的文件载入缓冲区；\\n-n：不要载入jed.rc配置文件；\\n-s<字符串>：查找并移到指定的字符串。\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"参数\")]), _vm._v(\" \"), _c('p', [_vm._v(\"文件：指定待编辑的文件列表。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('p', [_vm._v(\"以上下两个编辑区的方式，开启 mysource.c 原始代码文件。若要切换编辑区，可利用稍后介绍的命令，开启操作命令，开启功能表后，按 3 ，再按 2 ，即可切换编辑区：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"jed -2 mysource.c\\n\")])]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"操作\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"有些Emacs的组合键和jed菜单组合键冲突例如Alt+f在Emacs中应该是“前进一个单词”，而在jed中则是“文件菜单” 想使用Emacs风格的组合键的话，编辑\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"/usr/share/jed/lib/menus.slc\")]), _vm._v(\"找到如下段落：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"unsetsetkey (\\\"selectmenubar\\\", \\\"\\\\em\\\");\\nunsetsetkey (\\\"@\\\\emF\\\", \\\"\\\\ef\\\");\\nunsetsetkey (\\\"@\\\\emE\\\", \\\"\\\\ee\\\");\\nunsetsetkey (\\\"@\\\\emo\\\", \\\"\\\\eo\\\");\\n% Mode menu unsetsetkey (\\\"@\\\\emS\\\", \\\"\\\\es\\\");\\nunsetsetkey (\\\"@\\\\emB\\\", \\\"\\\\eb\\\");\\nunsetsetkey (\\\"@\\\\emi\\\", \\\"\\\\ei\\\");\\nunsetsetkey (\\\"@\\\\emH\\\", \\\"\\\\eh\\\");\\nunset_setkey (\\\"@\\\\emy\\\", \\\"\\\\ey\\\");\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"可以根据自己的需要修改，也可以简单的注释掉；使用菜单可以用F10键。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"由于Jed可模拟多种编辑器，其各自按键指令也有所不同。这里以模拟 Emacs 为例，说明在编辑器中的操作方法。\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"文件\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"/usr/share/jed/lib/*.sl 这是默认的运行jed slang的文件。\\n/usr/share/jed/lib/site.sl 这是默认的启动文件。\\n/etc/jed.rc 这是全局系统配置文件。\\n~/.jedrc 这是用户配置文件。\\n\")])])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-1d869d93\",\"hasScoped\":false}!./~/vue-loader/lib/selector.js?type=template&index=0!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/jed.md\n// module id = 1227\n// module chunks = 323","module.exports = require(\"!!vue-loader!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./jed.md\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./command/jed.md\n// module id = 228\n// module chunks = 323","var Component = require(\"!../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  null,\n  /* template */\n  require(\"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-1d869d93\\\",\\\"hasScoped\\\":false}!../node_modules/vue-loader/lib/selector?type=template&index=0!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./jed.md\"),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/jed.md\n// module id = 816\n// module chunks = 323"],"sourceRoot":""}