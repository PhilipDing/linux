{"version":3,"sources":["webpack:///static/js/86.41586235756a9e7f4260.js","webpack:///./command/test.md?e7da","webpack:///./command/test.md?16dd","webpack:///./command/test.md"],"names":["webpackJsonp","1058","module","exports","__webpack_require__","Component","1603","render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","_v","pre","attrs","v-pre","470"],"mappings":"AAAAA,cAAc,KAERC,KACA,SAAUC,EAAQC,EAASC,GCHjC,GAAAC,GAAAD,EAAA,GAEA,KAEAA,EAAA,MAEA,KAEA,KAEA,KAGAF,GAAAC,QAAAE,EAAAF,SDUMG,KACA,SAAUJ,EAAQC,GExBxBD,EAAAC,SAAgBI,OAAA,WAAmB,GAAAC,GAAAC,KAAaC,EAAAF,EAAAG,cAA0BH,GAAAI,MAAAC,EAC1E,OAAAL,GAAAM,GAAA,IACCC,iBAAA,WAA+B,GAAAP,GAAAC,KAAaC,EAAAF,EAAAG,eAA0BE,EAAAL,EAAAI,MAAAC,IAAAH,CACvE,OAAAG,GAAA,WAAAA,EAAA,KAAAA,EAAA,UAAAL,EAAAQ,GAAA,YAAAR,EAAAQ,GAAA,4BAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACAI,KAAA,IACGJ,EAAA,QACHK,OACAC,QAAA,MAEGX,EAAAQ,GAAA,kBAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHI,KAAA,IACGJ,EAAA,QACHK,OACAC,QAAA,MAEGX,EAAAQ,GAAA,6ZAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,8BAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAA,EAAA,UAAAL,EAAAQ,GAAA,aAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHI,KAAA,IACGJ,EAAA,QACHK,OACAC,QAAA,MAEGX,EAAAQ,GAAA,kJAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAA,EAAA,UAAAL,EAAAQ,GAAA,aAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHI,KAAA,IACGJ,EAAA,QACHK,OACAC,QAAA,MAEGX,EAAAQ,GAAA,iJAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAA,EAAA,UAAAL,EAAAQ,GAAA,YAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHI,KAAA,IACGJ,EAAA,QACHK,OACAC,QAAA,MAEGX,EAAAQ,GAAA,mMAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAA,EAAA,UAAAL,EAAAQ,GAAA,YAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHI,KAAA,IACGJ,EAAA,QACHK,OACAC,QAAA,MAEGX,EAAAQ,GAAA,ywBF+BGI,IACA,SAAUlB,EAAQC,EAASC,GGvEjCF,EAAAC,QAAAC,EAAA","file":"static/js/86.41586235756a9e7f4260.js","sourcesContent":["webpackJsonp([86],{\n\n/***/ 1058:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(5)(\n  /* script */\n  null,\n  /* template */\n  __webpack_require__(1603),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 1603:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"test命令\")]), _vm._v(\"是shell环境中测试条件表达式的实用工具。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"test(选项)\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-b<文件>：如果文件为一个块特殊文件，则为真；\\n-c<文件>：如果文件为一个字符特殊文件，则为真；\\n-d<文件>：如果文件为一个目录，则为真；\\n-e<文件>：如果文件存在，则为真；\\n-f<文件>：如果文件为一个普通文件，则为真；\\n-g<文件>：如果设置了文件的SGID位，则为真；\\n-G<文件>：如果文件存在且归该组所有，则为真；\\n-k<文件>：如果设置了文件的粘着位，则为真；\\n-O<文件>：如果文件存在并且归该用户所有，则为真；\\n-p<文件>：如果文件为一个命名管道，则为真；\\n-r<文件>：如果文件可读，则为真；\\n-s<文件>：如果文件的长度不为零，则为真；\\n-S<文件>：如果文件为一个套接字特殊文件，则为真；\\n-u<文件>：如果设置了文件的SUID位，则为真；\\n-[w](#/w \\\"w命令\\\")<文件>：如果文件可写，则为真；\\n-x<文件>：如果文件可执行，则为真。\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('p', [_vm._v(\"linux中shell编程中的test常见用法：\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"判断表达式\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"if test     #表达式为真\\nif test !   #表达式为假\\ntest 表达式1 –a 表达式2     #两个表达式都为真\\ntest 表达式1 –o 表达式2     #两个表达式有一个为真\\ntest 表达式1 ! 表达式2       #条件求反\\n\")])]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"判断字符串\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"test –n 字符串    #字符串的长度非零\\ntest –z 字符串    #字符串的长度是否为零\\ntest 字符串1＝字符串2       #字符串是否相等，若相等返回true\\ntest 字符串1!＝字符串2      #字符串是否不等，若不等反悔false\\n\")])]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"判断整数\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"test 整数1 -eq 整数2    #整数相等\\ntest 整数1 -ge 整数2    #整数1大于等于整数2\\ntest 整数1 -gt 整数2    #整数1大于整数2\\ntest 整数1 -le 整数2    #整数1小于等于整数2\\ntest 整数1 -lt 整数2    #整数1小于整数2\\ntest 整数1 -ne 整数2    #整数1不等于整数2\\n\")])]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"判断文件\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"test File1 –ef File2    两个文件是否为同一个文件，可用于硬连接。主要判断两个文件是否指向同一个inode。\\ntest File1 –nt File2    判断文件1是否比文件2新\\ntest File1 –ot File2    判断文件1比是否文件2旧\\ntest –b [file](#/file \\\"file命令\\\")   #文件是否块设备文件\\ntest –c File   #文件并且是字符设备文件\\ntest –d File   #文件并且是目录\\ntest –e File   #文件是否存在 （常用）\\ntest –f File   #文件是否为正规文件 （常用）\\ntest –g File   #文件是否是设置了组[id](#/id \\\"id命令\\\")\\ntest –G File   #文件属于的有效组ID\\ntest –h File   #文件是否是一个符号链接（同-L）\\ntest –k File   #文件是否设置了Sticky bit位\\ntest –b File   #文件存在并且是块设备文件\\ntest –L File   #文件是否是一个符号链接（同-h）\\ntest –o File   #文件的属于有效用户ID\\ntest –p File   #文件是一个命名管道\\ntest –r File   #文件是否可读\\ntest –s File   #文件是否是非空白文件\\ntest –t FD     #文件描述符是在一个终端打开的\\ntest –u File   #文件存在并且设置了它的[set](#/set \\\"set命令\\\")-user-id位\\ntest –w File   #文件是否存在并可写\\ntest –x File   #文件属否存在并可执行\\n\")])])])\n}]}\n\n/***/ }),\n\n/***/ 470:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(1058);\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/86.41586235756a9e7f4260.js","var Component = require(\"!../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  null,\n  /* template */\n  require(\"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-b584a648\\\",\\\"hasScoped\\\":false}!../node_modules/vue-loader/lib/selector?type=template&index=0!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./test.md\"),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/test.md\n// module id = 1058\n// module chunks = 86","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"test命令\")]), _vm._v(\"是shell环境中测试条件表达式的实用工具。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"test(选项)\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-b<文件>：如果文件为一个块特殊文件，则为真；\\n-c<文件>：如果文件为一个字符特殊文件，则为真；\\n-d<文件>：如果文件为一个目录，则为真；\\n-e<文件>：如果文件存在，则为真；\\n-f<文件>：如果文件为一个普通文件，则为真；\\n-g<文件>：如果设置了文件的SGID位，则为真；\\n-G<文件>：如果文件存在且归该组所有，则为真；\\n-k<文件>：如果设置了文件的粘着位，则为真；\\n-O<文件>：如果文件存在并且归该用户所有，则为真；\\n-p<文件>：如果文件为一个命名管道，则为真；\\n-r<文件>：如果文件可读，则为真；\\n-s<文件>：如果文件的长度不为零，则为真；\\n-S<文件>：如果文件为一个套接字特殊文件，则为真；\\n-u<文件>：如果设置了文件的SUID位，则为真；\\n-[w](#/w \\\"w命令\\\")<文件>：如果文件可写，则为真；\\n-x<文件>：如果文件可执行，则为真。\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('p', [_vm._v(\"linux中shell编程中的test常见用法：\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"判断表达式\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"if test     #表达式为真\\nif test !   #表达式为假\\ntest 表达式1 –a 表达式2     #两个表达式都为真\\ntest 表达式1 –o 表达式2     #两个表达式有一个为真\\ntest 表达式1 ! 表达式2       #条件求反\\n\")])]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"判断字符串\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"test –n 字符串    #字符串的长度非零\\ntest –z 字符串    #字符串的长度是否为零\\ntest 字符串1＝字符串2       #字符串是否相等，若相等返回true\\ntest 字符串1!＝字符串2      #字符串是否不等，若不等反悔false\\n\")])]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"判断整数\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"test 整数1 -eq 整数2    #整数相等\\ntest 整数1 -ge 整数2    #整数1大于等于整数2\\ntest 整数1 -gt 整数2    #整数1大于整数2\\ntest 整数1 -le 整数2    #整数1小于等于整数2\\ntest 整数1 -lt 整数2    #整数1小于整数2\\ntest 整数1 -ne 整数2    #整数1不等于整数2\\n\")])]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"判断文件\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"test File1 –ef File2    两个文件是否为同一个文件，可用于硬连接。主要判断两个文件是否指向同一个inode。\\ntest File1 –nt File2    判断文件1是否比文件2新\\ntest File1 –ot File2    判断文件1比是否文件2旧\\ntest –b [file](#/file \\\"file命令\\\")   #文件是否块设备文件\\ntest –c File   #文件并且是字符设备文件\\ntest –d File   #文件并且是目录\\ntest –e File   #文件是否存在 （常用）\\ntest –f File   #文件是否为正规文件 （常用）\\ntest –g File   #文件是否是设置了组[id](#/id \\\"id命令\\\")\\ntest –G File   #文件属于的有效组ID\\ntest –h File   #文件是否是一个符号链接（同-L）\\ntest –k File   #文件是否设置了Sticky bit位\\ntest –b File   #文件存在并且是块设备文件\\ntest –L File   #文件是否是一个符号链接（同-h）\\ntest –o File   #文件的属于有效用户ID\\ntest –p File   #文件是一个命名管道\\ntest –r File   #文件是否可读\\ntest –s File   #文件是否是非空白文件\\ntest –t FD     #文件描述符是在一个终端打开的\\ntest –u File   #文件存在并且设置了它的[set](#/set \\\"set命令\\\")-user-id位\\ntest –w File   #文件是否存在并可写\\ntest –x File   #文件属否存在并可执行\\n\")])])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-b584a648\",\"hasScoped\":false}!./~/vue-loader/lib/selector.js?type=template&index=0!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/test.md\n// module id = 1603\n// module chunks = 86","module.exports = require(\"!!vue-loader!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./test.md\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./command/test.md\n// module id = 470\n// module chunks = 86"],"sourceRoot":""}