{"version":3,"sources":["webpack:///static/js/84.2d1197700b87b32595f0.js","webpack:///./command/time.md?c73a","webpack:///./command/time.md?7655","webpack:///./command/time.md"],"names":["webpackJsonp","1061","module","exports","__webpack_require__","Component","1441","render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","_v","pre","attrs","v-pre","border","cellpadding","cellspacing","472"],"mappings":"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","file":"static/js/84.2d1197700b87b32595f0.js","sourcesContent":["webpackJsonp([84],{\n\n/***/ 1061:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(5)(\n  /* script */\n  null,\n  /* template */\n  __webpack_require__(1441),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 1441:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"time命令\")]), _vm._v(\"用于统计给定命令所花费的总时间。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"time(参数)\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"参数\")]), _vm._v(\" \"), _c('p', [_vm._v(\"指令：指定需要运行的额指令及其参数。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('p', [_vm._v(\"当测试一个程序或比较不同算法时，执行时间是非常重要的，一个好的算法应该是用时最短的。所有类UNIX系统都包含time命令，使用这个命令可以统计时间消耗。例如：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost ~]# time [ls](#/ls \\\"ls命令\\\")\\nanaconda-ks.cfg  [install](#/install \\\"install命令\\\").log  install.log.syslog  satools  text\\n\\nreal    0m0.009s\\nuser    0m0.002s\\nsys     0m0.007s\\n\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"输出的信息分别显示了该命令所花费的real时间、user时间和sys时间。\")]), _vm._v(\" \"), _c('ul', [_c('li', [_vm._v(\"real时间是指挂钟时间，也就是命令开始执行到结束的时间。这个短时间包括其他进程所占用的时间片，和进程被阻塞时所花费的时间。\")]), _vm._v(\" \"), _c('li', [_vm._v(\"user时间是指进程花费在用户模式中的CPU时间，这是唯一真正用于执行进程所花费的时间，其他进程和花费阻塞状态中的时间没有计算在内。\")]), _vm._v(\" \"), _c('li', [_vm._v(\"sys时间是指花费在内核模式中的CPU时间，代表在内核中执系统调用所花费的时间，这也是真正由进程使用的CPU时间。\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"shell内建也有一个time命令，当运行time时候是调用的系统内建命令，应为系统内建的功能有限，所以需要时间其他功能需要使用time命令可执行二进制文件\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"/usr/bin/time\")]), _vm._v(\"。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"使用\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"-o\")]), _vm._v(\"选项将执行时间写入到文件中：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"/usr/bin/time -o outfile.txt ls\\n\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"使用\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"-a\")]), _vm._v(\"选项追加信息：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"/usr/bin/time -a -o outfile.txt ls\\n\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"使用\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"-f\")]), _vm._v(\"选项格式化时间输出：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"/usr/bin/time -f \\\"time: %U\\\" ls\\n\\n\")])]), _vm._v(\" \"), _c('p', [_c('code', {\n    pre: true\n  }, [_vm._v(\"-f\")]), _vm._v(\"选项后的参数：\")]), _vm._v(\" \"), _c('table', {\n    attrs: {\n      \"border\": \"1\",\n      \"cellpadding\": \"0\",\n      \"cellspacing\": \"0\"\n    }\n  }, [_c('tbody', [_c('tr', [_c('th', [_vm._v(\"参数\")]), _vm._v(\" \"), _c('th', [_vm._v(\"描述\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"%E\")]), _vm._v(\" \"), _c('td', [_vm._v(\"real时间，显示格式为[小时:]分钟:秒\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"%U\")]), _vm._v(\" \"), _c('td', [_vm._v(\"user时间。\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"%S\")]), _vm._v(\" \"), _c('td', [_vm._v(\"sys时间。\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"%C\")]), _vm._v(\" \"), _c('td', [_vm._v(\"进行计时的命令名称和命令行参数。\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"%D\")]), _vm._v(\" \"), _c('td', [_vm._v(\"进程非共享数据区域，以KB为单位。\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"%x\")]), _vm._v(\" \"), _c('td', [_vm._v(\"命令退出状态。\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"%k\")]), _vm._v(\" \"), _c('td', [_vm._v(\"进程接收到的信号数量。\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"%[w](#/w \\\"w命令\\\")\")]), _vm._v(\" \"), _c('td', [_vm._v(\"进程被交换出主存的次数。\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"%Z\")]), _vm._v(\" \"), _c('td', [_vm._v(\"系统的页面大小，这是一个系统常量，不用系统中常量值也不同。\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"%P\")]), _vm._v(\" \"), _c('td', [_vm._v(\"进程所获取的CPU时间百分百，这个值等于user+system时间除以总共的运行时间。\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"%K\")]), _vm._v(\" \"), _c('td', [_vm._v(\"进程的平均总内存使用量（data+stack+text），单位是KB。\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"%w\")]), _vm._v(\" \"), _c('td', [_vm._v(\"进程主动进行上下文切换的次数，例如等待I/O操作完成。\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"%c\")]), _vm._v(\" \"), _c('td', [_vm._v(\"进程被迫进行上下文切换的次数（由于[时间片](http://zh.wikipedia.org/wiki/%E6%97%B6%E9%97%B4%E7%89%87)到期）。\")])])])])])\n}]}\n\n/***/ }),\n\n/***/ 472:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(1061);\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/84.2d1197700b87b32595f0.js","var Component = require(\"!../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  null,\n  /* template */\n  require(\"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-5e8b4843\\\",\\\"hasScoped\\\":false}!../node_modules/vue-loader/lib/selector?type=template&index=0!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./time.md\"),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/time.md\n// module id = 1061\n// module chunks = 84","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"time命令\")]), _vm._v(\"用于统计给定命令所花费的总时间。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"time(参数)\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"参数\")]), _vm._v(\" \"), _c('p', [_vm._v(\"指令：指定需要运行的额指令及其参数。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('p', [_vm._v(\"当测试一个程序或比较不同算法时，执行时间是非常重要的，一个好的算法应该是用时最短的。所有类UNIX系统都包含time命令，使用这个命令可以统计时间消耗。例如：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost ~]# time [ls](#/ls \\\"ls命令\\\")\\nanaconda-ks.cfg  [install](#/install \\\"install命令\\\").log  install.log.syslog  satools  text\\n\\nreal    0m0.009s\\nuser    0m0.002s\\nsys     0m0.007s\\n\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"输出的信息分别显示了该命令所花费的real时间、user时间和sys时间。\")]), _vm._v(\" \"), _c('ul', [_c('li', [_vm._v(\"real时间是指挂钟时间，也就是命令开始执行到结束的时间。这个短时间包括其他进程所占用的时间片，和进程被阻塞时所花费的时间。\")]), _vm._v(\" \"), _c('li', [_vm._v(\"user时间是指进程花费在用户模式中的CPU时间，这是唯一真正用于执行进程所花费的时间，其他进程和花费阻塞状态中的时间没有计算在内。\")]), _vm._v(\" \"), _c('li', [_vm._v(\"sys时间是指花费在内核模式中的CPU时间，代表在内核中执系统调用所花费的时间，这也是真正由进程使用的CPU时间。\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"shell内建也有一个time命令，当运行time时候是调用的系统内建命令，应为系统内建的功能有限，所以需要时间其他功能需要使用time命令可执行二进制文件\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"/usr/bin/time\")]), _vm._v(\"。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"使用\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"-o\")]), _vm._v(\"选项将执行时间写入到文件中：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"/usr/bin/time -o outfile.txt ls\\n\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"使用\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"-a\")]), _vm._v(\"选项追加信息：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"/usr/bin/time -a -o outfile.txt ls\\n\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"使用\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"-f\")]), _vm._v(\"选项格式化时间输出：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"/usr/bin/time -f \\\"time: %U\\\" ls\\n\\n\")])]), _vm._v(\" \"), _c('p', [_c('code', {\n    pre: true\n  }, [_vm._v(\"-f\")]), _vm._v(\"选项后的参数：\")]), _vm._v(\" \"), _c('table', {\n    attrs: {\n      \"border\": \"1\",\n      \"cellpadding\": \"0\",\n      \"cellspacing\": \"0\"\n    }\n  }, [_c('tbody', [_c('tr', [_c('th', [_vm._v(\"参数\")]), _vm._v(\" \"), _c('th', [_vm._v(\"描述\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"%E\")]), _vm._v(\" \"), _c('td', [_vm._v(\"real时间，显示格式为[小时:]分钟:秒\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"%U\")]), _vm._v(\" \"), _c('td', [_vm._v(\"user时间。\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"%S\")]), _vm._v(\" \"), _c('td', [_vm._v(\"sys时间。\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"%C\")]), _vm._v(\" \"), _c('td', [_vm._v(\"进行计时的命令名称和命令行参数。\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"%D\")]), _vm._v(\" \"), _c('td', [_vm._v(\"进程非共享数据区域，以KB为单位。\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"%x\")]), _vm._v(\" \"), _c('td', [_vm._v(\"命令退出状态。\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"%k\")]), _vm._v(\" \"), _c('td', [_vm._v(\"进程接收到的信号数量。\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"%[w](#/w \\\"w命令\\\")\")]), _vm._v(\" \"), _c('td', [_vm._v(\"进程被交换出主存的次数。\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"%Z\")]), _vm._v(\" \"), _c('td', [_vm._v(\"系统的页面大小，这是一个系统常量，不用系统中常量值也不同。\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"%P\")]), _vm._v(\" \"), _c('td', [_vm._v(\"进程所获取的CPU时间百分百，这个值等于user+system时间除以总共的运行时间。\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"%K\")]), _vm._v(\" \"), _c('td', [_vm._v(\"进程的平均总内存使用量（data+stack+text），单位是KB。\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"%w\")]), _vm._v(\" \"), _c('td', [_vm._v(\"进程主动进行上下文切换的次数，例如等待I/O操作完成。\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"%c\")]), _vm._v(\" \"), _c('td', [_vm._v(\"进程被迫进行上下文切换的次数（由于[时间片](http://zh.wikipedia.org/wiki/%E6%97%B6%E9%97%B4%E7%89%87)到期）。\")])])])])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-5e8b4843\",\"hasScoped\":false}!./~/vue-loader/lib/selector.js?type=template&index=0!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/time.md\n// module id = 1441\n// module chunks = 84","module.exports = require(\"!!vue-loader!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./time.md\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./command/time.md\n// module id = 472\n// module chunks = 84"],"sourceRoot":""}