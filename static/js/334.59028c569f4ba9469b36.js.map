{"version":3,"sources":["webpack:///static/js/334.59028c569f4ba9469b36.js","webpack:///./command/ip6tables.md?d8a6","webpack:///./command/ip6tables.md","webpack:///./command/ip6tables.md?cf69"],"names":["webpackJsonp","1502","module","exports","render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","_v","attrs","href","title","pre","v-pre","218","__webpack_require__","806","Component"],"mappings":"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","file":"static/js/334.59028c569f4ba9469b36.js","sourcesContent":["webpackJsonp([334],{\n\n/***/ 1502:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"ip6tables命令\")]), _vm._v(\"和\"), _c('a', {\n    attrs: {\n      \"href\": \"#/iptables\",\n      \"title\": \"iptables命令\"\n    }\n  }, [_vm._v(\"iptables\")]), _vm._v(\"一样，都是linux中防火墙软件，不同的是ip6tables采用的TCP/\"), _c('a', {\n    attrs: {\n      \"href\": \"#/ip\",\n      \"title\": \"ip命令\"\n    }\n  }, [_vm._v(\"ip\")]), _vm._v(\"协议为IPv6。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"ip6tables(选项)\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-t<表>：指定要操纵的表；\\n-A：向规则链中添加条目；\\n-D：从规则链中删除条目；\\n-i：向规则链中插入条目；\\n-R：替换规则链中的条目；\\n-L：显示规则链中已有的条目；\\n-F：清楚规则链中已有的条目；\\n-Z：清空规则链中的数据包计算器和字节计数器；\\n-N：创建新的用户自定义规则链；\\n-P：定义规则链中的默认目标；\\n-h：显示帮助信息；\\n-p：指定要匹配的数据包协议类型；\\n-s：指定要匹配的数据包源ip地址；\\n-j<目标>：指定要跳转的目标；\\n-i<网络接口>：指定数据包进入本机的网络接口；\\n-o<网络接口>：指定数据包要离开本机所使用的网络接口。\\n-c<计数器>：在执行插入操作（insert），追加操作（append），替换操作（replace）时初始化包计数器和字节计数器。\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('p', [_vm._v(\"在命令行窗口输入下面的指令就可以查看当前的 IPv6 防火墙配置：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"ip6tables -[nl](#/nl \\\"nl命令\\\") --line-numbers\\n\")])]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"/etc/sysconfig/ip6tables文件\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"使用编辑器编辑\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"/etc/sysconfig/ip6tables\")]), _vm._v(\"文件：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[vi](#/vi \\\"vi命令\\\") /etc/sysconfig/ip6tables\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"可能会看到下面的默认 ip6tables 规则：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"*filter\\n:INPUT [accept](#/accept \\\"accept命令\\\") [0:0]\\n:FORWARD ACCEPT [0:0]\\n:OUTPUT ACCEPT [0:0]\\n:RH-Firewall-1-INPUT - [0:0]\\n-A INPUT -j RH-Firewall-1-INPUT\\n-A FORWARD -j RH-Firewall-1-INPUT\\n-A RH-Firewall-1-INPUT -i lo -j ACCEPT\\n-A RH-Firewall-1-INPUT -p icmpv6 -j ACCEPT\\n-A RH-Firewall-1-INPUT -p 50 -j ACCEPT\\n-A RH-Firewall-1-INPUT -p 51 -j ACCEPT\\n-A RH-Firewall-1-INPUT -p udp --dport 5353 -d ff02::fb -j ACCEPT\\n-A RH-Firewall-1-INPUT -p udp -m udp --dport 631 -j ACCEPT\\n-A RH-Firewall-1-INPUT -p tcp -m tcp --dport 631 -j ACCEPT\\n-A RH-Firewall-1-INPUT -p udp -m udp --dport 32768:61000 -j ACCEPT\\n-A RH-Firewall-1-INPUT -p tcp -m tcp --dport 32768:61000 ! --syn -j ACCEPT\\n-A RH-Firewall-1-INPUT -m tcp -p tcp --dport 22 -j ACCEPT\\n-A RH-Firewall-1-INPUT -j [reject](#/reject \\\"reject命令\\\") --reject-with icmp6-adm-prohibited\\nCOMMIT\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"与 IPv4 的 iptables 规则类似，但又不完全相同。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"要开启 80 端口（HTTP 服务器端口），在 COMMIT 一行之前添加如下规则：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-A RH-Firewall-1-INPUT -m tcp -p tcp --dport 80 -j ACCEPT\\n\")])]), _vm._v(\" \"), _c('p', [_c('code', {\n    pre: true\n  }, [_vm._v(\"-p tcp\")]), _vm._v(\"表示仅针对 tcp 协议的通信。\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"--dport\")]), _vm._v(\"指定端口号。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"要开启 53 端口（DNS 服务器端口），在 COMMIT 一行之前添加如下规则：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-A RH-Firewall-1-INPUT -m tcp -p tcp --dport 53 -j ACCEPT\\n-A RH-Firewall-1-INPUT -m udp -p tcp --dport 53 -j ACCEPT\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"同时针对 tcp 和 udp 协议开启 53 端口。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"要开启 443 端口，在 COMMIT 一行之前添加如下规则：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-A RH-Firewall-1-INPUT -m tcp -p tcp --dport 443 -j ACCEPT\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"要开启 25 端口（SMTP 邮件服务器端口），在 COMMIT 一行之前添加如下规则：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-A RH-Firewall-1-INPUT -m tcp -p tcp --dport 25 -j ACCEPT\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"对于那些没有特定规则与之匹配的数据包，可能是我们不想要的，多半是有问题的。我们可能也希望在丢弃（DROP）之前记录它们。此时，可以将最后一行：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-A RH-Firewall-1-INPUT -j REJECT --reject-with icmp6-adm-prohibited\\nCOMMIT\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"改为：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-A RH-Firewall-1-INPUT -j LOG\\n-A RH-Firewall-1-INPUT -j DROP\\nCOMMIT\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"保存并关闭该文件。然后重新启动 ip6tables 防火墙：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"# [service](#/service \\\"service命令\\\") ip6tables restart\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"然后重新查看 ip6tables 规则，可以看到如下所示的输出：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"# ip6tables -vnL --line-numbers\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"输出示例：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"Chain INPUT (policy ACCEPT 0 packets, 0 bytes)\\nnum   pkts bytes target     prot opt in     out     source               destination\\n1    42237 3243K RH-Firewall-1-INPUT  all      *      *       ::/0                 ::/0\\nChain FORWARD (policy ACCEPT 0 packets, 0 bytes)\\nnum   pkts bytes target     prot opt in     out     source               destination\\n1        0     0 RH-Firewall-1-INPUT  all      *      *       ::/0                 ::/0\\nChain OUTPUT (policy ACCEPT 12557 packets, 2042K bytes)\\nnum   pkts bytes target     prot opt in     out     source               destination\\nChain RH-Firewall-1-INPUT (2 references)\\nnum   pkts bytes target     prot opt in     out     source               destination\\n1        6   656 ACCEPT     all      lo     *       ::/0                 ::/0\\n2    37519 2730K ACCEPT     icmpv6    *      *       ::/0                 ::/0\\n3        0     0 ACCEPT     esp      *      *       ::/0                 ::/0\\n4        0     0 ACCEPT     ah       *      *       ::/0                 ::/0\\n5      413 48385 ACCEPT     udp      *      *       ::/0                 ff02::fb/128       udp dpt:5353\\n6        0     0 ACCEPT     udp      *      *       ::/0                 ::/0               udp dpt:631\\n7        0     0 ACCEPT     tcp      *      *       ::/0                 ::/0               tcp dpt:631\\n8      173 79521 ACCEPT     udp      *      *       ::/0                 ::/0               udp dpts:32768:61000\\n9        0     0 ACCEPT     tcp      *      *       ::/0                 ::/0               tcp dpts:32768:61000 flags:!0x16/0x02\\n10       0     0 ACCEPT     tcp      *      *       ::/0                 ::/0               tcp dpt:22\\n11       0     0 ACCEPT     tcp      *      *       ::/0                 ::/0               tcp dpt:80\\n12       0     0 ACCEPT     tcp      *      *       ::/0                 ::/0               tcp dpt:53\\n13    4108  380K ACCEPT     udp      *      *       ::/0                 ::/0               udp dpt:53\\n14      18  4196 REJECT     all      *      *       ::/0                 ::/0\\n\")])]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"IPv6 私有 IP\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"IPv4 通常默认即可保护内部局域网私有 IP 上的主机。但是 IPv6 的地址非常丰富，不再需要使用类似 NAT 等协议的私有网络。这样一来，所有的内部主机都可以拥有公网 IP 而直接连接到互联网，也就同时暴露于互联网上的各种威胁之中了。那么，如何配置 IPv6 防火墙使其默认将除了 ping6 请求之外的所有输入数据包都丢弃呢？可以使用\"), _c('a', {\n    attrs: {\n      \"href\": \"http://tools.ietf.org/html/rfc4193\"\n    }\n  }, [_vm._v(\"FC00::/7\")]), _vm._v(\" 前缀来标识本地 IPv6 单播地址。\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"允许特定的 ICMPv6 通信\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"使用 IPv6 的时候需要允许比 IPv4 更多类型的 ICMP 通信以保证路由和 IP 地址自动配置等功能正常工作。有时候，如果你的规则设置太过苛刻，可能都无法分配到正确的 IPv6 地址。当然，不使用 DHCP 而是手动配置 IP 地址的除外。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"下面是一些比较常见的 ipv6-icmp 配置实例：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\":ICMPv6 - [0:0]\\n# Approve certain ICMPv6 types and all outgoing ICMPv6\\n# http://forum.linode.com/viewtopic.[php](#/php \\\"php命令\\\")?p=39840#39840\\n-A INPUT -p icmpv6 -j ICMPv6\\n-A ICMPv6 -p icmpv6 --icmpv6-[type](#/type \\\"type命令\\\") [echo](#/echo \\\"echo命令\\\")-request -j ACCEPT\\n-A ICMPv6 -p icmpv6 --icmpv6-type destination-unreachable -j ACCEPT\\n-A ICMPv6 -p icmpv6 --icmpv6-type packet-too-big -j ACCEPT\\n-A ICMPv6 -p icmpv6 --icmpv6-type [time](#/time \\\"time命令\\\")-exceeded -j ACCEPT\\n-A ICMPv6 -p icmpv6 --icmpv6-type parameter-problem -j ACCEPT\\n-A ICMPv6 -p icmpv6 --icmpv6-type router-solicitation -j ACCEPT\\n-A ICMPv6 -p icmpv6 --icmpv6-type router-advertisement -j ACCEPT\\n-A ICMPv6 -p icmpv6 --icmpv6-type neighbour-solicitation -j ACCEPT\\n-A ICMPv6 -p icmpv6 --icmpv6-type neighbour-advertisement -j ACCEPT\\n-A ICMPv6 -p icmpv6 --icmpv6-type redirect -j ACCEPT\\n-A ICMPv6 -p icmpv6 --icmpv6-type 141 -j ACCEPT\\n-A ICMPv6 -p icmpv6 --icmpv6-type 142 -j ACCEPT\\n-A ICMPv6 -p icmpv6 --icmpv6-type 148 -j ACCEPT\\n-A ICMPv6 -p icmpv6 --icmpv6-type 149 -j ACCEPT\\n-A ICMPv6 -p icmpv6 --icmpv6-type 130 -s fe80::/10 -j ACCEPT\\n-A ICMPv6 -p icmpv6 --icmpv6-type 131 -s fe80::/10 -j ACCEPT\\n-A ICMPv6 -p icmpv6 --icmpv6-type 132 -s fe80::/10 -j ACCEPT\\n-A ICMPv6 -p icmpv6 --icmpv6-type 143 -s fe80::/10 -j ACCEPT\\n-A ICMPv6 -p icmpv6 --icmpv6-type 151 -s fe80::/10 -j ACCEPT\\n-A ICMPv6 -p icmpv6 --icmpv6-type 152 -s fe80::/10 -j ACCEPT\\n-A ICMPv6 -p icmpv6 --icmpv6-type 153 -s fe80::/10 -j ACCEPT\\n-A ICMPv6 -j RETURN\\n-A OUTPUT -p icmpv6 -j ACCEPT\\n\")])])])\n}]}\n\n/***/ }),\n\n/***/ 218:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(806);\n\n/***/ }),\n\n/***/ 806:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(5)(\n  /* script */\n  null,\n  /* template */\n  __webpack_require__(1502),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/334.59028c569f4ba9469b36.js","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"ip6tables命令\")]), _vm._v(\"和\"), _c('a', {\n    attrs: {\n      \"href\": \"#/iptables\",\n      \"title\": \"iptables命令\"\n    }\n  }, [_vm._v(\"iptables\")]), _vm._v(\"一样，都是linux中防火墙软件，不同的是ip6tables采用的TCP/\"), _c('a', {\n    attrs: {\n      \"href\": \"#/ip\",\n      \"title\": \"ip命令\"\n    }\n  }, [_vm._v(\"ip\")]), _vm._v(\"协议为IPv6。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"ip6tables(选项)\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-t<表>：指定要操纵的表；\\n-A：向规则链中添加条目；\\n-D：从规则链中删除条目；\\n-i：向规则链中插入条目；\\n-R：替换规则链中的条目；\\n-L：显示规则链中已有的条目；\\n-F：清楚规则链中已有的条目；\\n-Z：清空规则链中的数据包计算器和字节计数器；\\n-N：创建新的用户自定义规则链；\\n-P：定义规则链中的默认目标；\\n-h：显示帮助信息；\\n-p：指定要匹配的数据包协议类型；\\n-s：指定要匹配的数据包源ip地址；\\n-j<目标>：指定要跳转的目标；\\n-i<网络接口>：指定数据包进入本机的网络接口；\\n-o<网络接口>：指定数据包要离开本机所使用的网络接口。\\n-c<计数器>：在执行插入操作（insert），追加操作（append），替换操作（replace）时初始化包计数器和字节计数器。\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('p', [_vm._v(\"在命令行窗口输入下面的指令就可以查看当前的 IPv6 防火墙配置：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"ip6tables -[nl](#/nl \\\"nl命令\\\") --line-numbers\\n\")])]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"/etc/sysconfig/ip6tables文件\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"使用编辑器编辑\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"/etc/sysconfig/ip6tables\")]), _vm._v(\"文件：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[vi](#/vi \\\"vi命令\\\") /etc/sysconfig/ip6tables\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"可能会看到下面的默认 ip6tables 规则：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"*filter\\n:INPUT [accept](#/accept \\\"accept命令\\\") [0:0]\\n:FORWARD ACCEPT [0:0]\\n:OUTPUT ACCEPT [0:0]\\n:RH-Firewall-1-INPUT - [0:0]\\n-A INPUT -j RH-Firewall-1-INPUT\\n-A FORWARD -j RH-Firewall-1-INPUT\\n-A RH-Firewall-1-INPUT -i lo -j ACCEPT\\n-A RH-Firewall-1-INPUT -p icmpv6 -j ACCEPT\\n-A RH-Firewall-1-INPUT -p 50 -j ACCEPT\\n-A RH-Firewall-1-INPUT -p 51 -j ACCEPT\\n-A RH-Firewall-1-INPUT -p udp --dport 5353 -d ff02::fb -j ACCEPT\\n-A RH-Firewall-1-INPUT -p udp -m udp --dport 631 -j ACCEPT\\n-A RH-Firewall-1-INPUT -p tcp -m tcp --dport 631 -j ACCEPT\\n-A RH-Firewall-1-INPUT -p udp -m udp --dport 32768:61000 -j ACCEPT\\n-A RH-Firewall-1-INPUT -p tcp -m tcp --dport 32768:61000 ! --syn -j ACCEPT\\n-A RH-Firewall-1-INPUT -m tcp -p tcp --dport 22 -j ACCEPT\\n-A RH-Firewall-1-INPUT -j [reject](#/reject \\\"reject命令\\\") --reject-with icmp6-adm-prohibited\\nCOMMIT\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"与 IPv4 的 iptables 规则类似，但又不完全相同。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"要开启 80 端口（HTTP 服务器端口），在 COMMIT 一行之前添加如下规则：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-A RH-Firewall-1-INPUT -m tcp -p tcp --dport 80 -j ACCEPT\\n\")])]), _vm._v(\" \"), _c('p', [_c('code', {\n    pre: true\n  }, [_vm._v(\"-p tcp\")]), _vm._v(\"表示仅针对 tcp 协议的通信。\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"--dport\")]), _vm._v(\"指定端口号。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"要开启 53 端口（DNS 服务器端口），在 COMMIT 一行之前添加如下规则：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-A RH-Firewall-1-INPUT -m tcp -p tcp --dport 53 -j ACCEPT\\n-A RH-Firewall-1-INPUT -m udp -p tcp --dport 53 -j ACCEPT\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"同时针对 tcp 和 udp 协议开启 53 端口。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"要开启 443 端口，在 COMMIT 一行之前添加如下规则：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-A RH-Firewall-1-INPUT -m tcp -p tcp --dport 443 -j ACCEPT\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"要开启 25 端口（SMTP 邮件服务器端口），在 COMMIT 一行之前添加如下规则：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-A RH-Firewall-1-INPUT -m tcp -p tcp --dport 25 -j ACCEPT\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"对于那些没有特定规则与之匹配的数据包，可能是我们不想要的，多半是有问题的。我们可能也希望在丢弃（DROP）之前记录它们。此时，可以将最后一行：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-A RH-Firewall-1-INPUT -j REJECT --reject-with icmp6-adm-prohibited\\nCOMMIT\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"改为：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-A RH-Firewall-1-INPUT -j LOG\\n-A RH-Firewall-1-INPUT -j DROP\\nCOMMIT\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"保存并关闭该文件。然后重新启动 ip6tables 防火墙：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"# [service](#/service \\\"service命令\\\") ip6tables restart\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"然后重新查看 ip6tables 规则，可以看到如下所示的输出：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"# ip6tables -vnL --line-numbers\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"输出示例：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"Chain INPUT (policy ACCEPT 0 packets, 0 bytes)\\nnum   pkts bytes target     prot opt in     out     source               destination\\n1    42237 3243K RH-Firewall-1-INPUT  all      *      *       ::/0                 ::/0\\nChain FORWARD (policy ACCEPT 0 packets, 0 bytes)\\nnum   pkts bytes target     prot opt in     out     source               destination\\n1        0     0 RH-Firewall-1-INPUT  all      *      *       ::/0                 ::/0\\nChain OUTPUT (policy ACCEPT 12557 packets, 2042K bytes)\\nnum   pkts bytes target     prot opt in     out     source               destination\\nChain RH-Firewall-1-INPUT (2 references)\\nnum   pkts bytes target     prot opt in     out     source               destination\\n1        6   656 ACCEPT     all      lo     *       ::/0                 ::/0\\n2    37519 2730K ACCEPT     icmpv6    *      *       ::/0                 ::/0\\n3        0     0 ACCEPT     esp      *      *       ::/0                 ::/0\\n4        0     0 ACCEPT     ah       *      *       ::/0                 ::/0\\n5      413 48385 ACCEPT     udp      *      *       ::/0                 ff02::fb/128       udp dpt:5353\\n6        0     0 ACCEPT     udp      *      *       ::/0                 ::/0               udp dpt:631\\n7        0     0 ACCEPT     tcp      *      *       ::/0                 ::/0               tcp dpt:631\\n8      173 79521 ACCEPT     udp      *      *       ::/0                 ::/0               udp dpts:32768:61000\\n9        0     0 ACCEPT     tcp      *      *       ::/0                 ::/0               tcp dpts:32768:61000 flags:!0x16/0x02\\n10       0     0 ACCEPT     tcp      *      *       ::/0                 ::/0               tcp dpt:22\\n11       0     0 ACCEPT     tcp      *      *       ::/0                 ::/0               tcp dpt:80\\n12       0     0 ACCEPT     tcp      *      *       ::/0                 ::/0               tcp dpt:53\\n13    4108  380K ACCEPT     udp      *      *       ::/0                 ::/0               udp dpt:53\\n14      18  4196 REJECT     all      *      *       ::/0                 ::/0\\n\")])]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"IPv6 私有 IP\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"IPv4 通常默认即可保护内部局域网私有 IP 上的主机。但是 IPv6 的地址非常丰富，不再需要使用类似 NAT 等协议的私有网络。这样一来，所有的内部主机都可以拥有公网 IP 而直接连接到互联网，也就同时暴露于互联网上的各种威胁之中了。那么，如何配置 IPv6 防火墙使其默认将除了 ping6 请求之外的所有输入数据包都丢弃呢？可以使用\"), _c('a', {\n    attrs: {\n      \"href\": \"http://tools.ietf.org/html/rfc4193\"\n    }\n  }, [_vm._v(\"FC00::/7\")]), _vm._v(\" 前缀来标识本地 IPv6 单播地址。\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"允许特定的 ICMPv6 通信\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"使用 IPv6 的时候需要允许比 IPv4 更多类型的 ICMP 通信以保证路由和 IP 地址自动配置等功能正常工作。有时候，如果你的规则设置太过苛刻，可能都无法分配到正确的 IPv6 地址。当然，不使用 DHCP 而是手动配置 IP 地址的除外。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"下面是一些比较常见的 ipv6-icmp 配置实例：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\":ICMPv6 - [0:0]\\n# Approve certain ICMPv6 types and all outgoing ICMPv6\\n# http://forum.linode.com/viewtopic.[php](#/php \\\"php命令\\\")?p=39840#39840\\n-A INPUT -p icmpv6 -j ICMPv6\\n-A ICMPv6 -p icmpv6 --icmpv6-[type](#/type \\\"type命令\\\") [echo](#/echo \\\"echo命令\\\")-request -j ACCEPT\\n-A ICMPv6 -p icmpv6 --icmpv6-type destination-unreachable -j ACCEPT\\n-A ICMPv6 -p icmpv6 --icmpv6-type packet-too-big -j ACCEPT\\n-A ICMPv6 -p icmpv6 --icmpv6-type [time](#/time \\\"time命令\\\")-exceeded -j ACCEPT\\n-A ICMPv6 -p icmpv6 --icmpv6-type parameter-problem -j ACCEPT\\n-A ICMPv6 -p icmpv6 --icmpv6-type router-solicitation -j ACCEPT\\n-A ICMPv6 -p icmpv6 --icmpv6-type router-advertisement -j ACCEPT\\n-A ICMPv6 -p icmpv6 --icmpv6-type neighbour-solicitation -j ACCEPT\\n-A ICMPv6 -p icmpv6 --icmpv6-type neighbour-advertisement -j ACCEPT\\n-A ICMPv6 -p icmpv6 --icmpv6-type redirect -j ACCEPT\\n-A ICMPv6 -p icmpv6 --icmpv6-type 141 -j ACCEPT\\n-A ICMPv6 -p icmpv6 --icmpv6-type 142 -j ACCEPT\\n-A ICMPv6 -p icmpv6 --icmpv6-type 148 -j ACCEPT\\n-A ICMPv6 -p icmpv6 --icmpv6-type 149 -j ACCEPT\\n-A ICMPv6 -p icmpv6 --icmpv6-type 130 -s fe80::/10 -j ACCEPT\\n-A ICMPv6 -p icmpv6 --icmpv6-type 131 -s fe80::/10 -j ACCEPT\\n-A ICMPv6 -p icmpv6 --icmpv6-type 132 -s fe80::/10 -j ACCEPT\\n-A ICMPv6 -p icmpv6 --icmpv6-type 143 -s fe80::/10 -j ACCEPT\\n-A ICMPv6 -p icmpv6 --icmpv6-type 151 -s fe80::/10 -j ACCEPT\\n-A ICMPv6 -p icmpv6 --icmpv6-type 152 -s fe80::/10 -j ACCEPT\\n-A ICMPv6 -p icmpv6 --icmpv6-type 153 -s fe80::/10 -j ACCEPT\\n-A ICMPv6 -j RETURN\\n-A OUTPUT -p icmpv6 -j ACCEPT\\n\")])])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-6cec0be8\",\"hasScoped\":false}!./~/vue-loader/lib/selector.js?type=template&index=0!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/ip6tables.md\n// module id = 1502\n// module chunks = 334","module.exports = require(\"!!vue-loader!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./ip6tables.md\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./command/ip6tables.md\n// module id = 218\n// module chunks = 334","var Component = require(\"!../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  null,\n  /* template */\n  require(\"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-6cec0be8\\\",\\\"hasScoped\\\":false}!../node_modules/vue-loader/lib/selector?type=template&index=0!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./ip6tables.md\"),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/ip6tables.md\n// module id = 806\n// module chunks = 334"],"sourceRoot":""}