{"version":3,"sources":["webpack:///static/js/215.d0d3ba7771009a7c6407.js","webpack:///./command/patch.md?b518","webpack:///./command/patch.md","webpack:///./command/patch.md?f64d"],"names":["webpackJsonp","1643","module","exports","render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","_v","pre","attrs","v-pre","340","__webpack_require__","928","Component"],"mappings":"AAAAA,cAAc,MAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAgBC,OAAA,WAAmB,GAAAC,GAAAC,KAAaC,EAAAF,EAAAG,cAA0BH,GAAAI,MAAAC,EAC1E,OAAAL,GAAAM,GAAA,IACCC,iBAAA,WAA+B,GAAAP,GAAAC,KAAaC,EAAAF,EAAAG,eAA0BE,EAAAL,EAAAI,MAAAC,IAAAH,CACvE,OAAAG,GAAA,WAAAA,EAAA,KAAAA,EAAA,UAAAL,EAAAQ,GAAA,aAAAR,EAAAQ,GAAA,wHAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACAI,KAAA,IACGJ,EAAA,QACHK,OACAC,QAAA,MAEGX,EAAAQ,GAAA,uBAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHI,KAAA,IACGJ,EAAA,QACHK,OACAC,QAAA,MAEGX,EAAAQ,GAAA,smDAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAA,EAAA,MAAAL,EAAAQ,GAAA,uBAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,0BDUGI,IACA,SAAUf,EAAQC,EAASe,GE1BjChB,EAAAC,QAAAe,EAAA,MFgCMC,IACA,SAAUjB,EAAQC,EAASe,GGjCjC,GAAAE,GAAAF,EAAA,GAEA,KAEAA,EAAA,MAEA,KAEA,KAEA,KAGAhB,GAAAC,QAAAiB,EAAAjB","file":"static/js/215.d0d3ba7771009a7c6407.js","sourcesContent":["webpackJsonp([215],{\n\n/***/ 1643:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"patch命令\")]), _vm._v(\"被用于为开放源代码软件安装补丁程序。让用户利用设置修补文件的方式，修改，更新原始文件。如果一次仅修改一个文件，可直接在命令列中下达指令依序执行。如果配合修补文件的方式则能一次修补大批文件，这也是Linux系统核心的升级方法之一。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"patch(选项)(参数)\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-b或--backup：备份每一个原始文件；\\n-B<备份字首字符串>或--prefix=<备份字首字符串>：设置文件备份时，附加在文件名称前面的字首字符串，该字符串可以是路径名称；\\n-c或--context：把修补数据解译成关联性的差异；\\n-d<工作目录>或--directory=<工作目录>：设置工作目录；\\n-D<标示符号>或--ifdef=<标示符号>：用指定的符号把改变的地方标示出来；\\n-e或--[ed](#/ed \\\"ed命令\\\")：把修补数据解译成ed指令可用的叙述文件；\\n-E或--remove-empty-files：若修补过后输出的文件其内容是一片空白，则移除该文件；\\n-f或--force：此参数的效果和指定\\\"-t\\\"参数类似，但会假设修补数据的版本为新版本；\\n-F<监别列数>或--fuzz<监别列数>：设置监别列数的最大值；\\n-g<控制数值>或--get=<控制数值>：设置以RSC或SCCS控制修补作业；\\n-i<修补文件>或--input=<修补文件>：读取指定的修补问家你；\\n-l或--ignore-whitespace：忽略修补数据与输入数据的跳格，空格字符；\\n-n或--normal：把修补数据解译成一般性的差异；\\n-N或--forward：忽略修补的数据较原始文件的版本更旧，或该版本的修补数据已使 用过；\\n-o<输出文件>或--output=<输出文件>：设置输出文件的名称，修补过的文件会以该名称存放；\\n-p<剥离层级>或--strip=<剥离层级>：设置欲剥离几层路径名称；\\n-f<拒绝文件>或--[reject](#/reject \\\"reject命令\\\")-[file](#/file \\\"file命令\\\")=<拒绝文件>：设置保存拒绝修补相关信息的文件名称，预设的文件名称为.rej；\\n-R或--reverse：假设修补数据是由新旧文件交换位置而产生；\\n-s或--quiet或--silent：不显示指令执行过程，除非发生错误；\\n-t或--[batch](#/batch \\\"batch命令\\\")：自动略过错误，不询问任何问题；\\n-T或--[set](#/set \\\"set命令\\\")-[time](#/time \\\"time命令\\\")：此参数的效果和指定\\\"-Z\\\"参数类似，但以本地时间为主；\\n-u或--unified：把修补数据解译成一致化的差异；\\n-v或--version：显示版本信息；\\n-V<备份方式>或--version-control=<备份方式>：用\\\"-b\\\"参数备份目标文件后，备份文件的字尾会被加上一个备份字符串，这个字符串不仅可用\\\"-z\\\"参数变更，当使用\\\"-V\\\"参数指定不同备份方式时，也会产生不同字尾的备份字符串；\\n-Y<备份字首字符串>或--[basename](#/basename \\\"basename命令\\\")-prefix=--<备份字首字符串>：设置文件备份时，附加在文件基本名称开头的字首字符串；\\n-z<备份字尾字符串>或--suffix=<备份字尾字符串>：此参数的效果和指定\\\"-B\\\"参数类似，差别在于修补作业使用的路径与文件名若为src/linux/fs/super.c，加上\\\"backup/\\\"字符串后，文件super.c会备份于/src/linux/fs/backup目录里；\\n-Z或--set-utc：把修补过的文件更改，存取时间设为UTC；\\n--backup-if-mismatch：在修补数据不完全吻合，且没有刻意指定要备份文件时，才备份文件；\\n--binary：以二进制模式读写数据，而不通过标准输出设备；\\n--[help](#/help \\\"help命令\\\")：在线帮助；\\n--nobackup-if-mismatch：在修补数据不完全吻合，且没有刻意指定要备份文件时，不要备份文件；\\n--verbose：详细显示指令的执行过程。\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"参数\")]), _vm._v(\" \"), _c('ul', [_c('li', [_vm._v(\"原文件：指定需要打补丁的原始文件；\")]), _vm._v(\" \"), _c('li', [_vm._v(\"补丁文件：指定补丁文件。\")])])])\n}]}\n\n/***/ }),\n\n/***/ 340:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(928);\n\n/***/ }),\n\n/***/ 928:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(5)(\n  /* script */\n  null,\n  /* template */\n  __webpack_require__(1643),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/215.d0d3ba7771009a7c6407.js","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"patch命令\")]), _vm._v(\"被用于为开放源代码软件安装补丁程序。让用户利用设置修补文件的方式，修改，更新原始文件。如果一次仅修改一个文件，可直接在命令列中下达指令依序执行。如果配合修补文件的方式则能一次修补大批文件，这也是Linux系统核心的升级方法之一。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"patch(选项)(参数)\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-b或--backup：备份每一个原始文件；\\n-B<备份字首字符串>或--prefix=<备份字首字符串>：设置文件备份时，附加在文件名称前面的字首字符串，该字符串可以是路径名称；\\n-c或--context：把修补数据解译成关联性的差异；\\n-d<工作目录>或--directory=<工作目录>：设置工作目录；\\n-D<标示符号>或--ifdef=<标示符号>：用指定的符号把改变的地方标示出来；\\n-e或--[ed](#/ed \\\"ed命令\\\")：把修补数据解译成ed指令可用的叙述文件；\\n-E或--remove-empty-files：若修补过后输出的文件其内容是一片空白，则移除该文件；\\n-f或--force：此参数的效果和指定\\\"-t\\\"参数类似，但会假设修补数据的版本为新版本；\\n-F<监别列数>或--fuzz<监别列数>：设置监别列数的最大值；\\n-g<控制数值>或--get=<控制数值>：设置以RSC或SCCS控制修补作业；\\n-i<修补文件>或--input=<修补文件>：读取指定的修补问家你；\\n-l或--ignore-whitespace：忽略修补数据与输入数据的跳格，空格字符；\\n-n或--normal：把修补数据解译成一般性的差异；\\n-N或--forward：忽略修补的数据较原始文件的版本更旧，或该版本的修补数据已使 用过；\\n-o<输出文件>或--output=<输出文件>：设置输出文件的名称，修补过的文件会以该名称存放；\\n-p<剥离层级>或--strip=<剥离层级>：设置欲剥离几层路径名称；\\n-f<拒绝文件>或--[reject](#/reject \\\"reject命令\\\")-[file](#/file \\\"file命令\\\")=<拒绝文件>：设置保存拒绝修补相关信息的文件名称，预设的文件名称为.rej；\\n-R或--reverse：假设修补数据是由新旧文件交换位置而产生；\\n-s或--quiet或--silent：不显示指令执行过程，除非发生错误；\\n-t或--[batch](#/batch \\\"batch命令\\\")：自动略过错误，不询问任何问题；\\n-T或--[set](#/set \\\"set命令\\\")-[time](#/time \\\"time命令\\\")：此参数的效果和指定\\\"-Z\\\"参数类似，但以本地时间为主；\\n-u或--unified：把修补数据解译成一致化的差异；\\n-v或--version：显示版本信息；\\n-V<备份方式>或--version-control=<备份方式>：用\\\"-b\\\"参数备份目标文件后，备份文件的字尾会被加上一个备份字符串，这个字符串不仅可用\\\"-z\\\"参数变更，当使用\\\"-V\\\"参数指定不同备份方式时，也会产生不同字尾的备份字符串；\\n-Y<备份字首字符串>或--[basename](#/basename \\\"basename命令\\\")-prefix=--<备份字首字符串>：设置文件备份时，附加在文件基本名称开头的字首字符串；\\n-z<备份字尾字符串>或--suffix=<备份字尾字符串>：此参数的效果和指定\\\"-B\\\"参数类似，差别在于修补作业使用的路径与文件名若为src/linux/fs/super.c，加上\\\"backup/\\\"字符串后，文件super.c会备份于/src/linux/fs/backup目录里；\\n-Z或--set-utc：把修补过的文件更改，存取时间设为UTC；\\n--backup-if-mismatch：在修补数据不完全吻合，且没有刻意指定要备份文件时，才备份文件；\\n--binary：以二进制模式读写数据，而不通过标准输出设备；\\n--[help](#/help \\\"help命令\\\")：在线帮助；\\n--nobackup-if-mismatch：在修补数据不完全吻合，且没有刻意指定要备份文件时，不要备份文件；\\n--verbose：详细显示指令的执行过程。\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"参数\")]), _vm._v(\" \"), _c('ul', [_c('li', [_vm._v(\"原文件：指定需要打补丁的原始文件；\")]), _vm._v(\" \"), _c('li', [_vm._v(\"补丁文件：指定补丁文件。\")])])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-df8dec98\",\"hasScoped\":false}!./~/vue-loader/lib/selector.js?type=template&index=0!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/patch.md\n// module id = 1643\n// module chunks = 215","module.exports = require(\"!!vue-loader!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./patch.md\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./command/patch.md\n// module id = 340\n// module chunks = 215","var Component = require(\"!../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  null,\n  /* template */\n  require(\"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-df8dec98\\\",\\\"hasScoped\\\":false}!../node_modules/vue-loader/lib/selector?type=template&index=0!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./patch.md\"),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/patch.md\n// module id = 928\n// module chunks = 215"],"sourceRoot":""}