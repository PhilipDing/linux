{"version":3,"sources":["webpack:///static/js/92.71689434449ac5239f39.js","webpack:///./command/tar.md?b4a7","webpack:///./command/tar.md?90a6","webpack:///./command/tar.md"],"names":["webpackJsonp","1052","module","exports","__webpack_require__","Component","1153","render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","_v","attrs","href","title","pre","v-pre","463"],"mappings":"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","file":"static/js/92.71689434449ac5239f39.js","sourcesContent":["webpackJsonp([92],{\n\n/***/ 1052:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(5)(\n  /* script */\n  null,\n  /* template */\n  __webpack_require__(1153),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 1153:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"tar命令\")]), _vm._v(\"可以为linux的文件和目录创建档案。利用tar，可以为某一特定文件创建档案（备份文件），也可以在档案中改变文件，或者向档案中加入新的文件。tar最初被用来在磁带上创建档案，现在，用户可以在任何设备上创建档案。利用tar命令，可以把一大堆的文件和目录全部打包成一个文件，这对于备份文件或将几个文件组合成为一个文件以便于网络传输是非常有用的。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"首先要弄清两个概念：打包和压缩。打包是指将一大堆文件或目录变成一个总的文件；压缩则是将一个大的文件通过一些压缩算法变成一个小文件。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"为什么要区分这两个概念呢？这源于Linux中很多压缩程序只能针对一个文件进行压缩，这样当你想要压缩一大堆文件时，你得先将这一大堆文件先打成一个包（tar命令），然后再用压缩程序进行压缩（\"), _c('a', {\n    attrs: {\n      \"href\": \"#/gzip\",\n      \"title\": \"gzip命令\"\n    }\n  }, [_vm._v(\"gzip\")]), _vm._v(\" \"), _c('a', {\n    attrs: {\n      \"href\": \"#/bzip2\",\n      \"title\": \"bzip2命令\"\n    }\n  }, [_vm._v(\"bzip2\")]), _vm._v(\"命令）。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"tar(选项)(参数)\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-A或--catenate：新增文件到以存在的备份文件；\\n-B：设置区块大小；\\n-c或--create：建立新的备份文件；\\n-C <目录>：这个选项用在解压缩，若要在特定目录解压缩，可以使用这个选项。\\n-d：记录文件的差别；\\n-x或--extract或--get：从备份文件中还原文件；\\n-t或--list：列出备份文件的内容；\\n-z或--gzip或--ungzip：通过gzip指令处理备份文件；\\n-Z或--[compress](#/compress \\\"compress命令\\\")或--[uncompress](#/uncompress \\\"uncompress命令\\\")：通过compress指令处理备份文件；\\n-f<备份文件>或--[file](#/file \\\"file命令\\\")=<备份文件>：指定备份文件；\\n-v或--verbose：显示指令执行过程；\\n-r：添加文件到已经压缩的文件；\\n-u：添加改变了和现有的文件到已经存在的压缩文件；\\n-j：支持bzip2解压文件；\\n-v：显示操作过程；\\n-l：文件系统边界设置；\\n-k：保留原有文件不覆盖；\\n-m：保留文件不被覆盖；\\n-[w](#/w \\\"w命令\\\")：确认压缩文件的正确性；\\n-p或--same-permissions：用原来的文件权限还原文件；\\n-P或--absolute-names：文件名使用绝对名称，不移除文件名称前的“/”号；\\n-N <日期格式> 或 --newer=<日期时间>：只将较指定日期更新的文件保存到备份文件里；\\n--exclude=<范本样式>：排除符合范本样式的文件。\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"参数\")]), _vm._v(\" \"), _c('p', [_vm._v(\"文件或目录：指定要打包的文件或目录列表。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"将文件全部打包成tar包\")]), _vm._v(\"：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"tar -cvf log.tar log2012.log    仅打包，不压缩！ \\ntar -zcvf log.tar.gz log2012.log   打包后，以 gzip 压缩 \\ntar -jcvf log.tar.bz2 log2012.log  打包后，以 bzip2 压缩 \\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"在选项\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"f\")]), _vm._v(\"之后的文件档名是自己取的，我们习惯上都用 .tar 来作为辨识。 如果加\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"z\")]), _vm._v(\"选项，则以.tar.gz或.tgz来代表gzip压缩过的tar包；如果加\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"j\")]), _vm._v(\"选项，则以.tar.bz2来作为tar包名。\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"查阅上述tar包内有哪些文件\")]), _vm._v(\"：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"tar -ztvf log.tar.gz\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"由于我们使用 gzip 压缩的log.tar.gz，所以要查阅log.tar.gz包内的文件时，就得要加上\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"z\")]), _vm._v(\"这个选项了。\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"将tar包解压缩\")]), _vm._v(\"：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"tar -zxvf /opt/soft/[test](#/test \\\"test命令\\\")/log.tar.gz\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"在预设的情况下，我们可以将压缩档在任何地方解开的\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"只将tar内的部分文件解压出来\")]), _vm._v(\"：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"tar -zxvf /opt/soft/test/log30.tar.gz log2013.log\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"我可以透过\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"tar -ztvf\")]), _vm._v(\"来查阅 tar 包内的文件名称，如果单只要一个文件，就可以透过这个方式来解压部分文件！\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"文件备份下来，并且保存其权限\")]), _vm._v(\"：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"tar -zcvpf log31.tar.gz log2014.log log2015.log log2016.log\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"这个\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"-p\")]), _vm._v(\"的属性是很重要的，尤其是当您要保留原本文件的属性时。\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"在文件夹当中，比某个日期新的文件才备份\")]), _vm._v(\"：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"tar -N \\\"2012/11/13\\\" -zcvf log17.tar.gz test\\n\")])]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"备份文件夹内容是排除部分文件：\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"tar --exclude scf/[service](#/service \\\"service命令\\\") -zcvf scf.tar.gz scf/*\\n\")])]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"其实最简单的使用 tar 就只要记忆底下的方式即可：\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"压　缩：tar -jcv -f filename.tar.bz2 要被压缩的文件或目录名称\\n查　询：tar -jtv -f filename.tar.bz2\\n解压缩：tar -jxv -f filename.tar.bz2 -C 欲解压缩的目录\\n\")])])])\n}]}\n\n/***/ }),\n\n/***/ 463:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(1052);\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/92.71689434449ac5239f39.js","var Component = require(\"!../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  null,\n  /* template */\n  require(\"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-029d8335\\\",\\\"hasScoped\\\":false}!../node_modules/vue-loader/lib/selector?type=template&index=0!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./tar.md\"),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/tar.md\n// module id = 1052\n// module chunks = 92","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"tar命令\")]), _vm._v(\"可以为linux的文件和目录创建档案。利用tar，可以为某一特定文件创建档案（备份文件），也可以在档案中改变文件，或者向档案中加入新的文件。tar最初被用来在磁带上创建档案，现在，用户可以在任何设备上创建档案。利用tar命令，可以把一大堆的文件和目录全部打包成一个文件，这对于备份文件或将几个文件组合成为一个文件以便于网络传输是非常有用的。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"首先要弄清两个概念：打包和压缩。打包是指将一大堆文件或目录变成一个总的文件；压缩则是将一个大的文件通过一些压缩算法变成一个小文件。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"为什么要区分这两个概念呢？这源于Linux中很多压缩程序只能针对一个文件进行压缩，这样当你想要压缩一大堆文件时，你得先将这一大堆文件先打成一个包（tar命令），然后再用压缩程序进行压缩（\"), _c('a', {\n    attrs: {\n      \"href\": \"#/gzip\",\n      \"title\": \"gzip命令\"\n    }\n  }, [_vm._v(\"gzip\")]), _vm._v(\" \"), _c('a', {\n    attrs: {\n      \"href\": \"#/bzip2\",\n      \"title\": \"bzip2命令\"\n    }\n  }, [_vm._v(\"bzip2\")]), _vm._v(\"命令）。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"tar(选项)(参数)\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-A或--catenate：新增文件到以存在的备份文件；\\n-B：设置区块大小；\\n-c或--create：建立新的备份文件；\\n-C <目录>：这个选项用在解压缩，若要在特定目录解压缩，可以使用这个选项。\\n-d：记录文件的差别；\\n-x或--extract或--get：从备份文件中还原文件；\\n-t或--list：列出备份文件的内容；\\n-z或--gzip或--ungzip：通过gzip指令处理备份文件；\\n-Z或--[compress](#/compress \\\"compress命令\\\")或--[uncompress](#/uncompress \\\"uncompress命令\\\")：通过compress指令处理备份文件；\\n-f<备份文件>或--[file](#/file \\\"file命令\\\")=<备份文件>：指定备份文件；\\n-v或--verbose：显示指令执行过程；\\n-r：添加文件到已经压缩的文件；\\n-u：添加改变了和现有的文件到已经存在的压缩文件；\\n-j：支持bzip2解压文件；\\n-v：显示操作过程；\\n-l：文件系统边界设置；\\n-k：保留原有文件不覆盖；\\n-m：保留文件不被覆盖；\\n-[w](#/w \\\"w命令\\\")：确认压缩文件的正确性；\\n-p或--same-permissions：用原来的文件权限还原文件；\\n-P或--absolute-names：文件名使用绝对名称，不移除文件名称前的“/”号；\\n-N <日期格式> 或 --newer=<日期时间>：只将较指定日期更新的文件保存到备份文件里；\\n--exclude=<范本样式>：排除符合范本样式的文件。\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"参数\")]), _vm._v(\" \"), _c('p', [_vm._v(\"文件或目录：指定要打包的文件或目录列表。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"将文件全部打包成tar包\")]), _vm._v(\"：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"tar -cvf log.tar log2012.log    仅打包，不压缩！ \\ntar -zcvf log.tar.gz log2012.log   打包后，以 gzip 压缩 \\ntar -jcvf log.tar.bz2 log2012.log  打包后，以 bzip2 压缩 \\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"在选项\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"f\")]), _vm._v(\"之后的文件档名是自己取的，我们习惯上都用 .tar 来作为辨识。 如果加\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"z\")]), _vm._v(\"选项，则以.tar.gz或.tgz来代表gzip压缩过的tar包；如果加\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"j\")]), _vm._v(\"选项，则以.tar.bz2来作为tar包名。\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"查阅上述tar包内有哪些文件\")]), _vm._v(\"：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"tar -ztvf log.tar.gz\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"由于我们使用 gzip 压缩的log.tar.gz，所以要查阅log.tar.gz包内的文件时，就得要加上\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"z\")]), _vm._v(\"这个选项了。\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"将tar包解压缩\")]), _vm._v(\"：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"tar -zxvf /opt/soft/[test](#/test \\\"test命令\\\")/log.tar.gz\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"在预设的情况下，我们可以将压缩档在任何地方解开的\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"只将tar内的部分文件解压出来\")]), _vm._v(\"：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"tar -zxvf /opt/soft/test/log30.tar.gz log2013.log\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"我可以透过\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"tar -ztvf\")]), _vm._v(\"来查阅 tar 包内的文件名称，如果单只要一个文件，就可以透过这个方式来解压部分文件！\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"文件备份下来，并且保存其权限\")]), _vm._v(\"：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"tar -zcvpf log31.tar.gz log2014.log log2015.log log2016.log\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"这个\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"-p\")]), _vm._v(\"的属性是很重要的，尤其是当您要保留原本文件的属性时。\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"在文件夹当中，比某个日期新的文件才备份\")]), _vm._v(\"：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"tar -N \\\"2012/11/13\\\" -zcvf log17.tar.gz test\\n\")])]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"备份文件夹内容是排除部分文件：\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"tar --exclude scf/[service](#/service \\\"service命令\\\") -zcvf scf.tar.gz scf/*\\n\")])]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"其实最简单的使用 tar 就只要记忆底下的方式即可：\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"压　缩：tar -jcv -f filename.tar.bz2 要被压缩的文件或目录名称\\n查　询：tar -jtv -f filename.tar.bz2\\n解压缩：tar -jxv -f filename.tar.bz2 -C 欲解压缩的目录\\n\")])])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-029d8335\",\"hasScoped\":false}!./~/vue-loader/lib/selector.js?type=template&index=0!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/tar.md\n// module id = 1153\n// module chunks = 92","module.exports = require(\"!!vue-loader!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./tar.md\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./command/tar.md\n// module id = 463\n// module chunks = 92"],"sourceRoot":""}