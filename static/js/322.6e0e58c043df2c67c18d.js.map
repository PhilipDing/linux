{"version":3,"sources":["webpack:///static/js/322.6e0e58c043df2c67c18d.js","webpack:///./command/jobs.md?b846","webpack:///./command/jobs.md","webpack:///./command/jobs.md?39ac"],"names":["webpackJsonp","1607","module","exports","render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","_v","attrs","href","title","pre","v-pre","230","__webpack_require__","818","Component"],"mappings":"AAAAA,cAAc,MAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAgBC,OAAA,WAAmB,GAAAC,GAAAC,KAAaC,EAAAF,EAAAG,cAA0BH,GAAAI,MAAAC,EAC1E,OAAAL,GAAAM,GAAA,IACCC,iBAAA,WAA+B,GAAAP,GAAAC,KAAaC,EAAAF,EAAAG,eAA0BE,EAAAL,EAAAI,MAAAC,IAAAH,CACvE,OAAAG,GAAA,WAAAA,EAAA,KAAAA,EAAA,UAAAL,EAAAQ,GAAA,YAAAR,EAAAQ,GAAA,iHAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,8EAAAH,EAAA,KACAI,OACAC,KAAA,OACAC,MAAA,UAEGX,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,OAAAH,EAAA,KACHI,OACAC,KAAA,OACAC,MAAA,UAEGX,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,sBAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHO,KAAA,IACGP,EAAA,QACHI,OACAI,QAAA,MAEGb,EAAAQ,GAAA,sBAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHO,KAAA,IACGP,EAAA,QACHI,OACAI,QAAA,MAEGb,EAAAQ,GAAA,oGAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,wBAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,iCAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHO,KAAA,IACGP,EAAA,QACHI,OACAI,QAAA,MAEGb,EAAAQ,GAAA,4CAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,uCAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHO,KAAA,IACGP,EAAA,QACHI,OACAI,QAAA,MAEGb,EAAAQ,GAAA,4EAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,kCAAAH,EAAA,QACHO,KAAA,IACGZ,EAAAQ,GAAA,6BAAAR,EAAAQ,GAAA,2BAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,uEDUGM,IACA,SAAUjB,EAAQC,EAASiB,GElDjClB,EAAAC,QAAAiB,EAAA,MFwDMC,IACA,SAAUnB,EAAQC,EAASiB,GGzDjC,GAAAE,GAAAF,EAAA,GAEA,KAEAA,EAAA,MAEA,KAEA,KAEA,KAGAlB,GAAAC,QAAAmB,EAAAnB","file":"static/js/322.6e0e58c043df2c67c18d.js","sourcesContent":["webpackJsonp([322],{\n\n/***/ 1607:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"jobs命令\")]), _vm._v(\"用于显示Linux中的任务列表及任务状态，包括后台运行的任务。该命令可以显示任务号及其对应的进程号。其中，任务号是以普通用户的角度进行的，而进程号则是从系统管理员的角度来看的。一个任务可以对应于一个或者多个进程号。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"在Linux系统中执行某些操作时候，有时需要将当前任务暂停调至后台，或有时须将后台暂停的任务重启开启并调至前台，这一序列的操作将会使用到 jobs、\"), _c('a', {\n    attrs: {\n      \"href\": \"#/bg\",\n      \"title\": \"bg命令\"\n    }\n  }, [_vm._v(\"bg\")]), _vm._v(\"、和 \"), _c('a', {\n    attrs: {\n      \"href\": \"#/fg\",\n      \"title\": \"fg命令\"\n    }\n  }, [_vm._v(\"fg\")]), _vm._v(\" 三个命令以及两个快捷键来完成。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"jobs(选项)(参数)\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-l：显示进程号；\\n-p：仅任务对应的显示进程号；\\n-n：显示任务状态的变化；\\n-r：仅输出运行状态（running）的任务；\\n-s：仅输出停止状态（stoped）的任务。\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"参数\")]), _vm._v(\" \"), _c('p', [_vm._v(\"任务标识号：指定要显示的任务识别号。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('p', [_vm._v(\"使用jobs命令显示当前系统的任务列表，输入如下命令：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"jobs -l               #显示当前系统的任务列表\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"上面的命令执行后，将显示出当前系统下的任务列表信息，具体如下所示：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[1] + 1903 运行中          [find](#/find \\\"find命令\\\") / -name password &\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"注意：要得到以上输出信息，必须在执行jobs命令之前执行命令\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"find / -name password &\")]), _vm._v(\"。否则，执行jobs命令不会显示任何信息。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"其中，输出信息的第一列表示任务编号，第二列表示任务所对应的进程号，第三列表示任务的运行状态，第四列表示启动任务的命令。\")])])\n}]}\n\n/***/ }),\n\n/***/ 230:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(818);\n\n/***/ }),\n\n/***/ 818:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(5)(\n  /* script */\n  null,\n  /* template */\n  __webpack_require__(1607),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/322.6e0e58c043df2c67c18d.js","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"jobs命令\")]), _vm._v(\"用于显示Linux中的任务列表及任务状态，包括后台运行的任务。该命令可以显示任务号及其对应的进程号。其中，任务号是以普通用户的角度进行的，而进程号则是从系统管理员的角度来看的。一个任务可以对应于一个或者多个进程号。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"在Linux系统中执行某些操作时候，有时需要将当前任务暂停调至后台，或有时须将后台暂停的任务重启开启并调至前台，这一序列的操作将会使用到 jobs、\"), _c('a', {\n    attrs: {\n      \"href\": \"#/bg\",\n      \"title\": \"bg命令\"\n    }\n  }, [_vm._v(\"bg\")]), _vm._v(\"、和 \"), _c('a', {\n    attrs: {\n      \"href\": \"#/fg\",\n      \"title\": \"fg命令\"\n    }\n  }, [_vm._v(\"fg\")]), _vm._v(\" 三个命令以及两个快捷键来完成。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"jobs(选项)(参数)\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-l：显示进程号；\\n-p：仅任务对应的显示进程号；\\n-n：显示任务状态的变化；\\n-r：仅输出运行状态（running）的任务；\\n-s：仅输出停止状态（stoped）的任务。\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"参数\")]), _vm._v(\" \"), _c('p', [_vm._v(\"任务标识号：指定要显示的任务识别号。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('p', [_vm._v(\"使用jobs命令显示当前系统的任务列表，输入如下命令：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"jobs -l               #显示当前系统的任务列表\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"上面的命令执行后，将显示出当前系统下的任务列表信息，具体如下所示：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[1] + 1903 运行中          [find](#/find \\\"find命令\\\") / -name password &\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"注意：要得到以上输出信息，必须在执行jobs命令之前执行命令\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"find / -name password &\")]), _vm._v(\"。否则，执行jobs命令不会显示任何信息。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"其中，输出信息的第一列表示任务编号，第二列表示任务所对应的进程号，第三列表示任务的运行状态，第四列表示启动任务的命令。\")])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-b74062d0\",\"hasScoped\":false}!./~/vue-loader/lib/selector.js?type=template&index=0!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/jobs.md\n// module id = 1607\n// module chunks = 322","module.exports = require(\"!!vue-loader!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./jobs.md\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./command/jobs.md\n// module id = 230\n// module chunks = 322","var Component = require(\"!../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  null,\n  /* template */\n  require(\"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-b74062d0\\\",\\\"hasScoped\\\":false}!../node_modules/vue-loader/lib/selector?type=template&index=0!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./jobs.md\"),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/jobs.md\n// module id = 818\n// module chunks = 322"],"sourceRoot":""}