webpackJsonp([477],{1527:function(t,v){t.exports={render:function(){var t=this,v=t.$createElement;t._self._c;return t._m(0)},staticRenderFns:[function(){var t=this,v=t.$createElement,e=t._self._c||v;return e("section",[e("p",[e("strong",[t._v("chroot命令")]),t._v("用来在指定的根目录下运行指令。chroot，即 change root directory （更改 root 目录）。在 linux 系统中，系统默认的目录结构都是以"),e("code",{pre:!0},[t._v("/")]),t._v("，即是以根 (root) 开始的。而在使用 chroot 之后，系统的目录结构将以指定的位置作为"),e("code",{pre:!0},[t._v("/")]),t._v("位置。")]),t._v(" "),e("p",[t._v("在经过 chroot 命令之后，系统读取到的目录和文件将不在是旧系统根下的而是新根下（即被指定的新的位置）的目录结构和文件，因此它带来的好处大致有以下3个：")]),t._v(" "),e("p",[e("strong",[t._v("增加了系统的安全性，限制了用户的权力：")])]),t._v(" "),e("p",[t._v("在经过 chroot 之后，在新根下将访问不到旧系统的根目录结构和文件，这样就增强了系统的安全性。这个一般是在登录 ("),e("a",{attrs:{href:"#/login",title:"login命令"}},[t._v("login")]),t._v(") 前使用 chroot，以此达到用户不能访问一些特定的文件。")]),t._v(" "),e("p",[e("strong",[t._v("建立一个与原系统隔离的系统目录结构，方便用户的开发：")])]),t._v(" "),e("p",[t._v("使用 chroot 后，系统读取的是新根下的目录和文件，这是一个与原系统根下文件不相关的目录结构。在这个新的环境中，可以用来测试软件的静态编译以及一些与系统不相关的独立开发。")]),t._v(" "),e("p",[e("strong",[t._v("切换系统的根目录位置，引导 Linux 系统启动以及急救系统等：")])]),t._v(" "),e("p",[t._v("chroot 的作用就是切换系统的根位置，而这个作用最为明显的是在系统初始引导磁盘的处理过程中使用，从初始 RAM 磁盘 (initrd) 切换系统的根位置并执行真正的 "),e("a",{attrs:{href:"#/init",title:"init命令"}},[t._v("init")]),t._v("。另外，当系统出现一些问题时，我们也可以使用 chroot 来切换到一个临时的系统。")]),t._v(" "),e("h3",[t._v("语法")]),t._v(" "),e("pre",{pre:!0},[e("code",{attrs:{"v-pre":""}},[t._v("chroot(选项)(参数)\n")])]),t._v(" "),e("h3",[t._v("选项")]),t._v(" "),e("pre",{pre:!0},[e("code",{attrs:{"v-pre":""}},[t._v('--[help](#/help "help命令")：在线帮助；\n--version：显示版本信息。\n')])]),t._v(" "),e("h3",[t._v("参数")]),t._v(" "),e("ul",[e("li",[t._v("目录：指定新的根目录；")]),t._v(" "),e("li",[t._v("指令：指定要执行的指令。")])]),t._v(" "),e("h3",[t._v("实例")]),t._v(" "),e("p",[e("strong",[t._v("将target作为根目录（运行其中的"),e("code",{pre:!0},[t._v("/bin/sh")]),t._v("）:")])]),t._v(" "),e("pre",{pre:!0},[e("code",{attrs:{"v-pre":""}},[t._v("chroot target /bin/sh\n")])]),t._v(" "),e("p",[t._v("这里,target是busybox安装好的路径，类似一个文件系统包含了许多工具。这样，将会进入一个shell界面，这个shell以target为根。运行"),e("a",{attrs:{href:"#/exit",title:"exit命令"}},[t._v("exit")]),t._v("退出该shell又返回原来的本机环境了，也可以使用Ctrl+D。")]),t._v(" "),e("p",[t._v("注意：")]),t._v(" "),e("ul",[e("li",[t._v("根用户才行")]),t._v(" "),e("li",[t._v("如果直接chroot target默认寻找target的/bin/bash.这会以target作为根目录")])]),t._v(" "),e("p",[t._v("将target作为根目录(运行其中的"),e("code",{pre:!0},[t._v('/bin/[ls](#/ls "ls命令")')]),t._v("):")]),t._v(" "),e("pre",{pre:!0},[e("code",{attrs:{"v-pre":""}},[t._v("chroot target /bin/ls\n")])]),t._v(" "),e("p",[t._v("这里，target是busybox安装好的路径，类似一个文件系统包含了许多工具。这样运行的是target中的ls（不是本机的"),e("code",{pre:!0},[t._v("/bin/ls")]),t._v("），然后返回立即本机的目录环境。")]),t._v(" "),e("p",[t._v("注意，自己在本地编译一个程序生成a.out之后，拷进"),e("code",{pre:!0},[t._v("target/bin/")]),t._v("中这样运行却不行,因为它包含了动态连接的库，需要用"),e("a",{attrs:{href:"#/ldd",title:"ldd命令"}},[t._v("ldd")]),t._v("查看a.out需要那些动态库，将这些库拷贝到新根的对应路径下才能执行。")]),t._v(" "),e("p",[e("strong",[t._v("用chroot运行自己编译的一个程序：")])]),t._v(" "),e("p",[t._v("准备chroot的根目录：")]),t._v(" "),e("pre",{pre:!0},[e("code",{attrs:{"v-pre":""}},[t._v('[mkdir](#/mkdir "mkdir命令") newRoot\n')])]),t._v(" "),e("p",[t._v("编译自己的程序：")]),t._v(" "),e("pre",{pre:!0},[e("code",{attrs:{"v-pre":""}},[t._v('[gcc](#/gcc "gcc命令") main.c\n')])]),t._v(" "),e("p",[t._v("这里main.c生成a.out，功能是输出hello。")]),t._v(" "),e("p",[t._v("查看程序需要的库：")]),t._v(" "),e("pre",{pre:!0},[e("code",{attrs:{"v-pre":""}},[t._v("ldd a.out\n")])]),t._v(" "),e("p",[t._v("输入之后，输出如下：")]),t._v(" "),e("pre",{pre:!0},[e("code",{attrs:{"v-pre":""}},[t._v('linux-gate.so.1 = &gt;  (0xb8034000)\nlibc.so.6 = &gt; /lib/tls/i686/cmov/libc.so.6 (0xb7eab000)\n/lib/[ld](#/ld "ld命令")-linux.so.2 (0xb801a000)\n')])]),t._v(" "),e("p",[t._v("将程序需要的库和程序拷贝到新根目录下：")]),t._v(" "),e("pre",{pre:!0},[e("code",{attrs:{"v-pre":""}},[t._v('[cp](#/cp "cp命令") a.out newRoot\nmkdir newRoot/lib\ncp /lib/tls/i686/cmov/libc.so.6 newRoot/lib\ncp /lib/ld-linux.so.2 newRoot/lib\n')])]),t._v(" "),e("p",[t._v("这里newRoot内容将如下：")]),t._v(" "),e("pre",{pre:!0},[e("code",{attrs:{"v-pre":""}},[t._v("a.out lib/\n")])]),t._v(" "),e("p",[t._v("使用chroot运行自己的程序：")]),t._v(" "),e("pre",{pre:!0},[e("code",{attrs:{"v-pre":""}},[t._v('[su](#/su "su命令")\nchroot newRoot /a.out\n')])]),t._v(" "),e("p",[t._v("这样就能够正确运行a.out了，因为a.out使用到了其他的动态连接库，所以需要将库拷贝到newRoot中，如果没有其他库那么直接拷贝a.out就能运行。例如静态编译后的busybox，其安装目录中的"),e("code",{pre:!0},[t._v("/bin/busybox")]),t._v("就没有依赖其他库。")])])}]}},662:function(t,v,e){var r=e(5)(null,e(1527),null,null,null);t.exports=r.exports},73:function(t,v,e){t.exports=e(662)}});
//# sourceMappingURL=477.7bb02d376b26b4c23abf.js.map