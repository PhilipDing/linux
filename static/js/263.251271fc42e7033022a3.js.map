{"version":3,"sources":["webpack:///static/js/263.251271fc42e7033022a3.js","webpack:///./command/md5sum.md?142a","webpack:///./command/md5sum.md","webpack:///./command/md5sum.md?d4ab"],"names":["webpackJsonp","1156","module","exports","render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","_v","pre","attrs","v-pre","290","__webpack_require__","878","Component"],"mappings":"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","file":"static/js/263.251271fc42e7033022a3.js","sourcesContent":["webpackJsonp([263],{\n\n/***/ 1156:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"md5sum命令\")]), _vm._v(\"采用MD5报文摘要算法（128位）计算和检查文件的校验和。一般来说，安装了Linux后，就会有md5sum这个工具，直接在命令行终端直接运行。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"MD5算法常常被用来验证网络文件传输的完整性，防止文件被人篡改。MD5 全称是报文摘要算法（Message-Digest Algorithm 5），此算法对任意长度的信息逐位进行计算，产生一个二进制长度为128位（十六进制长度就是32位）的“指纹”（或称“报文摘要”），不同的文件产生相同的报文摘要的可能性是非常非常之小的。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"md5sum(选项)(参数)\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-b：二进制模式读取文件；\\n-t或--text：把输入的文件作为文本文件看待；\\n-c：从指定文件中读取MD5校验和，并进行校验；\\n--status：验证成功时不输出任何信息；\\n-[w](#/w \\\"w命令\\\")：当校验不正确时给出警告信息。\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"参数\")]), _vm._v(\" \"), _c('p', [_vm._v(\"文件：指定保存着文件名和校验和的文本文件。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"生成一个文件insert.sql的md5值：\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost ~]# md5sum insert.sql\\nbcda6cb5c704664f989703ac5a88f112  insert.sql\\n\")])]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"检查文件testfile是否被修改过：\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"首先生成md5文件：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"md5sum testfile > testfile.md5\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"检查：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"md5sum testfile -c testfile.md5\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"如果文件没有变化，输出应该如下：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"forsort: OK\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"此时，md5sum命令返回0。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"如果文件发生了变化，输出应该如下：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"forsort: FAILED\\nmd5sum: WARNING: 1 of 1 computed checksum did NOT match\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"此时，md5sum命令返回非0。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"这里，检查用的文件名随意。如果不想有任何输出，则\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"md5sum testfile --status -c testfile.md5\")]), _vm._v(\"，这时候通过返回值来检测结果。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"检测的时候如果检测文件非法则输出信息的选项:\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"md5sum -w -c testfile.md5\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"输出之后，文件异常输出类似如下：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"md5sum: testfile.md5: 1: improperly formatted MD5 checksum line\\nmd5sum: testfile.md5: no properly formatted MD5 checksum lines found\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"这里，testfile.md5只有一行信息，但是我认为地给它多加了一个字符，导致非法。如果md5文件正常那么\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"-w\")]), _vm._v(\"有没有都一样。\")])])\n}]}\n\n/***/ }),\n\n/***/ 290:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(878);\n\n/***/ }),\n\n/***/ 878:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(5)(\n  /* script */\n  null,\n  /* template */\n  __webpack_require__(1156),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/263.251271fc42e7033022a3.js","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"md5sum命令\")]), _vm._v(\"采用MD5报文摘要算法（128位）计算和检查文件的校验和。一般来说，安装了Linux后，就会有md5sum这个工具，直接在命令行终端直接运行。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"MD5算法常常被用来验证网络文件传输的完整性，防止文件被人篡改。MD5 全称是报文摘要算法（Message-Digest Algorithm 5），此算法对任意长度的信息逐位进行计算，产生一个二进制长度为128位（十六进制长度就是32位）的“指纹”（或称“报文摘要”），不同的文件产生相同的报文摘要的可能性是非常非常之小的。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"md5sum(选项)(参数)\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-b：二进制模式读取文件；\\n-t或--text：把输入的文件作为文本文件看待；\\n-c：从指定文件中读取MD5校验和，并进行校验；\\n--status：验证成功时不输出任何信息；\\n-[w](#/w \\\"w命令\\\")：当校验不正确时给出警告信息。\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"参数\")]), _vm._v(\" \"), _c('p', [_vm._v(\"文件：指定保存着文件名和校验和的文本文件。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"生成一个文件insert.sql的md5值：\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost ~]# md5sum insert.sql\\nbcda6cb5c704664f989703ac5a88f112  insert.sql\\n\")])]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"检查文件testfile是否被修改过：\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"首先生成md5文件：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"md5sum testfile > testfile.md5\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"检查：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"md5sum testfile -c testfile.md5\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"如果文件没有变化，输出应该如下：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"forsort: OK\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"此时，md5sum命令返回0。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"如果文件发生了变化，输出应该如下：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"forsort: FAILED\\nmd5sum: WARNING: 1 of 1 computed checksum did NOT match\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"此时，md5sum命令返回非0。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"这里，检查用的文件名随意。如果不想有任何输出，则\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"md5sum testfile --status -c testfile.md5\")]), _vm._v(\"，这时候通过返回值来检测结果。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"检测的时候如果检测文件非法则输出信息的选项:\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"md5sum -w -c testfile.md5\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"输出之后，文件异常输出类似如下：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"md5sum: testfile.md5: 1: improperly formatted MD5 checksum line\\nmd5sum: testfile.md5: no properly formatted MD5 checksum lines found\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"这里，testfile.md5只有一行信息，但是我认为地给它多加了一个字符，导致非法。如果md5文件正常那么\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"-w\")]), _vm._v(\"有没有都一样。\")])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-09364541\",\"hasScoped\":false}!./~/vue-loader/lib/selector.js?type=template&index=0!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/md5sum.md\n// module id = 1156\n// module chunks = 263","module.exports = require(\"!!vue-loader!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./md5sum.md\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./command/md5sum.md\n// module id = 290\n// module chunks = 263","var Component = require(\"!../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  null,\n  /* template */\n  require(\"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-09364541\\\",\\\"hasScoped\\\":false}!../node_modules/vue-loader/lib/selector?type=template&index=0!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./md5sum.md\"),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/md5sum.md\n// module id = 878\n// module chunks = 263"],"sourceRoot":""}