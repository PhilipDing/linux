{"version":3,"sources":["webpack:///static/js/82.8cae21eaa4bad57f23b0.js","webpack:///./command/top.md?c1e6","webpack:///./command/top.md?41f8","webpack:///./command/top.md"],"names":["webpackJsonp","1062","module","exports","__webpack_require__","Component","1298","render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","_v","pre","attrs","v-pre","474"],"mappings":"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","file":"static/js/82.8cae21eaa4bad57f23b0.js","sourcesContent":["webpackJsonp([82],{\n\n/***/ 1062:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(5)(\n  /* script */\n  null,\n  /* template */\n  __webpack_require__(1298),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 1298:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"top命令\")]), _vm._v(\"可以实时动态地查看系统的整体运行情况，是一个综合了多方信息监测系统性能和运行信息的实用工具。通过top命令所提供的互动式界面，用热键可以管理。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"top(选项)\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-b：以批处理模式操作；\\n-c：显示完整的治命令；\\n-d：屏幕刷新间隔时间；\\n-I：忽略失效过程；\\n-s：保密模式；\\n-S：累积模式；\\n-i<时间>：设置间隔时间；\\n-u<用户名>：指定用户名；\\n-p<进程号>：指定进程；\\n-n<次数>：循环显示的次数。\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"top交互命令\")]), _vm._v(\" \"), _c('p', [_vm._v(\"在top命令执行过程中可以使用的一些交互命令。这些命令都是单字母的，如果在命令行中使用了-s选项， 其中一些命令可能会被屏蔽。\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"h：显示帮助画面，给出一些简短的命令总结说明；\\nk：终止一个进程；\\ni：忽略闲置和僵死进程，这是一个开关式命令；\\nq：退出程序；\\nr：重新安排一个进程的优先级别；\\nS：切换到累计模式；\\ns：改变两次刷新之间的延迟时间（单位为s），如果有小数，就换算成ms。输入0值则系统将不断刷新，默认值是5s；\\nf或者F：从当前显示中添加或者删除项目；\\no或者O：改变显示项目的顺序；\\nl：切换显示平均负载和启动时间信息；\\nm：切换显示内存信息；\\nt：切换显示进程和CPU状态信息；\\nc：切换显示命令名称和完整命令行；\\nM：根据驻留内存大小进行排序；\\nP：根据CPU使用百分比大小进行排序；\\nT：根据时间/累计时间进行排序；\\n[w](#/w \\\"w命令\\\")：将当前设置写入~/.toprc文件中。\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"top - 09:44:56 up 16 days, 21:23,  1 user,  load average: 9.59, 4.75, 1.92\\nTasks: 145 total,   2 running, 143 sleeping,   0 stopped,   0 zombie\\nCpu(s): 99.8%us,  0.1%sy,  0.0%ni,  0.2%[id](#/id \\\"id命令\\\"),  0.0%wa,  0.0%hi,  0.0%si,  0.0%st\\nMem:   4147888k total,  2493092k used,  1654796k [free](#/free \\\"free命令\\\"),   158188k buffers\\nSwap:  5144568k total,       56k used,  5144512k free,  2013180k cached\\n\")])]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"解释：\")])]), _vm._v(\" \"), _c('ul', [_c('li', [_vm._v(\"top - 09:44:56[当前系统时间],\")]), _vm._v(\" \"), _c('li', [_vm._v(\"16 days[系统已经运行了16天],\")]), _vm._v(\" \"), _c('li', [_vm._v(\"1 user[个用户当前登录],\")]), _vm._v(\" \"), _c('li', [_vm._v(\"load average: 9.59, 4.75, 1.92[系统负载，即任务队列的平均长度]\")]), _vm._v(\" \"), _c('li', [_vm._v(\"Tasks: 145 total[总进程数],\")]), _vm._v(\" \"), _c('li', [_vm._v(\"2 running[正在运行的进程数],\")]), _vm._v(\" \"), _c('li', [_vm._v(\"143 sleeping[睡眠的进程数],\")]), _vm._v(\" \"), _c('li', [_vm._v(\"0 stopped[停止的进程数],\")]), _vm._v(\" \"), _c('li', [_vm._v(\"0 zombie[冻结进程数],\")]), _vm._v(\" \"), _c('li', [_vm._v(\"Cpu(s): 99.8%us[用户空间占用CPU百分比],\")]), _vm._v(\" \"), _c('li', [_vm._v(\"0.1%sy[内核空间占用CPU百分比],\")]), _vm._v(\" \"), _c('li', [_vm._v(\"0.0%ni[用户进程空间内改变过优先级的进程占用CPU百分比],\")]), _vm._v(\" \"), _c('li', [_vm._v(\"0.2%id[空闲CPU百分比], 0.0%wa[等待输入输出的CPU时间百分比],\")]), _vm._v(\" \"), _c('li', [_vm._v(\"0.0%hi[],\")]), _vm._v(\" \"), _c('li', [_vm._v(\"0.0%st[],\")]), _vm._v(\" \"), _c('li', [_vm._v(\"Mem: 4147888k total[物理内存总量],\")]), _vm._v(\" \"), _c('li', [_vm._v(\"2493092k used[使用的物理内存总量],\")]), _vm._v(\" \"), _c('li', [_vm._v(\"1654796k free[空闲内存总量],\")]), _vm._v(\" \"), _c('li', [_vm._v(\"158188k buffers[用作内核缓存的内存量]\")]), _vm._v(\" \"), _c('li', [_vm._v(\"Swap:  5144568k total[交换区总量],\")]), _vm._v(\" \"), _c('li', [_vm._v(\"56k used[使用的交换区总量],\")]), _vm._v(\" \"), _c('li', [_vm._v(\"5144512k free[空闲交换区总量],\")]), _vm._v(\" \"), _c('li', [_vm._v(\"2013180k cached[缓冲的交换区总量],\")])])])\n}]}\n\n/***/ }),\n\n/***/ 474:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(1062);\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/82.8cae21eaa4bad57f23b0.js","var Component = require(\"!../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  null,\n  /* template */\n  require(\"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-2f297347\\\",\\\"hasScoped\\\":false}!../node_modules/vue-loader/lib/selector?type=template&index=0!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./top.md\"),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/top.md\n// module id = 1062\n// module chunks = 82","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"top命令\")]), _vm._v(\"可以实时动态地查看系统的整体运行情况，是一个综合了多方信息监测系统性能和运行信息的实用工具。通过top命令所提供的互动式界面，用热键可以管理。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"top(选项)\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-b：以批处理模式操作；\\n-c：显示完整的治命令；\\n-d：屏幕刷新间隔时间；\\n-I：忽略失效过程；\\n-s：保密模式；\\n-S：累积模式；\\n-i<时间>：设置间隔时间；\\n-u<用户名>：指定用户名；\\n-p<进程号>：指定进程；\\n-n<次数>：循环显示的次数。\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"top交互命令\")]), _vm._v(\" \"), _c('p', [_vm._v(\"在top命令执行过程中可以使用的一些交互命令。这些命令都是单字母的，如果在命令行中使用了-s选项， 其中一些命令可能会被屏蔽。\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"h：显示帮助画面，给出一些简短的命令总结说明；\\nk：终止一个进程；\\ni：忽略闲置和僵死进程，这是一个开关式命令；\\nq：退出程序；\\nr：重新安排一个进程的优先级别；\\nS：切换到累计模式；\\ns：改变两次刷新之间的延迟时间（单位为s），如果有小数，就换算成ms。输入0值则系统将不断刷新，默认值是5s；\\nf或者F：从当前显示中添加或者删除项目；\\no或者O：改变显示项目的顺序；\\nl：切换显示平均负载和启动时间信息；\\nm：切换显示内存信息；\\nt：切换显示进程和CPU状态信息；\\nc：切换显示命令名称和完整命令行；\\nM：根据驻留内存大小进行排序；\\nP：根据CPU使用百分比大小进行排序；\\nT：根据时间/累计时间进行排序；\\n[w](#/w \\\"w命令\\\")：将当前设置写入~/.toprc文件中。\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"top - 09:44:56 up 16 days, 21:23,  1 user,  load average: 9.59, 4.75, 1.92\\nTasks: 145 total,   2 running, 143 sleeping,   0 stopped,   0 zombie\\nCpu(s): 99.8%us,  0.1%sy,  0.0%ni,  0.2%[id](#/id \\\"id命令\\\"),  0.0%wa,  0.0%hi,  0.0%si,  0.0%st\\nMem:   4147888k total,  2493092k used,  1654796k [free](#/free \\\"free命令\\\"),   158188k buffers\\nSwap:  5144568k total,       56k used,  5144512k free,  2013180k cached\\n\")])]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"解释：\")])]), _vm._v(\" \"), _c('ul', [_c('li', [_vm._v(\"top - 09:44:56[当前系统时间],\")]), _vm._v(\" \"), _c('li', [_vm._v(\"16 days[系统已经运行了16天],\")]), _vm._v(\" \"), _c('li', [_vm._v(\"1 user[个用户当前登录],\")]), _vm._v(\" \"), _c('li', [_vm._v(\"load average: 9.59, 4.75, 1.92[系统负载，即任务队列的平均长度]\")]), _vm._v(\" \"), _c('li', [_vm._v(\"Tasks: 145 total[总进程数],\")]), _vm._v(\" \"), _c('li', [_vm._v(\"2 running[正在运行的进程数],\")]), _vm._v(\" \"), _c('li', [_vm._v(\"143 sleeping[睡眠的进程数],\")]), _vm._v(\" \"), _c('li', [_vm._v(\"0 stopped[停止的进程数],\")]), _vm._v(\" \"), _c('li', [_vm._v(\"0 zombie[冻结进程数],\")]), _vm._v(\" \"), _c('li', [_vm._v(\"Cpu(s): 99.8%us[用户空间占用CPU百分比],\")]), _vm._v(\" \"), _c('li', [_vm._v(\"0.1%sy[内核空间占用CPU百分比],\")]), _vm._v(\" \"), _c('li', [_vm._v(\"0.0%ni[用户进程空间内改变过优先级的进程占用CPU百分比],\")]), _vm._v(\" \"), _c('li', [_vm._v(\"0.2%id[空闲CPU百分比], 0.0%wa[等待输入输出的CPU时间百分比],\")]), _vm._v(\" \"), _c('li', [_vm._v(\"0.0%hi[],\")]), _vm._v(\" \"), _c('li', [_vm._v(\"0.0%st[],\")]), _vm._v(\" \"), _c('li', [_vm._v(\"Mem: 4147888k total[物理内存总量],\")]), _vm._v(\" \"), _c('li', [_vm._v(\"2493092k used[使用的物理内存总量],\")]), _vm._v(\" \"), _c('li', [_vm._v(\"1654796k free[空闲内存总量],\")]), _vm._v(\" \"), _c('li', [_vm._v(\"158188k buffers[用作内核缓存的内存量]\")]), _vm._v(\" \"), _c('li', [_vm._v(\"Swap:  5144568k total[交换区总量],\")]), _vm._v(\" \"), _c('li', [_vm._v(\"56k used[使用的交换区总量],\")]), _vm._v(\" \"), _c('li', [_vm._v(\"5144512k free[空闲交换区总量],\")]), _vm._v(\" \"), _c('li', [_vm._v(\"2013180k cached[缓冲的交换区总量],\")])])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-2f297347\",\"hasScoped\":false}!./~/vue-loader/lib/selector.js?type=template&index=0!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/top.md\n// module id = 1298\n// module chunks = 82","module.exports = require(\"!!vue-loader!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./top.md\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./command/top.md\n// module id = 474\n// module chunks = 82"],"sourceRoot":""}