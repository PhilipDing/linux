webpackJsonp([124],{1020:function(t,e,n){var r=n(5)(null,n(1669),null,null,null);t.exports=r.exports},1669:function(t,e){t.exports={render:function(){var t=this,e=t.$createElement;t._self._c;return t._m(0)},staticRenderFns:[function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("section",[n("p",[n("strong",[t._v("sort命令")]),t._v("是在Linux里非常有用，它将文件进行排序，并将排序结果标准输出。sort命令既可以从特定的文件，也可以从stdin中获取输入。")]),t._v(" "),n("h3",[t._v("语法")]),t._v(" "),n("pre",{pre:!0},[n("code",{attrs:{"v-pre":""}},[t._v("sort(选项)(参数)\n")])]),t._v(" "),n("h3",[t._v("选项")]),t._v(" "),n("pre",{pre:!0},[n("code",{attrs:{"v-pre":""}},[t._v("-b：忽略每行前面开始出的空格字符；\n-c：检查文件是否已经按照顺序排序；\n-d：排序时，处理英文字母、数字及空格字符外，忽略其他的字符；\n-f：排序时，将小写字母视为大写字母；\n-i：排序时，除了040至176之间的ASCII字符外，忽略其他的字符；\n-m：将几个排序号的文件进行合并；\n-M：将前面3个字母依照月份的缩写进行排序；\n-n：依照数值的大小排序；\n-o<输出文件>：将排序后的结果存入制定的文件；\n-r：以相反的顺序来排序；\n-t<分隔字符>：指定排序时所用的栏位分隔字符；\n+<起始栏位>-<结束栏位>：以指定的栏位来排序，范围由起始栏位到结束栏位的前一栏位。\n")])]),t._v(" "),n("h3",[t._v("参数")]),t._v(" "),n("p",[t._v("文件：指定待排序的文件列表。")]),t._v(" "),n("h3",[t._v("实例")]),t._v(" "),n("p",[t._v("sort将文件/文本的每一行作为一个单位，相互比较，比较原则是从首字符向后，依次按"),n("a",{attrs:{href:"http://zh.wikipedia.org/zh/ASCII"}},[t._v("ASCII")]),t._v("码值进行比较，最后将他们按升序输出。")]),t._v(" "),n("pre",{pre:!0},[n("code",{attrs:{"v-pre":""}},[t._v('[root@[mail](#/mail "mail命令") text]# [cat](#/cat "cat命令") sort.txt\naaa:10:1.1\nccc:30:3.3\nddd:40:4.4\nbbb:20:2.2\neee:50:5.5\neee:50:5.5\n\n[root@mail text]# sort sort.txt\naaa:10:1.1\nbbb:20:2.2\nccc:30:3.3\nddd:40:4.4\neee:50:5.5\neee:50:5.5\n')])]),t._v(" "),n("p",[t._v("忽略相同行使用-u选项或者"),n("a",{attrs:{href:"#/uniq",title:"uniq命令"}},[t._v("uniq")]),t._v("：")]),t._v(" "),n("pre",{pre:!0},[n("code",{attrs:{"v-pre":""}},[t._v("[root@mail text]# cat sort.txt\naaa:10:1.1\nccc:30:3.3\nddd:40:4.4\nbbb:20:2.2\neee:50:5.5\neee:50:5.5\n\n[root@mail text]# sort -u sort.txt\naaa:10:1.1\nbbb:20:2.2\nccc:30:3.3\nddd:40:4.4\neee:50:5.5\n\n或者\n\n[root@mail text]# uniq sort.txt\naaa:10:1.1\nccc:30:3.3\nddd:40:4.4\nbbb:20:2.2\neee:50:5.5\n\n")])]),t._v(" "),n("p",[t._v("sort的-n、-r、-k、-t选项的使用：")]),t._v(" "),n("pre",{pre:!0},[n("code",{attrs:{"v-pre":""}},[t._v("[root@mail text]# cat sort.txt\nAAA:BB:CC\naaa:30:1.6\nccc:50:3.3\nddd:20:4.2\nbbb:10:2.5\neee:40:5.4\neee:60:5.1\n\n#将BB列按照数字从小到大顺序排列：\n[root@mail text]# sort -nk 2 -t: sort.txt\nAAA:BB:CC\nbbb:10:2.5\nddd:20:4.2\naaa:30:1.6\neee:40:5.4\nccc:50:3.3\neee:60:5.1\n\n#将CC列数字从大到小顺序排列：\n[root@mail text]# sort -nrk 3 -t: sort.txt\neee:40:5.4\neee:60:5.1\nddd:20:4.2\nccc:50:3.3\nbbb:10:2.5\naaa:30:1.6\nAAA:BB:CC\n\n# -n是按照数字大小排序，-r是以相反顺序，-k是指定需要爱排序的栏位，-t指定栏位分隔符为冒号\n")])]),t._v(" "),n("p",[n("strong",[t._v("-k选项的具体语法格式：")])]),t._v(" "),n("p",[t._v("-k选项的语法格式：")]),t._v(" "),n("pre",{pre:!0},[n("code",{attrs:{"v-pre":""}},[t._v("FStart.CStart Modifie,FEnd.CEnd Modifier\n-------Start--------,-------End--------\n FStart.CStart 选项  ,  FEnd.CEnd 选项\n\n")])]),t._v(" "),n("p",[t._v("这个语法格式可以被其中的逗号"),n("code",{pre:!0},[t._v(",")]),t._v("分为两大部分，"),n("strong",[t._v("Start")]),t._v("部分和"),n("strong",[t._v("End")]),t._v("部分。Start部分也由三部分组成，其中的Modifier部分就是我们之前说过的类似n和r的选项部分。我们重点说说"),n("code",{pre:!0},[t._v("Start")]),t._v("部分的"),n("code",{pre:!0},[t._v("FStart")]),t._v("和"),n("code",{pre:!0},[t._v("C.Start")]),t._v("。"),n("code",{pre:!0},[t._v("C.Start")]),t._v("也是可以省略的，省略的话就表示从本域的开头部分开始。"),n("code",{pre:!0},[t._v("FStart.CStart")]),t._v("，其中"),n("code",{pre:!0},[t._v("FStart")]),t._v("就是表示使用的域，而"),n("code",{pre:!0},[t._v("CStart")]),t._v("则表示在"),n("code",{pre:!0},[t._v("FStart")]),t._v("域中从第几个字符开始算“排序首字符”。同理，在End部分中，你可以设定"),n("code",{pre:!0},[t._v("FEnd.CEnd")]),t._v("，如果你省略"),n("code",{pre:!0},[t._v(".CEnd")]),t._v("，则表示结尾到“域尾”，即本域的最后一个字符。或者，如果你将CEnd设定为0(零)，也是表示结尾到“域尾”。")]),t._v(" "),n("p",[t._v("从公司英文名称的第二个字母开始进行排序：")]),t._v(" "),n("pre",{pre:!0},[n("code",{attrs:{"v-pre":""}},[t._v("$ sort -t ' ' -k 1.2 facebook.txt\nbaidu 100 5000\nsohu 100 4500\ngoogle 110 5000\nguge 50 3000\n\n")])]),t._v(" "),n("p",[t._v("使用了"),n("code",{pre:!0},[t._v("-k 1.2")]),t._v("，表示对第一个域的第二个字符开始到本域的最后一个字符为止的字符串进行排序。你会发现baidu因为第二个字母是a而名列榜首。sohu和 google第二个字符都是o，但sohu的h在google的o前面，所以两者分别排在第二和第三。guge只能屈居第四了。")]),t._v(" "),n("p",[t._v("只针对公司英文名称的第二个字母进行排序，如果相同的按照员工工资进行降序排序：")]),t._v(" "),n("pre",{pre:!0},[n("code",{attrs:{"v-pre":""}},[t._v("$ sort -t ' ' -k 1.2,1.2 -nrk 3,3 facebook.txt\nbaidu 100 5000\ngoogle 110 5000\nsohu 100 4500\nguge 50 3000\n\n")])]),t._v(" "),n("p",[t._v("由于只对第二个字母进行排序，所以我们使用了"),n("code",{pre:!0},[t._v("-k 1.2,1.2")]),t._v("的表示方式，表示我们“只”对第二个字母进行排序。（如果你问“我使用"),n("code",{pre:!0},[t._v("-k 1.2")]),t._v("怎么不行？”，当然不行，因为你省略了End部分，这就意味着你将对从第二个字母起到本域最后一个字符为止的字符串进行排序）。对于员工工资进行排 序，我们也使用了"),n("code",{pre:!0},[t._v("-k 3,3")]),t._v("，这是最准确的表述，表示我们“只”对本域进行排序，因为如果你省略了后面的3，就变成了我们“对第3个域开始到最后一个域位置的内容进行排序” 了。")])])}]}},432:function(t,e,n){t.exports=n(1020)}});
//# sourceMappingURL=124.4d73d18a81f5a67f4d99.js.map