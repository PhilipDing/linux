webpackJsonp([118],{1025:function(s,t,e){var n=e(5)(null,e(1390),null,null,null);s.exports=n.exports},1390:function(s,t){s.exports={render:function(){var s=this,t=s.$createElement;s._self._c;return s._m(0)},staticRenderFns:[function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("section",[e("p",[e("strong",[s._v("ss命令")]),s._v("用来显示处于活动状态的套接字信息。ss命令可以用来获取socket统计信息，它可以显示和"),e("a",{attrs:{href:"#/netstat",title:"netstat命令"}},[s._v("netstat")]),s._v("类似的内容。但ss的优势在于它能够显示更多更详细的有关TCP和连接状态的信息，而且比netstat更快速更高效。")]),s._v(" "),e("p",[s._v("当服务器的socket连接数量变得非常大时，无论是使用netstat命令还是直接"),e("code",{pre:!0},[s._v('[cat](#/cat "cat命令") /proc/net/tcp')]),s._v("，执行速度都会很慢。可能你不会有切身的感受，但请相信我，当服务器维持的连接达到上万个的时候，使用netstat等于浪费 生命，而用ss才是节省时间。")]),s._v(" "),e("p",[s._v("天下武功唯快不破。ss快的秘诀在于，它利用到了TCP协议栈中tcp_diag。tcp_diag是一个用于分析统计的模块，可以获得Linux 内核中第一手的信息，这就确保了ss的快捷高效。当然，如果你的系统中没有tcp_diag，ss也可以正常运行，只是效率会变得稍慢。")]),s._v(" "),e("h3",[s._v("语法")]),s._v(" "),e("pre",{pre:!0},[e("code",{attrs:{"v-pre":""}},[s._v("ss(选项)\n")])]),s._v(" "),e("h3",[s._v("选项")]),s._v(" "),e("pre",{pre:!0},[e("code",{attrs:{"v-pre":""}},[s._v('-h：显示帮助信息；\n-V：显示指令版本信息；\n-n：不解析服务名称，以数字方式显示；\n-a：显示所有的套接字；\n-l：显示处于监听状态的套接字；\n-o：显示计时器信息；\n-m：显示套接字的内存使用情况；\n-p：显示使用套接字的进程信息；\n-i：显示内部的TCP信息；\n-4：只显示ipv4的套接字；\n-6：只显示ipv6的套接字；\n-t：只显示tcp套接字；\n-u：只显示udp套接字；\n-d：只显示DCCP套接字；\n-[w](#/w "w命令")：仅显示RAW套接字；\n-x：仅显示UNIX域套接字。\n')])]),s._v(" "),e("h3",[s._v("实例")]),s._v(" "),e("p",[e("strong",[s._v("显示ICP连接")])]),s._v(" "),e("pre",{pre:!0},[e("code",{attrs:{"v-pre":""}},[s._v('[root@localhost ~]# ss -t -a\nState       Recv-Q Send-Q                            Local Address:Port                                Peer Address:Port   \nLISTEN      0      0                                             *:3306                                           *:*       \nLISTEN      0      0                                             *:http                                           *:*       \nLISTEN      0      0                                             *:[ssh](#/ssh "ssh命令")                                            *:*       \nLISTEN      0      0                                     127.0.0.1:smtp                                           *:*       \nESTAB       0      0                                112.124.15.130:42071                              42.156.166.25:http    \nESTAB       0      0                                112.124.15.130:ssh                              121.229.196.235:33398 \n')])]),s._v(" "),e("p",[e("strong",[s._v("显示 Sockets 摘要")])]),s._v(" "),e("pre",{pre:!0},[e("code",{attrs:{"v-pre":""}},[s._v('[root@localhost ~]# ss -s\nTotal: 172 (kernel 189)\nTCP:   10 (estab 2, closed 4, orphaned 0, synrecv 0, timewait 0/0), ports 5\n\nTransport Total     [ip](#/ip "ip命令")        IPv6\n*         189       -         -        \nRAW       0         0         0        \nUDP       5         5         0        \nTCP       6         6         0        \nINET      11        11        0        \nFRAG      0         0         0   \n')])]),s._v(" "),e("p",[s._v("列出当前的established, closed, orphaned and waiting TCP sockets")]),s._v(" "),e("p",[e("strong",[s._v("列出所有打开的网络连接端口")])]),s._v(" "),e("pre",{pre:!0},[e("code",{attrs:{"v-pre":""}},[s._v("[root@localhost ~]# ss -l\nRecv-Q Send-Q                                 Local Address:Port                                     Peer Address:Port   \n0      0                                                  *:3306                                                *:*       \n0      0                                                  *:http                                                *:*       \n0      0                                                  *:ssh                                                 *:*       \n0      0                                          127.0.0.1:smtp                                                *:* \n")])]),s._v(" "),e("p",[e("strong",[s._v("查看进程使用的socket")])]),s._v(" "),e("pre",{pre:!0},[e("code",{attrs:{"v-pre":""}},[s._v('[root@localhost ~]# ss -pl\nRecv-Q Send-Q                                          Local Address:Port                                              Peer Address:Port   \n0      0                                                           *:3306                                                         *:*        [users](#/users "users命令"):(("mysqld",1718,10))\n0      0                                                           *:http                                                         *:*        users:(("nginx",13312,5),("nginx",13333,5))\n0      0                                                           *:ssh                                                          *:*        users:(("[sshd](#/sshd "sshd命令")",1379,3))\n0      0                                                   127.0.0.1:smtp                                                         *:*        us\n')])]),s._v(" "),e("p",[e("strong",[s._v("找出打开套接字/端口应用程序")])]),s._v(" "),e("pre",{pre:!0},[e("code",{attrs:{"v-pre":""}},[s._v('[root@localhost ~]# ss -pl | [grep](#/grep "grep命令") 3306\n0      0                            *:3306                          *:*        users:(("mysqld",1718,10))\n')])]),s._v(" "),e("p",[e("strong",[s._v("显示所有UDP Sockets")])]),s._v(" "),e("pre",{pre:!0},[e("code",{attrs:{"v-pre":""}},[s._v("[root@localhost ~]# ss -u -a\nState       Recv-Q Send-Q                                     Local Address:Port                                         Peer Address:Port   \nUNCONN      0      0                                                      *:syslog                                                  *:*       \nUNCONN      0      0                                         112.124.15.130:ntp                                                     *:*       \nUNCONN      0      0                                            10.160.7.81:ntp                                                     *:*       \nUNCONN      0      0                                              127.0.0.1:ntp                                                     *:*       \nUNCONN      0      0                                                      *:ntp                                                     *:*\n")])])])}]}},437:function(s,t,e){s.exports=e(1025)}});
//# sourceMappingURL=118.92df396b7a86c947b3de.js.map