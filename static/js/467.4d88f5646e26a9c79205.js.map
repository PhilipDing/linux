{"version":3,"sources":["webpack:///static/js/467.4d88f5646e26a9c79205.js","webpack:///./command/compress.md?50fd","webpack:///./command/compress.md?0414","webpack:///./command/compress.md"],"names":["webpackJsonp","1449","module","exports","render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","_v","attrs","href","title","pre","v-pre","671","__webpack_require__","Component","83"],"mappings":"AAAAA,cAAc,MAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAgBC,OAAA,WAAmB,GAAAC,GAAAC,KAAaC,EAAAF,EAAAG,cAA0BH,GAAAI,MAAAC,EAC1E,OAAAL,GAAAM,GAAA,IACCC,iBAAA,WAA+B,GAAAP,GAAAC,KAAaC,EAAAF,EAAAG,eAA0BE,EAAAL,EAAAI,MAAAC,IAAAH,CACvE,OAAAG,GAAA,WAAAA,EAAA,KAAAA,EAAA,UAAAL,EAAAQ,GAAA,gBAAAR,EAAAQ,GAAA,oFAAAH,EAAA,KACAI,OACAC,KAAA,eACAC,MAAA,kBAEGX,EAAAQ,GAAA,gBAAAR,EAAAQ,GAAA,sEAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHO,KAAA,IACGP,EAAA,QACHI,OACAI,QAAA,MAEGb,EAAAQ,GAAA,0BAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHO,KAAA,IACGP,EAAA,QACHI,OACAI,QAAA,MAEGb,EAAAQ,GAAA,uKAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,oBAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,KAAAH,EAAA,QACHO,KAAA,IACGZ,EAAAQ,GAAA,sCAAAR,EAAAQ,GAAA,MAAAH,EAAA,QACHO,KAAA,IACGZ,EAAAQ,GAAA,UAAAR,EAAAQ,GAAA,aAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHO,KAAA,IACGP,EAAA,QACHI,OACAI,QAAA,MAEGb,EAAAQ,GAAA,sMAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHO,KAAA,IACGP,EAAA,QACHI,OACAI,QAAA,MAEGb,EAAAQ,GAAA,+DAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,eAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHO,KAAA,IACGP,EAAA,QACHI,OACAI,QAAA,MAEGb,EAAAQ,GAAA,wDAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,+BAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHO,KAAA,IACGP,EAAA,QACHI,OACAI,QAAA,MAEGb,EAAAQ,GAAA,gHAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHO,KAAA,IACGP,EAAA,QACHI,OACAI,QAAA,MAEGb,EAAAQ,GAAA,yHAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,MAAAH,EAAA,QACHO,KAAA,IACGZ,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,mCAAAH,EAAA,KACHI,OACAC,KAAA,SACAC,MAAA,YAEGX,EAAAQ,GAAA,UAAAR,EAAAQ,GAAA,gDDUGM,IACA,SAAUjB,EAAQC,EAASiB,GExEjC,GAAAC,GAAAD,EAAA,GAEA,KAEAA,EAAA,MAEA,KAEA,KAEA,KAGAlB,GAAAC,QAAAkB,EAAAlB,SF+EMmB,GACA,SAAUpB,EAAQC,EAASiB,GG7FjClB,EAAAC,QAAAiB,EAAA","file":"static/js/467.4d88f5646e26a9c79205.js","sourcesContent":["webpackJsonp([467],{\n\n/***/ 1449:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"compress命令\")]), _vm._v(\"使用“Lempress-Ziv”编码压缩数据文件。compress是个历史悠久的压缩程序，文件经它压缩后，其名称后面会多出\\\".Z\\\"的扩展名。当要解压缩时，可执行\"), _c('a', {\n    attrs: {\n      \"href\": \"#/uncompress\",\n      \"title\": \"uncompress命令\"\n    }\n  }, [_vm._v(\"uncompress\")]), _vm._v(\"指令。事实上uncompress是指向compress的符号连接，因此不论是压缩或解压缩，都可通过compress指令单独完成。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"compress(选项)(参数)\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-f：不提示用户，强制覆盖掉目标文件；\\n-c：将结果送到标准输出，无文件被改变；\\n-r：递归的操作方式；\\n-b<压缩效率>：压缩效率是一个介于9~16的数值，预设值为\\\"16\\\"，指定愈大的数值，压缩效率就愈高；\\n-d：对文件进行解压缩而非压缩；\\n-v：显示指令执行过程；\\n-V：显示指令版本及程序预设值。\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"参数\")]), _vm._v(\" \"), _c('p', [_vm._v(\"文件：指定要压缩的文件列表。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('p', [_vm._v(\"将\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"/etc/[man](#/man \\\"man命令\\\").config\")]), _vm._v(\"复到\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"/tmp\")]), _vm._v(\" ，并加以压缩\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost ~]# [cd](#/cd \\\"cd命令\\\") /tmp\\n[root@localhost tmp]# [cp](#/cp \\\"cp命令\\\") /etc/man.config .\\n[root@localhost tmp]# compress man.config\\n[root@localhost tmp]# [ls](#/ls \\\"ls命令\\\") -l\\n\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-rw-r--r-- 1 root root 2605 Jul 27 11:43 man.config.Z\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"将刚刚的压缩档解开\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost tmp]# compress -d man.config.Z\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"将 man.config 压缩成另外一个文件来备份\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost tmp]# compress -c man.config > man.config.back.Z\\n[root@localhost tmp]# ll man.config*\\n\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-rw-r--r-- 1 root root 4506 Jul 27 11:43 man.config\\n-rw-r--r-- 1 root root 2605 Jul 27 11:46 man.config.back.Z\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"这个\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"-c\")]), _vm._v(\"的选项比较有趣！会将压缩过程的资料输出到屏幕上，而不是写入成为\"), _c('a', {\n    attrs: {\n      \"href\": \"#/file\",\n      \"title\": \"file命令\"\n    }\n  }, [_vm._v(\"file\")]), _vm._v(\".Z文件。所以，我们可以透过资料流重导向的方法将资料输出成为另一个档名。\")])])\n}]}\n\n/***/ }),\n\n/***/ 671:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(5)(\n  /* script */\n  null,\n  /* template */\n  __webpack_require__(1449),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 83:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(671);\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/467.4d88f5646e26a9c79205.js","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"compress命令\")]), _vm._v(\"使用“Lempress-Ziv”编码压缩数据文件。compress是个历史悠久的压缩程序，文件经它压缩后，其名称后面会多出\\\".Z\\\"的扩展名。当要解压缩时，可执行\"), _c('a', {\n    attrs: {\n      \"href\": \"#/uncompress\",\n      \"title\": \"uncompress命令\"\n    }\n  }, [_vm._v(\"uncompress\")]), _vm._v(\"指令。事实上uncompress是指向compress的符号连接，因此不论是压缩或解压缩，都可通过compress指令单独完成。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"compress(选项)(参数)\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-f：不提示用户，强制覆盖掉目标文件；\\n-c：将结果送到标准输出，无文件被改变；\\n-r：递归的操作方式；\\n-b<压缩效率>：压缩效率是一个介于9~16的数值，预设值为\\\"16\\\"，指定愈大的数值，压缩效率就愈高；\\n-d：对文件进行解压缩而非压缩；\\n-v：显示指令执行过程；\\n-V：显示指令版本及程序预设值。\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"参数\")]), _vm._v(\" \"), _c('p', [_vm._v(\"文件：指定要压缩的文件列表。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('p', [_vm._v(\"将\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"/etc/[man](#/man \\\"man命令\\\").config\")]), _vm._v(\"复到\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"/tmp\")]), _vm._v(\" ，并加以压缩\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost ~]# [cd](#/cd \\\"cd命令\\\") /tmp\\n[root@localhost tmp]# [cp](#/cp \\\"cp命令\\\") /etc/man.config .\\n[root@localhost tmp]# compress man.config\\n[root@localhost tmp]# [ls](#/ls \\\"ls命令\\\") -l\\n\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-rw-r--r-- 1 root root 2605 Jul 27 11:43 man.config.Z\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"将刚刚的压缩档解开\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost tmp]# compress -d man.config.Z\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"将 man.config 压缩成另外一个文件来备份\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost tmp]# compress -c man.config > man.config.back.Z\\n[root@localhost tmp]# ll man.config*\\n\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-rw-r--r-- 1 root root 4506 Jul 27 11:43 man.config\\n-rw-r--r-- 1 root root 2605 Jul 27 11:46 man.config.back.Z\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"这个\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"-c\")]), _vm._v(\"的选项比较有趣！会将压缩过程的资料输出到屏幕上，而不是写入成为\"), _c('a', {\n    attrs: {\n      \"href\": \"#/file\",\n      \"title\": \"file命令\"\n    }\n  }, [_vm._v(\"file\")]), _vm._v(\".Z文件。所以，我们可以透过资料流重导向的方法将资料输出成为另一个档名。\")])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-5c8710e8\",\"hasScoped\":false}!./~/vue-loader/lib/selector.js?type=template&index=0!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/compress.md\n// module id = 1449\n// module chunks = 467","var Component = require(\"!../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  null,\n  /* template */\n  require(\"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-5c8710e8\\\",\\\"hasScoped\\\":false}!../node_modules/vue-loader/lib/selector?type=template&index=0!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./compress.md\"),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/compress.md\n// module id = 671\n// module chunks = 467","module.exports = require(\"!!vue-loader!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./compress.md\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./command/compress.md\n// module id = 83\n// module chunks = 467"],"sourceRoot":""}