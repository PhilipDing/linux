{"version":3,"sources":["webpack:///static/js/366.69a311f9bf47e3ba34d5.js","webpack:///./command/gzip.md?8d6a","webpack:///./command/gzip.md","webpack:///./command/gzip.md?290e"],"names":["webpackJsonp","1214","module","exports","render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","_v","attrs","href","title","pre","v-pre","185","__webpack_require__","773","Component"],"mappings":"AAAAA,cAAc,MAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAgBC,OAAA,WAAmB,GAAAC,GAAAC,KAAaC,EAAAF,EAAAG,cAA0BH,GAAAI,MAAAC,EAC1E,OAAAL,GAAAM,GAAA,IACCC,iBAAA,WAA+B,GAAAP,GAAAC,KAAaC,EAAAF,EAAAG,eAA0BE,EAAAL,EAAAI,MAAAC,IAAAH,CACvE,OAAAG,GAAA,WAAAA,EAAA,KAAAA,EAAA,UAAAL,EAAAQ,GAAA,YAAAR,EAAAQ,GAAA,uDAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,iFAAAH,EAAA,KACAI,OACAC,KAAA,QACAC,MAAA,WAEGX,EAAAQ,GAAA,SAAAR,EAAAQ,GAAA,8GAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHO,KAAA,IACGP,EAAA,QACHI,OACAI,QAAA,MAEGb,EAAAQ,GAAA,sBAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHO,KAAA,IACGP,EAAA,QACHI,OACAI,QAAA,MAEGb,EAAAQ,GAAA,omBAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,sBAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,4BAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHO,KAAA,IACGP,EAAA,QACHI,OACAI,QAAA,MAEGb,EAAAQ,GAAA,gBAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,4BAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHO,KAAA,IACGP,EAAA,QACHI,OACAI,QAAA,MAEGb,EAAAQ,GAAA,oBAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,4BAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHO,KAAA,IACGP,EAAA,QACHI,OACAI,QAAA,MAEGb,EAAAQ,GAAA,mBAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,oCAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHO,KAAA,IACGP,EAAA,QACHI,OACAI,QAAA,MAEGb,EAAAQ,GAAA,yBAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,aAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHO,KAAA,IACGP,EAAA,QACHI,OACAI,QAAA,MAEGb,EAAAQ,GAAA,wBAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,qGAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,aAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHO,KAAA,IACGP,EAAA,QACHI,OACAI,QAAA,MAEGb,EAAAQ,GAAA,8BDUGM,IACA,SAAUjB,EAAQC,EAASiB,GEnEjClB,EAAAC,QAAAiB,EAAA,MFyEMC,IACA,SAAUnB,EAAQC,EAASiB,GG1EjC,GAAAE,GAAAF,EAAA,GAEA,KAEAA,EAAA,MAEA,KAEA,KAEA,KAGAlB,GAAAC,QAAAmB,EAAAnB","file":"static/js/366.69a311f9bf47e3ba34d5.js","sourcesContent":["webpackJsonp([366],{\n\n/***/ 1214:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"gzip命令\")]), _vm._v(\"用来压缩文件。gzip是个使用广泛的压缩程序，文件经它压缩过后，其名称后面会多处“.gz”扩展名。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"gzip是在Linux系统中经常使用的一个对文件进行压缩和解压缩的命令，既方便又好用。gzip不仅可以用来压缩大的、较少使用的文件以节省磁盘空间，还可以和\"), _c('a', {\n    attrs: {\n      \"href\": \"#/tar\",\n      \"title\": \"tar命令\"\n    }\n  }, [_vm._v(\"tar\")]), _vm._v(\"命令一起构成Linux操作系统中比较流行的压缩文件格式。据统计，gzip命令对文本文件有60%～70%的压缩率。减少文件大小有两个明显的好处，一是可以减少存储空间，二是通过网络传输文件时，可以减少传输的时间。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"gzip(选项)(参数)\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-a或——ascii：使用ASCII文字模式；\\n-d或--decompress或----[uncompress](#/uncompress \\\"uncompress命令\\\")：解开压缩文件；\\n-f或——force：强行压缩文件。不理会文件名称或硬连接是否存在以及该文件是否为符号连接；\\n-h或——[help](#/help \\\"help命令\\\")：在线帮助；\\n-l或——list：列出压缩文件的相关信息；\\n-L或——license：显示版本与版权信息；\\n-n或--no-name：压缩文件时，不保存原来的文件名称及时间戳记；\\n-N或——name：压缩文件时，保存原来的文件名称及时间戳记；\\n-q或——quiet：不显示警告信息；\\n-r或——recursive：递归处理，将指定目录下的所有文件及子目录一并处理；\\n-S或<压缩字尾字符串>或----suffix<压缩字尾字符串>：更改压缩字尾字符串；\\n-t或——[test](#/test \\\"test命令\\\")：测试压缩文件是否正确无误；\\n-v或——verbose：显示指令执行过程；\\n-V或——version：显示版本信息；\\n-<压缩效率>：压缩效率是一个介于1~9的数值，预设值为“6”，指定愈大的数值，压缩效率就会愈高；\\n--best：此参数的效果和指定“-9”参数相同；\\n--fast：此参数的效果和指定“-1”参数相同。\\n\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"参数\")]), _vm._v(\" \"), _c('p', [_vm._v(\"文件列表：指定要压缩的文件列表。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('p', [_vm._v(\"把test6目录下的每个文件压缩成.gz文件\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"gzip *\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"把上例中每个压缩的文件解压，并列出详细的信息\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"gzip -dv *\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"详细显示例1中每个压缩的文件的信息，并不解压\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"gzip -l *\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"压缩一个tar备份文件，此时压缩文件的扩展名为.tar.gz\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"gzip -r log.tar\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"递归的压缩目录\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"gzip -rv test6\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"这样，所有test下面的文件都变成了*.gz，目录依然存在只是目录里面的文件相应变成了*.gz.这就是压缩，和打包不同。因为是对目录操作，所以需要加上-r选项，这样也可以对子目录进行递归了。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"递归地解压目录\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"gzip -dr test6\\n\")])])])\n}]}\n\n/***/ }),\n\n/***/ 185:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(773);\n\n/***/ }),\n\n/***/ 773:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(5)(\n  /* script */\n  null,\n  /* template */\n  __webpack_require__(1214),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/366.69a311f9bf47e3ba34d5.js","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"gzip命令\")]), _vm._v(\"用来压缩文件。gzip是个使用广泛的压缩程序，文件经它压缩过后，其名称后面会多处“.gz”扩展名。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"gzip是在Linux系统中经常使用的一个对文件进行压缩和解压缩的命令，既方便又好用。gzip不仅可以用来压缩大的、较少使用的文件以节省磁盘空间，还可以和\"), _c('a', {\n    attrs: {\n      \"href\": \"#/tar\",\n      \"title\": \"tar命令\"\n    }\n  }, [_vm._v(\"tar\")]), _vm._v(\"命令一起构成Linux操作系统中比较流行的压缩文件格式。据统计，gzip命令对文本文件有60%～70%的压缩率。减少文件大小有两个明显的好处，一是可以减少存储空间，二是通过网络传输文件时，可以减少传输的时间。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"gzip(选项)(参数)\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-a或——ascii：使用ASCII文字模式；\\n-d或--decompress或----[uncompress](#/uncompress \\\"uncompress命令\\\")：解开压缩文件；\\n-f或——force：强行压缩文件。不理会文件名称或硬连接是否存在以及该文件是否为符号连接；\\n-h或——[help](#/help \\\"help命令\\\")：在线帮助；\\n-l或——list：列出压缩文件的相关信息；\\n-L或——license：显示版本与版权信息；\\n-n或--no-name：压缩文件时，不保存原来的文件名称及时间戳记；\\n-N或——name：压缩文件时，保存原来的文件名称及时间戳记；\\n-q或——quiet：不显示警告信息；\\n-r或——recursive：递归处理，将指定目录下的所有文件及子目录一并处理；\\n-S或<压缩字尾字符串>或----suffix<压缩字尾字符串>：更改压缩字尾字符串；\\n-t或——[test](#/test \\\"test命令\\\")：测试压缩文件是否正确无误；\\n-v或——verbose：显示指令执行过程；\\n-V或——version：显示版本信息；\\n-<压缩效率>：压缩效率是一个介于1~9的数值，预设值为“6”，指定愈大的数值，压缩效率就会愈高；\\n--best：此参数的效果和指定“-9”参数相同；\\n--fast：此参数的效果和指定“-1”参数相同。\\n\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"参数\")]), _vm._v(\" \"), _c('p', [_vm._v(\"文件列表：指定要压缩的文件列表。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('p', [_vm._v(\"把test6目录下的每个文件压缩成.gz文件\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"gzip *\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"把上例中每个压缩的文件解压，并列出详细的信息\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"gzip -dv *\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"详细显示例1中每个压缩的文件的信息，并不解压\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"gzip -l *\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"压缩一个tar备份文件，此时压缩文件的扩展名为.tar.gz\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"gzip -r log.tar\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"递归的压缩目录\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"gzip -rv test6\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"这样，所有test下面的文件都变成了*.gz，目录依然存在只是目录里面的文件相应变成了*.gz.这就是压缩，和打包不同。因为是对目录操作，所以需要加上-r选项，这样也可以对子目录进行递归了。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"递归地解压目录\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"gzip -dr test6\\n\")])])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-18d3b314\",\"hasScoped\":false}!./~/vue-loader/lib/selector.js?type=template&index=0!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/gzip.md\n// module id = 1214\n// module chunks = 366","module.exports = require(\"!!vue-loader!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./gzip.md\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./command/gzip.md\n// module id = 185\n// module chunks = 366","var Component = require(\"!../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  null,\n  /* template */\n  require(\"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-18d3b314\\\",\\\"hasScoped\\\":false}!../node_modules/vue-loader/lib/selector?type=template&index=0!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./gzip.md\"),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/gzip.md\n// module id = 773\n// module chunks = 366"],"sourceRoot":""}