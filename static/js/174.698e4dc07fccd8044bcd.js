webpackJsonp([174],{1617:function(e,r){e.exports={render:function(){var e=this,r=e.$createElement;e._self._c;return e._m(0)},staticRenderFns:[function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("section",[t("p",[t("strong",[e._v("readonly命令")]),e._v("用于定义只读shell变量和shell函数。readonly命令的选项-p可以输出显示系统中所有定义的只读变量。")]),e._v(" "),t("h3",[e._v("语法")]),e._v(" "),t("pre",{pre:!0},[t("code",{attrs:{"v-pre":""}},[e._v("readonly(选项)(参数)\n")])]),e._v(" "),t("h3",[e._v("选项")]),e._v(" "),t("pre",{pre:!0},[t("code",{attrs:{"v-pre":""}},[e._v("-f：定义只读函数；\n-a：定义只读数组变量；\n-p：显示系统中全部只读变量列表。\n")])]),e._v(" "),t("h3",[e._v("参数")]),e._v(" "),t("p",[e._v("变量定义：定义变量，格式为“变量名=‘变量值’”。")]),e._v(" "),t("h3",[e._v("实例")]),e._v(" "),t("p",[e._v("使用readonly命令显示系统中所有的已经定义的只读变量，输入如下命令：")]),e._v(" "),t("pre",{pre:!0},[t("code",{attrs:{"v-pre":""}},[e._v('[root@localhost ~]# readonly     #显示只读变量\n[declare](#/declare "declare命令") -ar BASH_VERSINFO=\'([0]="3" [1]="2" [2]="25" [3]="1" [4]="release" [5]="i686-redhat-linux-gnu")\'\ndeclare -ir EUID="0"\ndeclare -ir PPID="31436"\ndeclare -r SHELLOPTS="braceexpand:[emacs](#/emacs "emacs命令"):hashall:histexpand:[history](#/history "history命令"):interactive-comments:monitor"\ndeclare -ir UID="0"\n')])]),e._v(" "),t("p",[e._v('对于只读变量而言，若用户对其值进行修改，则会立即报错。例如，使用该指令定义一个只读变量"'),t("a",{attrs:{href:"#/test",title:"test命令"}},[e._v("test")]),e._v('"，并且将其值初始化为"ok"，输入如下命令：')]),e._v(" "),t("pre",{pre:!0},[t("code",{attrs:{"v-pre":""}},[e._v("[root@localhost ~]# readonly test='ok'        #定义只读变量并初始化 \n")])]),e._v(" "),t("p",[e._v("那么当用户直接修改该只读变量时，就会被报错，如下所示：")]),e._v(" "),t("pre",{pre:!0},[t("code",{attrs:{"v-pre":""}},[e._v("[root@localhost ~]# test='my'                 #试图修改只读变量的值\n-bash: test: readonly variable\n")])]),e._v(" "),t("p",[e._v("当用户试图修改只读变量的值时，会被提示该变量为只读变量。")])])}]}},380:function(e,r,t){e.exports=t(968)},968:function(e,r,t){var n=t(5)(null,t(1617),null,null,null);e.exports=n.exports}});
//# sourceMappingURL=174.698e4dc07fccd8044bcd.js.map