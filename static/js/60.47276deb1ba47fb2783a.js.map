{"version":3,"sources":["webpack:///static/js/60.47276deb1ba47fb2783a.js","webpack:///./command/unzip.md?843f","webpack:///./command/unzip.md?0c1b","webpack:///./command/unzip.md"],"names":["webpackJsonp","1085","module","exports","__webpack_require__","Component","1189","render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","_v","attrs","href","title","pre","v-pre","496"],"mappings":"AAAAA,cAAc,KAERC,KACA,SAAUC,EAAQC,EAASC,GCHjC,GAAAC,GAAAD,EAAA,GAEA,KAEAA,EAAA,MAEA,KAEA,KAEA,KAGAF,GAAAC,QAAAE,EAAAF,SDUMG,KACA,SAAUJ,EAAQC,GExBxBD,EAAAC,SAAgBI,OAAA,WAAmB,GAAAC,GAAAC,KAAaC,EAAAF,EAAAG,cAA0BH,GAAAI,MAAAC,EAC1E,OAAAL,GAAAM,GAAA,IACCC,iBAAA,WAA+B,GAAAP,GAAAC,KAAaC,EAAAF,EAAAG,eAA0BE,EAAAL,EAAAI,MAAAC,IAAAH,CACvE,OAAAG,GAAA,WAAAA,EAAA,KAAAA,EAAA,UAAAL,EAAAQ,GAAA,aAAAR,EAAAQ,GAAA,UAAAH,EAAA,KACAI,OACAC,KAAA,QACAC,MAAA,WAEGX,EAAAQ,GAAA,SAAAR,EAAAQ,GAAA,qBAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHO,KAAA,IACGP,EAAA,QACHI,OACAI,QAAA,MAEGb,EAAAQ,GAAA,uBAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHO,KAAA,IACGP,EAAA,QACHI,OACAI,QAAA,MAEGb,EAAAQ,GAAA,8lBAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,0BAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,6BAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHO,KAAA,IACGP,EAAA,QACHI,OACAI,QAAA,MAEGb,EAAAQ,GAAA,2CAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,sBAAAH,EAAA,QACHO,KAAA,IACGZ,EAAAQ,GAAA,UAAAR,EAAAQ,GAAA,yCAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHO,KAAA,IACGP,EAAA,QACHI,OACAI,QAAA,MAEGb,EAAAQ,GAAA,mCAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,oBAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHO,KAAA,IACGP,EAAA,QACHI,OACAI,QAAA,MAEGb,EAAAQ,GAAA,2BAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,sBAAAH,EAAA,QACHO,KAAA,IACGZ,EAAAQ,GAAA,UAAAR,EAAAQ,GAAA,wCAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHO,KAAA,IACGP,EAAA,QACHI,OACAI,QAAA,MAEGb,EAAAQ,GAAA,yCF+BGM,IACA,SAAUpB,EAAQC,EAASC,GGhFjCF,EAAAC,QAAAC,EAAA","file":"static/js/60.47276deb1ba47fb2783a.js","sourcesContent":["webpackJsonp([60],{\n\n/***/ 1085:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(5)(\n  /* script */\n  null,\n  /* template */\n  __webpack_require__(1189),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 1189:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"unzip命令\")]), _vm._v(\"用于解压缩由\"), _c('a', {\n    attrs: {\n      \"href\": \"#/zip\",\n      \"title\": \"zip命令\"\n    }\n  }, [_vm._v(\"zip\")]), _vm._v(\"命令压缩的“.zip”压缩包。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"unzip(选项)(参数)\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-c：将解压缩的结果显示到屏幕上，并对字符做适当的转换；\\n-f：更新现有的文件；\\n-l：显示压缩文件内所包含的文件；\\n-p：与-c参数类似，会将解压缩的结果显示到屏幕上，但不会执行任何的转换；\\n-t：检查压缩文件是否正确；\\n-u：与-f参数类似，但是除了更新现有的文件外，也会将压缩文件中的其他文件解压缩到目录中；\\n-v：执行时显示详细的信息；\\n-z：仅显示压缩文件的备注文字；\\n-a：对文本文件进行必要的字符转换；\\n-b：不要对文本文件进行字符转换；\\n-C：压缩文件中的文件名称区分大小写；\\n-j：不处理压缩文件中原有的目录路径；\\n-L：将压缩文件中的全部文件名改为小写；\\n-M：将输出结果送到[more](#/more \\\"more命令\\\")程序处理；\\n-n：解压缩时不要覆盖原有的文件；\\n-o：不必先询问用户，unzip执行后覆盖原有的文件；\\n-P<密码>：使用zip的密码选项；\\n-q：执行时不显示任何信息；\\n-s：将文件名中的空白字符转换为底线字符；\\n-V：保留VMS的文件版本信息；\\n-X：解压缩时同时回存文件原来的UID/GID；\\n-d<目录>：指定文件解压缩后所要存储的目录；\\n-x<文件>：指定不要处理.zip压缩文件中的哪些文件；\\n-Z：unzip-Z等于执行[zipinfo](#/zipinfo \\\"zipinfo命令\\\")指令。\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"参数\")]), _vm._v(\" \"), _c('p', [_vm._v(\"压缩包：指定要解压的“.zip”压缩包。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('p', [_vm._v(\"将压缩文件text.zip在当前目录下解压缩。\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"unzip [test](#/test \\\"test命令\\\").zip\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"将压缩文件text.zip在指定目录\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"/tmp\")]), _vm._v(\"下解压缩，如果已有相同的文件存在，要求unzip命令不覆盖原先的文件。\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"unzip -n test.zip -d /tmp\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"查看压缩文件目录，但不解压。\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"unzip -v test.zip\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"将压缩文件test.zip在指定目录\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"/tmp\")]), _vm._v(\"下解压缩，如果已有相同的文件存在，要求unzip命令覆盖原先的文件。\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"unzip -o test.zip -d tmp/\\n\")])])])\n}]}\n\n/***/ }),\n\n/***/ 496:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(1085);\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/60.47276deb1ba47fb2783a.js","var Component = require(\"!../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  null,\n  /* template */\n  require(\"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-0c7aee5c\\\",\\\"hasScoped\\\":false}!../node_modules/vue-loader/lib/selector?type=template&index=0!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./unzip.md\"),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/unzip.md\n// module id = 1085\n// module chunks = 60","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"unzip命令\")]), _vm._v(\"用于解压缩由\"), _c('a', {\n    attrs: {\n      \"href\": \"#/zip\",\n      \"title\": \"zip命令\"\n    }\n  }, [_vm._v(\"zip\")]), _vm._v(\"命令压缩的“.zip”压缩包。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"unzip(选项)(参数)\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-c：将解压缩的结果显示到屏幕上，并对字符做适当的转换；\\n-f：更新现有的文件；\\n-l：显示压缩文件内所包含的文件；\\n-p：与-c参数类似，会将解压缩的结果显示到屏幕上，但不会执行任何的转换；\\n-t：检查压缩文件是否正确；\\n-u：与-f参数类似，但是除了更新现有的文件外，也会将压缩文件中的其他文件解压缩到目录中；\\n-v：执行时显示详细的信息；\\n-z：仅显示压缩文件的备注文字；\\n-a：对文本文件进行必要的字符转换；\\n-b：不要对文本文件进行字符转换；\\n-C：压缩文件中的文件名称区分大小写；\\n-j：不处理压缩文件中原有的目录路径；\\n-L：将压缩文件中的全部文件名改为小写；\\n-M：将输出结果送到[more](#/more \\\"more命令\\\")程序处理；\\n-n：解压缩时不要覆盖原有的文件；\\n-o：不必先询问用户，unzip执行后覆盖原有的文件；\\n-P<密码>：使用zip的密码选项；\\n-q：执行时不显示任何信息；\\n-s：将文件名中的空白字符转换为底线字符；\\n-V：保留VMS的文件版本信息；\\n-X：解压缩时同时回存文件原来的UID/GID；\\n-d<目录>：指定文件解压缩后所要存储的目录；\\n-x<文件>：指定不要处理.zip压缩文件中的哪些文件；\\n-Z：unzip-Z等于执行[zipinfo](#/zipinfo \\\"zipinfo命令\\\")指令。\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"参数\")]), _vm._v(\" \"), _c('p', [_vm._v(\"压缩包：指定要解压的“.zip”压缩包。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('p', [_vm._v(\"将压缩文件text.zip在当前目录下解压缩。\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"unzip [test](#/test \\\"test命令\\\").zip\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"将压缩文件text.zip在指定目录\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"/tmp\")]), _vm._v(\"下解压缩，如果已有相同的文件存在，要求unzip命令不覆盖原先的文件。\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"unzip -n test.zip -d /tmp\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"查看压缩文件目录，但不解压。\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"unzip -v test.zip\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"将压缩文件test.zip在指定目录\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"/tmp\")]), _vm._v(\"下解压缩，如果已有相同的文件存在，要求unzip命令覆盖原先的文件。\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"unzip -o test.zip -d tmp/\\n\")])])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-0c7aee5c\",\"hasScoped\":false}!./~/vue-loader/lib/selector.js?type=template&index=0!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/unzip.md\n// module id = 1189\n// module chunks = 60","module.exports = require(\"!!vue-loader!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./unzip.md\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./command/unzip.md\n// module id = 496\n// module chunks = 60"],"sourceRoot":""}