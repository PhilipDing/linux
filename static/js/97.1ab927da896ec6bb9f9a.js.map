{"version":3,"sources":["webpack:///static/js/97.1ab927da896ec6bb9f9a.js","webpack:///./command/systemctl.md?2dc6","webpack:///./command/systemctl.md?0ffc","webpack:///./command/systemctl.md"],"names":["webpackJsonp","1047","module","exports","__webpack_require__","Component","1142","render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","_v","attrs","href","title","pre","v-pre","459"],"mappings":"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","file":"static/js/97.1ab927da896ec6bb9f9a.js","sourcesContent":["webpackJsonp([97],{\n\n/***/ 1047:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(5)(\n  /* script */\n  null,\n  /* template */\n  __webpack_require__(1142),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 1142:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"systemctl命令\")]), _vm._v(\"是系统服务管理器指令，它实际上将 \"), _c('a', {\n    attrs: {\n      \"href\": \"#/service\",\n      \"title\": \"service命令\"\n    }\n  }, [_vm._v(\"service\")]), _vm._v(\" 和 \"), _c('a', {\n    attrs: {\n      \"href\": \"#/chkconfig\",\n      \"title\": \"chkconfig命令\"\n    }\n  }, [_vm._v(\"chkconfig\")]), _vm._v(\" 这两个命令组合到一起。\")]), _vm._v(\" \"), _c('table', [_c('tbody', [_c('tr', [_c('td', [_vm._v(\"任务\")]), _vm._v(\" \"), _c('td', [_vm._v(\"旧指令\")]), _vm._v(\" \"), _c('td', [_vm._v(\"新指令\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"使某服务自动启动\")]), _vm._v(\" \"), _c('td', [_vm._v(\"chkconfig --level 3 [httpd](#/httpd \\\"httpd命令\\\") on\")]), _vm._v(\" \"), _c('td', [_vm._v(\"systemctl [enable](#/enable \\\"enable命令\\\") httpd.service\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"使某服务不自动启动\")]), _vm._v(\" \"), _c('td', [_vm._v(\"chkconfig --level 3 httpd off\")]), _vm._v(\" \"), _c('td', [_vm._v(\"systemctl disable httpd.service\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"检查服务状态\")]), _vm._v(\" \"), _c('td', [_vm._v(\"service httpd status\")]), _vm._v(\" \"), _c('td', [_vm._v(\"systemctl status httpd.service （服务详细信息） systemctl is-active httpd.service （仅显示是否 Active)\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"显示所有已启动的服务\")]), _vm._v(\" \"), _c('td', [_vm._v(\"chkconfig --list\")]), _vm._v(\" \"), _c('td', [_vm._v(\"systemctl list-units --[type](#/type \\\"type命令\\\")=service\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"启动某服务\")]), _vm._v(\" \"), _c('td', [_vm._v(\"service httpd start\")]), _vm._v(\" \"), _c('td', [_vm._v(\"systemctl start httpd.service\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"停止某服务\")]), _vm._v(\" \"), _c('td', [_vm._v(\"service httpd stop\")]), _vm._v(\" \"), _c('td', [_vm._v(\"systemctl stop httpd.service\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"重启某服务\")]), _vm._v(\" \"), _c('td', [_vm._v(\"service httpd restart\")]), _vm._v(\" \"), _c('td', [_vm._v(\"systemctl restart httpd.service\")])])])]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('p', [_vm._v(\"1.启动nfs服务\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"systemctl start nfs-server.service\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"2.设置开机自启动\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"systemctl enable nfs-server.service\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"3.停止开机自启动\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"systemctl disable nfs-server.service\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"4.查看服务当前状态\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"systemctl status nfs-server.service\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"5.重新启动某服务\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"systemctl restart nfs-server.service\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"6.查看所有已启动的服务\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"systemctl list -units --type=service\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"开启防火墙22端口\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[iptables](#/iptables \\\"iptables命令\\\") -I INPUT -p tcp --dport 22 -j [accept](#/accept \\\"accept命令\\\")\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"如果仍然有问题，就可能是SELinux导致的\")]), _vm._v(\" \"), _c('p', [_vm._v(\"关闭SElinux：\")]), _vm._v(\" \"), _c('p', [_vm._v(\"修改\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"/etc/selinux/config\")]), _vm._v(\"文件中的\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"SELINUX=””\")]), _vm._v(\"为disabled，然后重启。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"彻底关闭防火墙：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[sudo](#/sudo \\\"sudo命令\\\") systemctl status firewalld.service\\nsudo systemctl stop firewalld.service          \\nsudo systemctl disable firewalld.service\\n\")])])])\n}]}\n\n/***/ }),\n\n/***/ 459:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(1047);\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/97.1ab927da896ec6bb9f9a.js","var Component = require(\"!../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  null,\n  /* template */\n  require(\"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-02449270\\\",\\\"hasScoped\\\":false}!../node_modules/vue-loader/lib/selector?type=template&index=0!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./systemctl.md\"),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/systemctl.md\n// module id = 1047\n// module chunks = 97","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"systemctl命令\")]), _vm._v(\"是系统服务管理器指令，它实际上将 \"), _c('a', {\n    attrs: {\n      \"href\": \"#/service\",\n      \"title\": \"service命令\"\n    }\n  }, [_vm._v(\"service\")]), _vm._v(\" 和 \"), _c('a', {\n    attrs: {\n      \"href\": \"#/chkconfig\",\n      \"title\": \"chkconfig命令\"\n    }\n  }, [_vm._v(\"chkconfig\")]), _vm._v(\" 这两个命令组合到一起。\")]), _vm._v(\" \"), _c('table', [_c('tbody', [_c('tr', [_c('td', [_vm._v(\"任务\")]), _vm._v(\" \"), _c('td', [_vm._v(\"旧指令\")]), _vm._v(\" \"), _c('td', [_vm._v(\"新指令\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"使某服务自动启动\")]), _vm._v(\" \"), _c('td', [_vm._v(\"chkconfig --level 3 [httpd](#/httpd \\\"httpd命令\\\") on\")]), _vm._v(\" \"), _c('td', [_vm._v(\"systemctl [enable](#/enable \\\"enable命令\\\") httpd.service\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"使某服务不自动启动\")]), _vm._v(\" \"), _c('td', [_vm._v(\"chkconfig --level 3 httpd off\")]), _vm._v(\" \"), _c('td', [_vm._v(\"systemctl disable httpd.service\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"检查服务状态\")]), _vm._v(\" \"), _c('td', [_vm._v(\"service httpd status\")]), _vm._v(\" \"), _c('td', [_vm._v(\"systemctl status httpd.service （服务详细信息） systemctl is-active httpd.service （仅显示是否 Active)\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"显示所有已启动的服务\")]), _vm._v(\" \"), _c('td', [_vm._v(\"chkconfig --list\")]), _vm._v(\" \"), _c('td', [_vm._v(\"systemctl list-units --[type](#/type \\\"type命令\\\")=service\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"启动某服务\")]), _vm._v(\" \"), _c('td', [_vm._v(\"service httpd start\")]), _vm._v(\" \"), _c('td', [_vm._v(\"systemctl start httpd.service\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"停止某服务\")]), _vm._v(\" \"), _c('td', [_vm._v(\"service httpd stop\")]), _vm._v(\" \"), _c('td', [_vm._v(\"systemctl stop httpd.service\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"重启某服务\")]), _vm._v(\" \"), _c('td', [_vm._v(\"service httpd restart\")]), _vm._v(\" \"), _c('td', [_vm._v(\"systemctl restart httpd.service\")])])])]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('p', [_vm._v(\"1.启动nfs服务\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"systemctl start nfs-server.service\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"2.设置开机自启动\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"systemctl enable nfs-server.service\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"3.停止开机自启动\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"systemctl disable nfs-server.service\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"4.查看服务当前状态\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"systemctl status nfs-server.service\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"5.重新启动某服务\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"systemctl restart nfs-server.service\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"6.查看所有已启动的服务\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"systemctl list -units --type=service\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"开启防火墙22端口\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[iptables](#/iptables \\\"iptables命令\\\") -I INPUT -p tcp --dport 22 -j [accept](#/accept \\\"accept命令\\\")\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"如果仍然有问题，就可能是SELinux导致的\")]), _vm._v(\" \"), _c('p', [_vm._v(\"关闭SElinux：\")]), _vm._v(\" \"), _c('p', [_vm._v(\"修改\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"/etc/selinux/config\")]), _vm._v(\"文件中的\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"SELINUX=””\")]), _vm._v(\"为disabled，然后重启。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"彻底关闭防火墙：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[sudo](#/sudo \\\"sudo命令\\\") systemctl status firewalld.service\\nsudo systemctl stop firewalld.service          \\nsudo systemctl disable firewalld.service\\n\")])])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-02449270\",\"hasScoped\":false}!./~/vue-loader/lib/selector.js?type=template&index=0!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/systemctl.md\n// module id = 1142\n// module chunks = 97","module.exports = require(\"!!vue-loader!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./systemctl.md\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./command/systemctl.md\n// module id = 459\n// module chunks = 97"],"sourceRoot":""}