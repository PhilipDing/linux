{"version":3,"sources":["webpack:///static/js/110.87a1e08700637613d1e4.js","webpack:///./command/startx.md?0bf4","webpack:///./command/startx.md?9b86","webpack:///./command/startx.md"],"names":["webpackJsonp","1033","module","exports","__webpack_require__","Component","1203","render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","_v","attrs","href","title","pre","v-pre","445"],"mappings":"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","file":"static/js/110.87a1e08700637613d1e4.js","sourcesContent":["webpackJsonp([110],{\n\n/***/ 1033:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(5)(\n  /* script */\n  null,\n  /* template */\n  __webpack_require__(1203),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 1203:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"startx命令\")]), _vm._v(\"用来启动X Window，实际上启动X Window的程序为\"), _c('a', {\n    attrs: {\n      \"href\": \"#/xinit\",\n      \"title\": \"xinit命令\"\n    }\n  }, [_vm._v(\"xinit\")]), _vm._v(\"。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"startx(参数)\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"参数\")]), _vm._v(\" \"), _c('ul', [_c('li', [_vm._v(\"客户端及选项：X客户端及选项；\")]), _vm._v(\" \"), _c('li', [_vm._v(\"服务器及选项：X服务器及选项。\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('p', [_vm._v(\"要在工作站上或 X 终端上启动 X 会话，请输入：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"startx\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"要在工作站上强制启动 X 会话，请输入：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"startx -[w](#/w \\\"w命令\\\")\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"要为 X 终端启动 X 会话，并注销用户的 \"), _c('a', {\n    attrs: {\n      \"href\": \"#/telnet\",\n      \"title\": \"telnet命令\"\n    }\n  }, [_vm._v(\"telnet\")]), _vm._v(\" 会话，请输入：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"startx; [kill](#/kill \\\"kill命令\\\") -9 $\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"要使用 .xinitrc 脚本启动 X 会话，请输入：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"startx -x .xinitrc\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"要使用 mwm 窗口管理器启动 X 会话，请输入：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"startx -m mwm\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"但是，如果找到启动脚本文件，则忽略\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"-w\")]), _vm._v(\"选项。在启动脚本中，启动窗口管理器、装入X资源以及产生X客户机是用户的责任。以下是.xsession脚本的一个示例。\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"#!/bin/csh\\n (mwm &)\\n xrdb -load .Xdefaults\\n (xclock -g 75x75+0+0 &)\\n (xbiff -g 75x75+101-0 &)\\n if (\\\"/dev/lft*\\\" == \\\"`tty`\\\") then\\n  aixterm -g 80x24+0+0 +ut -C -T `[hostname](#/hostname \\\"hostname命令\\\")`\\n else\\n  aixterm -g 80x24+0+0 +ut -T `hostname`\\n endif\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"对于工作站，startup脚本中的最后一行应该是前台aixterm命令，该命令带有\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"-C\")]), _vm._v(\"选项表示控制台信息。对于X终端，startup脚本中的最后一行应该是不带有\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"-C\")]), _vm._v(\"选项的前台aixterm命令。另外，由于某些X终端在关闭时不终止telnet会话，所以用户必须在使用热键切换至X会话前退出当前的telnet会话。\")]), _vm._v(\" \"), _c('p', [_c('code', {\n    pre: true\n  }, [_vm._v(\"/usr/lib/X11/xdm/Xsession\")]), _vm._v(\"文件中的xdm命令也可以使用startx命令。这为xdm命令提供了startx命令的功能。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"以下是启动X会话一贯使用的文件名。\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"$HOME/.xerrors 其中，startx 用来重定向错误消息。在缺省情况下，startx 将错误重定向至用户主目录中的 .xerrors 文件中。\\n$HOME/.Xinit,  \\n$HOME/.xinit,  \\n$HOME/.Xinitrc,  \\n$HOME/.xinitrc,  \\n$HOME/.xsession 作为包含 shell 命令的“启动文件”来启动窗口管理器、装入 X 资源并产生 X 客户机。\\n$HOME/.Xdefaults,  \\n$HOME/.xresources 作为装入的 X 资源文件来设置 X 客户机的用户首选项。\\n$HOME/.mwmrc mwm 配置文件。\\n$HOME/.twmrc twm 配置文件。\\n$HOME/.awmrc awm 配置文件。\\n$HOME/.uwmrc uwm 配置文件。\\n/dev/lft* 终端或 tty、工作站初始 [login](#/login \\\"login命令\\\") shell 的界面。\\n\")])])])\n}]}\n\n/***/ }),\n\n/***/ 445:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(1033);\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/110.87a1e08700637613d1e4.js","var Component = require(\"!../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  null,\n  /* template */\n  require(\"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-16b7ec58\\\",\\\"hasScoped\\\":false}!../node_modules/vue-loader/lib/selector?type=template&index=0!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./startx.md\"),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/startx.md\n// module id = 1033\n// module chunks = 110","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"startx命令\")]), _vm._v(\"用来启动X Window，实际上启动X Window的程序为\"), _c('a', {\n    attrs: {\n      \"href\": \"#/xinit\",\n      \"title\": \"xinit命令\"\n    }\n  }, [_vm._v(\"xinit\")]), _vm._v(\"。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"startx(参数)\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"参数\")]), _vm._v(\" \"), _c('ul', [_c('li', [_vm._v(\"客户端及选项：X客户端及选项；\")]), _vm._v(\" \"), _c('li', [_vm._v(\"服务器及选项：X服务器及选项。\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('p', [_vm._v(\"要在工作站上或 X 终端上启动 X 会话，请输入：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"startx\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"要在工作站上强制启动 X 会话，请输入：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"startx -[w](#/w \\\"w命令\\\")\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"要为 X 终端启动 X 会话，并注销用户的 \"), _c('a', {\n    attrs: {\n      \"href\": \"#/telnet\",\n      \"title\": \"telnet命令\"\n    }\n  }, [_vm._v(\"telnet\")]), _vm._v(\" 会话，请输入：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"startx; [kill](#/kill \\\"kill命令\\\") -9 $\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"要使用 .xinitrc 脚本启动 X 会话，请输入：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"startx -x .xinitrc\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"要使用 mwm 窗口管理器启动 X 会话，请输入：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"startx -m mwm\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"但是，如果找到启动脚本文件，则忽略\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"-w\")]), _vm._v(\"选项。在启动脚本中，启动窗口管理器、装入X资源以及产生X客户机是用户的责任。以下是.xsession脚本的一个示例。\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"#!/bin/csh\\n (mwm &)\\n xrdb -load .Xdefaults\\n (xclock -g 75x75+0+0 &)\\n (xbiff -g 75x75+101-0 &)\\n if (\\\"/dev/lft*\\\" == \\\"`tty`\\\") then\\n  aixterm -g 80x24+0+0 +ut -C -T `[hostname](#/hostname \\\"hostname命令\\\")`\\n else\\n  aixterm -g 80x24+0+0 +ut -T `hostname`\\n endif\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"对于工作站，startup脚本中的最后一行应该是前台aixterm命令，该命令带有\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"-C\")]), _vm._v(\"选项表示控制台信息。对于X终端，startup脚本中的最后一行应该是不带有\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"-C\")]), _vm._v(\"选项的前台aixterm命令。另外，由于某些X终端在关闭时不终止telnet会话，所以用户必须在使用热键切换至X会话前退出当前的telnet会话。\")]), _vm._v(\" \"), _c('p', [_c('code', {\n    pre: true\n  }, [_vm._v(\"/usr/lib/X11/xdm/Xsession\")]), _vm._v(\"文件中的xdm命令也可以使用startx命令。这为xdm命令提供了startx命令的功能。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"以下是启动X会话一贯使用的文件名。\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"$HOME/.xerrors 其中，startx 用来重定向错误消息。在缺省情况下，startx 将错误重定向至用户主目录中的 .xerrors 文件中。\\n$HOME/.Xinit,  \\n$HOME/.xinit,  \\n$HOME/.Xinitrc,  \\n$HOME/.xinitrc,  \\n$HOME/.xsession 作为包含 shell 命令的“启动文件”来启动窗口管理器、装入 X 资源并产生 X 客户机。\\n$HOME/.Xdefaults,  \\n$HOME/.xresources 作为装入的 X 资源文件来设置 X 客户机的用户首选项。\\n$HOME/.mwmrc mwm 配置文件。\\n$HOME/.twmrc twm 配置文件。\\n$HOME/.awmrc awm 配置文件。\\n$HOME/.uwmrc uwm 配置文件。\\n/dev/lft* 终端或 tty、工作站初始 [login](#/login \\\"login命令\\\") shell 的界面。\\n\")])])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-16b7ec58\",\"hasScoped\":false}!./~/vue-loader/lib/selector.js?type=template&index=0!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/startx.md\n// module id = 1203\n// module chunks = 110","module.exports = require(\"!!vue-loader!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./startx.md\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./command/startx.md\n// module id = 445\n// module chunks = 110"],"sourceRoot":""}