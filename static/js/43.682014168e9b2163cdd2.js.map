{"version":3,"sources":["webpack:///static/js/43.682014168e9b2163cdd2.js","webpack:///./command/vmstat.md?0ae8","webpack:///./command/vmstat.md?8135","webpack:///./command/vmstat.md"],"names":["webpackJsonp","1103","module","exports","__webpack_require__","Component","1569","render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","_v","pre","attrs","v-pre","href","title","515"],"mappings":"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","file":"static/js/43.682014168e9b2163cdd2.js","sourcesContent":["webpackJsonp([43],{\n\n/***/ 1103:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(5)(\n  /* script */\n  null,\n  /* template */\n  __webpack_require__(1569),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 1569:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"vmstat命令\")]), _vm._v(\"的含义为显示虚拟内存状态（“Viryual Memor Statics”），但是它可以报告关于进程、内存、I/O等系统整体运行状态。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"vmstat(选项)(参数)\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-a：显示活动内页；\\n-f：显示启动后创建的进程总数；\\n-m：显示slab信息；\\n-n：头信息仅显示一次；\\n-s：以表格方式显示事件计数器和内存状态；\\n-d：报告磁盘状态；\\n-p：显示指定的硬盘分区状态；\\n-S：输出信息的单位。\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"参数\")]), _vm._v(\" \"), _c('ul', [_c('li', [_vm._v(\"事件间隔：状态信息刷新的时间间隔；\")]), _vm._v(\" \"), _c('li', [_vm._v(\"次数：显示报告的次数。\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"vmstat 3\\nprocs -----------memory---------- ---swap-- -----io---- --system-- -----cpu------\\n r  b   swpd   [free](#/free \\\"free命令\\\")   buff  cache   si   so    bi    bo   in   cs us sy [id](#/id \\\"id命令\\\") wa st\\n 0  0    320  42188 167332 1534368    0    0     4     7    1    0  0  0 99  0  0\\n 0  0    320  42188 167332 1534392    0    0     0     0 1002   39  0  0 100  0  0\\n 0  0    320  42188 167336 1534392    0    0     0    19 1002   44  0  0 100  0  0\\n 0  0    320  42188 167336 1534392    0    0     0     0 1002   41  0  0 100  0  0\\n 0  0    320  42188 167336 1534392    0    0     0     0 1002   41  0  0 100  0  0\\n\\n\")])]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"字段说明：\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"Procs（进程）\")]), _vm._v(\" \"), _c('ul', [_c('li', [_vm._v(\"r: 运行队列中进程数量，这个值也可以判断是否需要增加CPU。（长期大于1）\")]), _vm._v(\" \"), _c('li', [_vm._v(\"b: 等待IO的进程数量。\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"Memory（内存）\")]), _vm._v(\" \"), _c('ul', [_c('li', [_vm._v(\"swpd: 使用虚拟内存大小，如果swpd的值不为0，但是SI，SO的值长期为0，这种情况不会影响系统性能。\")]), _vm._v(\" \"), _c('li', [_vm._v(\"free: 空闲物理内存大小。\")]), _vm._v(\" \"), _c('li', [_vm._v(\"buff: 用作缓冲的内存大小。\")]), _vm._v(\" \"), _c('li', [_vm._v(\"cache: 用作缓存的内存大小，如果cache的值大的时候，说明cache处的文件数多，如果频繁访问到的文件都能被cache处，那么磁盘的读IO bi会非常小。\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"Swap\")]), _vm._v(\" \"), _c('ul', [_c('li', [_vm._v(\"si: 每秒从交换区写到内存的大小，由磁盘调入内存。\")]), _vm._v(\" \"), _c('li', [_vm._v(\"so: 每秒写入交换区的内存大小，由内存调入磁盘。\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"注意：内存够用的时候，这2个值都是0，如果这2个值长期大于0时，系统性能会受到影响，磁盘IO和CPU资源都会被消耗。有些朋友看到空闲内存（free）很少的或接近于0时，就认为内存不够用了，不能光看这一点，还要结合si和so，如果free很少，但是si和so也很少（大多时候是0），那么不用担心，系统性能这时不会受到影响的。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"IO（现在的Linux版本块的大小为1kb）\")]), _vm._v(\" \"), _c('ul', [_c('li', [_vm._v(\"bi: 每秒读取的块数\")]), _vm._v(\" \"), _c('li', [_vm._v(\"bo: 每秒写入的块数\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"注意：随机磁盘读写的时候，这2个值越大（如超出1024k)，能看到CPU在IO等待的值也会越大。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"system（系统）\")]), _vm._v(\" \"), _c('ul', [_c('li', [_vm._v(\"in: 每秒中断数，包括时钟中断。\")]), _vm._v(\" \"), _c('li', [_vm._v(\"cs: 每秒上下文切换数。\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"注意：上面2个值越大，会看到由内核消耗的CPU时间会越大。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"CPU（以百分比表示）\")]), _vm._v(\" \"), _c('ul', [_c('li', [_vm._v(\"us: 用户进程执行时间百分比(user \"), _c('a', {\n    attrs: {\n      \"href\": \"#/time\",\n      \"title\": \"time命令\"\n    }\n  }, [_vm._v(\"time\")]), _vm._v(\")\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"us的值比较高时，说明用户进程消耗的CPU时间多，但是如果长期超50%的使用，那么我们就该考虑优化程序算法或者进行加速。\")]), _vm._v(\" \"), _c('ul', [_c('li', [_vm._v(\"sy: 内核系统进程执行时间百分比(system time)\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"sy的值高时，说明系统内核消耗的CPU资源多，这并不是良性表现，我们应该检查原因。\")]), _vm._v(\" \"), _c('ul', [_c('li', [_vm._v(\"wa: IO等待时间百分比\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"wa的值高时，说明IO等待比较严重，这可能由于磁盘大量作随机访问造成，也有可能磁盘出现瓶颈（块操作）。\")]), _vm._v(\" \"), _c('ul', [_c('li', [_vm._v(\"id: 空闲时间百分比\")])])])\n}]}\n\n/***/ }),\n\n/***/ 515:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(1103);\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/43.682014168e9b2163cdd2.js","var Component = require(\"!../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  null,\n  /* template */\n  require(\"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-922d69fa\\\",\\\"hasScoped\\\":false}!../node_modules/vue-loader/lib/selector?type=template&index=0!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./vmstat.md\"),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/vmstat.md\n// module id = 1103\n// module chunks = 43","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"vmstat命令\")]), _vm._v(\"的含义为显示虚拟内存状态（“Viryual Memor Statics”），但是它可以报告关于进程、内存、I/O等系统整体运行状态。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"vmstat(选项)(参数)\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-a：显示活动内页；\\n-f：显示启动后创建的进程总数；\\n-m：显示slab信息；\\n-n：头信息仅显示一次；\\n-s：以表格方式显示事件计数器和内存状态；\\n-d：报告磁盘状态；\\n-p：显示指定的硬盘分区状态；\\n-S：输出信息的单位。\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"参数\")]), _vm._v(\" \"), _c('ul', [_c('li', [_vm._v(\"事件间隔：状态信息刷新的时间间隔；\")]), _vm._v(\" \"), _c('li', [_vm._v(\"次数：显示报告的次数。\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"vmstat 3\\nprocs -----------memory---------- ---swap-- -----io---- --system-- -----cpu------\\n r  b   swpd   [free](#/free \\\"free命令\\\")   buff  cache   si   so    bi    bo   in   cs us sy [id](#/id \\\"id命令\\\") wa st\\n 0  0    320  42188 167332 1534368    0    0     4     7    1    0  0  0 99  0  0\\n 0  0    320  42188 167332 1534392    0    0     0     0 1002   39  0  0 100  0  0\\n 0  0    320  42188 167336 1534392    0    0     0    19 1002   44  0  0 100  0  0\\n 0  0    320  42188 167336 1534392    0    0     0     0 1002   41  0  0 100  0  0\\n 0  0    320  42188 167336 1534392    0    0     0     0 1002   41  0  0 100  0  0\\n\\n\")])]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"字段说明：\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"Procs（进程）\")]), _vm._v(\" \"), _c('ul', [_c('li', [_vm._v(\"r: 运行队列中进程数量，这个值也可以判断是否需要增加CPU。（长期大于1）\")]), _vm._v(\" \"), _c('li', [_vm._v(\"b: 等待IO的进程数量。\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"Memory（内存）\")]), _vm._v(\" \"), _c('ul', [_c('li', [_vm._v(\"swpd: 使用虚拟内存大小，如果swpd的值不为0，但是SI，SO的值长期为0，这种情况不会影响系统性能。\")]), _vm._v(\" \"), _c('li', [_vm._v(\"free: 空闲物理内存大小。\")]), _vm._v(\" \"), _c('li', [_vm._v(\"buff: 用作缓冲的内存大小。\")]), _vm._v(\" \"), _c('li', [_vm._v(\"cache: 用作缓存的内存大小，如果cache的值大的时候，说明cache处的文件数多，如果频繁访问到的文件都能被cache处，那么磁盘的读IO bi会非常小。\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"Swap\")]), _vm._v(\" \"), _c('ul', [_c('li', [_vm._v(\"si: 每秒从交换区写到内存的大小，由磁盘调入内存。\")]), _vm._v(\" \"), _c('li', [_vm._v(\"so: 每秒写入交换区的内存大小，由内存调入磁盘。\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"注意：内存够用的时候，这2个值都是0，如果这2个值长期大于0时，系统性能会受到影响，磁盘IO和CPU资源都会被消耗。有些朋友看到空闲内存（free）很少的或接近于0时，就认为内存不够用了，不能光看这一点，还要结合si和so，如果free很少，但是si和so也很少（大多时候是0），那么不用担心，系统性能这时不会受到影响的。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"IO（现在的Linux版本块的大小为1kb）\")]), _vm._v(\" \"), _c('ul', [_c('li', [_vm._v(\"bi: 每秒读取的块数\")]), _vm._v(\" \"), _c('li', [_vm._v(\"bo: 每秒写入的块数\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"注意：随机磁盘读写的时候，这2个值越大（如超出1024k)，能看到CPU在IO等待的值也会越大。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"system（系统）\")]), _vm._v(\" \"), _c('ul', [_c('li', [_vm._v(\"in: 每秒中断数，包括时钟中断。\")]), _vm._v(\" \"), _c('li', [_vm._v(\"cs: 每秒上下文切换数。\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"注意：上面2个值越大，会看到由内核消耗的CPU时间会越大。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"CPU（以百分比表示）\")]), _vm._v(\" \"), _c('ul', [_c('li', [_vm._v(\"us: 用户进程执行时间百分比(user \"), _c('a', {\n    attrs: {\n      \"href\": \"#/time\",\n      \"title\": \"time命令\"\n    }\n  }, [_vm._v(\"time\")]), _vm._v(\")\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"us的值比较高时，说明用户进程消耗的CPU时间多，但是如果长期超50%的使用，那么我们就该考虑优化程序算法或者进行加速。\")]), _vm._v(\" \"), _c('ul', [_c('li', [_vm._v(\"sy: 内核系统进程执行时间百分比(system time)\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"sy的值高时，说明系统内核消耗的CPU资源多，这并不是良性表现，我们应该检查原因。\")]), _vm._v(\" \"), _c('ul', [_c('li', [_vm._v(\"wa: IO等待时间百分比\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"wa的值高时，说明IO等待比较严重，这可能由于磁盘大量作随机访问造成，也有可能磁盘出现瓶颈（块操作）。\")]), _vm._v(\" \"), _c('ul', [_c('li', [_vm._v(\"id: 空闲时间百分比\")])])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-922d69fa\",\"hasScoped\":false}!./~/vue-loader/lib/selector.js?type=template&index=0!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/vmstat.md\n// module id = 1569\n// module chunks = 43","module.exports = require(\"!!vue-loader!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./vmstat.md\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./command/vmstat.md\n// module id = 515\n// module chunks = 43"],"sourceRoot":""}