{"version":3,"sources":["webpack:///static/js/150.62c26f7f83b944f397ec.js","webpack:///./command/rsync.md?7c6e","webpack:///./command/rsync.md","webpack:///./command/rsync.md?0b38"],"names":["webpackJsonp","1240","module","exports","render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","_v","pre","attrs","v-pre","href","title","405","__webpack_require__","993","Component"],"mappings":"AAAAA,cAAc,MAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAgBC,OAAA,WAAmB,GAAAC,GAAAC,KAAaC,EAAAF,EAAAG,cAA0BH,GAAAI,MAAAC,EAC1E,OAAAL,GAAAM,GAAA,IACCC,iBAAA,WAA+B,GAAAP,GAAAC,KAAaC,EAAAF,EAAAG,eAA0BE,EAAAL,EAAAI,MAAAC,IAAAH,CACvE,OAAAG,GAAA,WAAAA,EAAA,KAAAA,EAAA,UAAAL,EAAAQ,GAAA,aAAAR,EAAAQ,GAAA,yKAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACAI,KAAA,IACGJ,EAAA,QACHK,OACAC,QAAA,MAEGX,EAAAQ,GAAA,kRAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,kCAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAA,EAAA,MAAAL,EAAAQ,GAAA,mDAAAH,EAAA,QACHI,KAAA,IACGT,EAAAQ,GAAA,8BAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,mBAAAH,EAAA,KACHK,OACAE,KAAA,QACAC,MAAA,WAEGb,EAAAQ,GAAA,SAAAR,EAAAQ,GAAA,KAAAH,EAAA,KACHK,OACAE,KAAA,QACAC,MAAA,WAEGb,EAAAQ,GAAA,SAAAR,EAAAQ,GAAA,qDAAAH,EAAA,QACHI,KAAA,IACGT,EAAAQ,GAAA,8BAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,2EAAAH,EAAA,QACHI,KAAA,IACGT,EAAAQ,GAAA,oCAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,mDAAAH,EAAA,QACHI,KAAA,IACGT,EAAAQ,GAAA,oDAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,oDAAAH,EAAA,QACHI,KAAA,IACGT,EAAAQ,GAAA,oDAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,+CAAAH,EAAA,QACHI,KAAA,IACGT,EAAAQ,GAAA,6CAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHI,KAAA,IACGJ,EAAA,QACHK,OACAC,QAAA,MAEGX,EAAAQ,GAAA,wqEAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAA,EAAA,UAAAL,EAAAQ,GAAA,aAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,oBAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHI,KAAA,IACGJ,EAAA,QACHK,OACAC,QAAA,MAEGX,EAAAQ,GAAA,uFAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAA,EAAA,UAAAL,EAAAQ,GAAA,mBAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,2DAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHI,KAAA,IACGJ,EAAA,QACHK,OACAC,QAAA,MAEGX,EAAAQ,GAAA,mgBAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,kCAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAA,EAAA,UAAAL,EAAAQ,GAAA,cAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,gBAAAH,EAAA,QACHI,KAAA,IACGT,EAAAQ,GAAA,yBAAAR,EAAAQ,GAAA,WAAAH,EAAA,QACHI,KAAA,IACGT,EAAAQ,GAAA,kCAAAR,EAAAQ,GAAA,MAAAH,EAAA,QACHI,KAAA,IACGT,EAAAQ,GAAA,gBAAAR,EAAAQ,GAAA,sBAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHI,KAAA,IACGJ,EAAA,QACHK,OACAC,QAAA,MAEGX,EAAAQ,GAAA,6XAAsYR,EAAAQ,GAAA,KAAAH,EAAA,OACzYI,KAAA,IACGJ,EAAA,QACHK,OACAC,QAAA,MAEGX,EAAAQ,GAAA,yFAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,6FAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHI,KAAA,IACGJ,EAAA,QACHK,OACAC,QAAA,MAEGX,EAAAQ,GAAA,qXAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,wIAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHI,KAAA,IACGJ,EAAA,QACHK,OACAC,QAAA,MAEGX,EAAAQ,GAAA,uHAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,iCAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHI,KAAA,IACGJ,EAAA,QACHK,OACAC,QAAA,MAEGX,EAAAQ,GAAA,wcAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,wGAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHI,KAAA,IACGJ,EAAA,QACHK,OACAC,QAAA,MAEGX,EAAAQ,GAAA,0SDUGM,IACA,SAAUjB,EAAQC,EAASiB,GEtGjClB,EAAAC,QAAAiB,EAAA,MF4GMC,IACA,SAAUnB,EAAQC,EAASiB,GG7GjC,GAAAE,GAAAF,EAAA,GAEA,KAEAA,EAAA,MAEA,KAEA,KAEA,KAGAlB,GAAAC,QAAAmB,EAAAnB","file":"static/js/150.62c26f7f83b944f397ec.js","sourcesContent":["webpackJsonp([150],{\n\n/***/ 1240:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"rsync命令\")]), _vm._v(\"是一个远程数据同步工具，可通过LAN/WAN快速同步多台主机间的文件。rsync使用所谓的“rsync算法”来使本地和远程两个主机之间的文件达到同步，这个算法只传送两个文件的不同部分，而不是每次都整份传送，因此速度相当快。 rsync是一个功能非常强大的工具，其命令也有很多功能特色选项，我们下面就对它的选项一一进行分析说明。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"rsync [OPTION]... SRC DEST\\nrsync [OPTION]... SRC [USER@][host](#/host \\\"host命令\\\"):DEST\\nrsync [OPTION]... [USER@]HOST:SRC DEST\\nrsync [OPTION]... [USER@]HOST::SRC DEST\\nrsync [OPTION]... SRC [USER@]HOST::DEST\\nrsync [OPTION]... rsync://[USER@]HOST[:PORT]/SRC [DEST]\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"对应于以上六种命令格式，rsync有六种不同的工作模式：\")]), _vm._v(\" \"), _c('ol', [_c('li', [_vm._v(\"拷贝本地文件。当SRC和DES路径信息都不包含有单个冒号\\\":\\\"分隔符时就启动这种工作模式。如：\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"rsync -a /data /backup\")])]), _vm._v(\" \"), _c('li', [_vm._v(\"使用一个远程shell程序(如\"), _c('a', {\n    attrs: {\n      \"href\": \"#/rsh\",\n      \"title\": \"rsh命令\"\n    }\n  }, [_vm._v(\"rsh\")]), _vm._v(\"、\"), _c('a', {\n    attrs: {\n      \"href\": \"#/ssh\",\n      \"title\": \"ssh命令\"\n    }\n  }, [_vm._v(\"ssh\")]), _vm._v(\")来实现将本地机器的内容拷贝到远程机器。当DST路径地址包含单个冒号\\\":\\\"分隔符时启动该模式。如：\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"rsync -avz *.c foo:src\")])]), _vm._v(\" \"), _c('li', [_vm._v(\"使用一个远程shell程序(如rsh、ssh)来实现将远程机器的内容拷贝到本地机器。当SRC地址路径包含单个冒号\\\":\\\"分隔符时启动该模式。如：\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"rsync -avz foo:src/bar /data\")])]), _vm._v(\" \"), _c('li', [_vm._v(\"从远程rsync服务器中拷贝文件到本地机。当SRC路径信息包含\\\"::\\\"分隔符时启动该模式。如：\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"rsync -av root@192.168.78.192::www /databack\")])]), _vm._v(\" \"), _c('li', [_vm._v(\"从本地机器拷贝文件到远程rsync服务器中。当DST路径信息包含\\\"::\\\"分隔符时启动该模式。如：\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"rsync -av /databack root@192.168.78.192::www\")])]), _vm._v(\" \"), _c('li', [_vm._v(\"列远程机的文件列表。这类似于rsync传输，不过只要在命令中省略掉本地机信息即可。如：\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"rsync -v rsync://192.168.78.192/www\")])])]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-v, --verbose 详细模式输出。\\n-q, --quiet 精简输出模式。\\n-c, --checksum 打开校验开关，强制对文件传输进行校验。\\n-a, --archive 归档模式，表示以递归方式传输文件，并保持所有文件属性，等于-rlptgoD。\\n-r, --recursive 对子目录以递归模式处理。\\n-R, --relative 使用相对路径信息。\\n-b, --backup 创建备份，也就是对于目的已经存在有同样的文件名时，将老的文件重新命名为~filename。可以使用--suffix选项来指定不同的备份文件前缀。\\n--backup-dir 将备份文件(如~filename)存放在在目录下。\\n-suffix=SUFFIX 定义备份文件前缀。\\n-u, --update 仅仅进行更新，也就是跳过所有已经存在于DST，并且文件时间晚于要备份的文件，不覆盖更新的文件。\\n-l, --links 保留软链结。\\n-L, --copy-links 想对待常规文件一样处理软链结。\\n--copy-unsafe-links 仅仅拷贝指向SRC路径目录树以外的链结。\\n--safe-links 忽略指向SRC路径目录树以外的链结。\\n-H, --hard-links 保留硬链结。\\n-p, --perms 保持文件权限。\\n-o, --owner 保持文件属主信息。\\n-g, --group 保持文件属组信息。\\n-D, --devices 保持设备文件信息。\\n-t, --times 保持文件时间信息。\\n-S, --sparse 对稀疏文件进行特殊处理以节省DST的空间。\\n-n, --dry-run现实哪些文件将被传输。\\n-[w](#/w \\\"w命令\\\"), --whole-[file](#/file \\\"file命令\\\") 拷贝文件，不进行增量检测。\\n-x, --one-file-system 不要跨越文件系统边界。\\n-B, --block-size=SIZE 检验算法使用的块尺寸，默认是700字节。\\n-e, --rsh=[command](#/command \\\"command命令\\\") 指定使用rsh、ssh方式进行数据同步。\\n--rsync-path=PATH 指定远程服务器上的rsync命令所在路径信息。\\n-C, --cvs-exclude 使用和CVS一样的方法自动忽略文件，用来排除那些不希望传输的文件。\\n--existing 仅仅更新那些已经存在于DST的文件，而不备份那些新创建的文件。\\n--delete 删除那些DST中SRC没有的文件。\\n--delete-excluded 同样删除接收端那些被该选项指定排除的文件。\\n--delete-after 传输结束以后再删除。\\n--ignore-errors 及时出现IO错误也进行删除。\\n--max-delete=NUM 最多删除NUM个文件。\\n--partial 保留那些因故没有完全传输的文件，以是加快随后的再次传输。\\n--force 强制删除目录，即使不为空。\\n--numeric-ids 不将数字的用户和组[id](#/id \\\"id命令\\\")匹配为用户名和组名。\\n--timeout=[time](#/time \\\"time命令\\\") [ip](#/ip \\\"ip命令\\\")超时时间，单位为秒。\\n-I, --ignore-times 不跳过那些有同样的时间和长度的文件。\\n--size-only 当决定是否要备份文件时，仅仅察看文件大小而不考虑文件时间。\\n--modify-window=NUM 决定文件是否时间相同时使用的时间戳窗口，默认为0。\\n-T --temp-dir=DIR 在DIR中创建临时文件。\\n--compare-dest=DIR 同样比较DIR中的文件来决定是否需要备份。\\n-P 等同于 --partial。\\n--progress 显示备份过程。\\n-z, --[compress](#/compress \\\"compress命令\\\") 对备份的文件在传输时进行压缩处理。\\n--exclude=PATTERN 指定排除不需要传输的文件模式。\\n--include=PATTERN 指定不排除而需要传输的文件模式。\\n--exclude-from=FILE 排除FILE中指定模式的文件。\\n--include-from=FILE 不排除FILE指定模式匹配的文件。\\n--version 打印版本信息。\\n--address 绑定到特定的地址。\\n--config=FILE 指定其他的配置文件，不使用默认的rsyncd.conf文件。\\n--port=PORT 指定其他的rsync服务端口。\\n--blocking-io 对远程shell使用阻塞IO。\\n-stats 给出某些文件的传输状态。\\n--progress 在传输时现实传输过程。\\n--log-format=formAT 指定日志文件格式。\\n--password-file=FILE 从FILE中得到密码。\\n--bwlimit=KBPS 限制I/O带宽，KBytes per second。\\n-h, --[help](#/help \\\"help命令\\\") 显示帮助信息。\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"SSH方式\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"首先在服务端启动ssh服务：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[service](#/service \\\"service命令\\\") [sshd](#/sshd \\\"sshd命令\\\") start\\n启动 sshd： [确定]\\n\")])]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"使用rsync进行同步\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"接下来就可以在客户端使用rsync命令来备份服务端上的数据了，SSH方式是通过系统用户来进行备份的，如下：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"rsync -vzrtopg --progress -e ssh --delete work@172.16.78.192:/www/* /databack/experiment/rsync\\nwork@172.16.78.192's password:\\nreceiving file list ...\\n5 files to consider\\n[test](#/test \\\"test命令\\\")/\\na\\n0 100% 0.00kB/s 527:35:41 (1, 20.0% of 5)\\nb\\n67 100% 65.43kB/s 0:00:00 (2, 40.0% of 5)\\nc\\n0 100% 0.00kB/s 527:35:41 (3, 60.0% of 5)\\n[dd](#/dd \\\"dd命令\\\")\\n100663296 100% 42.22MB/s 0:00:02 (4, 80.0% of 5)\\nsent 96 bytes received 98190 bytes 11563.06 bytes/sec\\ntotal size is 100663363 speedup is 1024.19\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"上面的信息描述了整个的备份过程，以及总共备份数据的大小。\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"后台服务方式\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"启动rsync服务，编辑\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"/etc/xinetd.d/rsync\")]), _vm._v(\"文件，将其中的\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"disable=[yes](#/yes \\\"yes命令\\\")\")]), _vm._v(\"改为\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"disable=no\")]), _vm._v(\"，并重启xinetd服务，如下：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[vi](#/vi \\\"vi命令\\\") /etc/xinetd.d/rsync\\n\\n#default: off\\n# description: The rsync server is a good addition to an [ftp](#/ftp \\\"ftp命令\\\") server, [as](#/as \\\"as命令\\\") it \\\\\\n# allows crc checksumming etc.\\nservice rsync {\\ndisable = no\\nsocket_type = stream\\n[wait](#/wait \\\"wait命令\\\") = no\\nuser = root\\nserver = /usr/bin/rsync\\nserver_args = --daemon\\nlog_on_failure += USERID\\n}\\n\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"/etc/[init](#/init \\\"init命令\\\").d/xinetd restart\\n停止 xinetd： [确定]\\n启动 xinetd： [确定]\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"创建配置文件，默认安装好rsync程序后，并不会自动创建rsync的主配置文件，需要手工来创建，其主配置文件为“/etc/rsyncd.conf”，创建该文件并插入如下内容：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"vi /etc/rsyncd.conf\\n\\nuid=root\\ngid=root\\nmax connections=4\\nlog file=/var/log/rsyncd.log\\npid file=/var/run/rsyncd.pid\\nlock file=/var/run/rsyncd.lock\\nsecrets file=/etc/rsyncd.[passwd](#/passwd \\\"passwd命令\\\")\\nhosts deny=172.16.78.0/22\\n\\n[www]\\ncomment= backup web\\npath=/www\\n[read](#/read \\\"read命令\\\") only = no\\nexclude=test\\nauth [users](#/users \\\"users命令\\\")=work\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"创建密码文件，采用这种方式不能使用系统用户对客户端进行认证，所以需要创建一个密码文件，其格式为“username:password”，用户名可以和密码可以随便定义，最好不要和系统帐户一致，同时要把创建的密码文件权限设置为600，这在前面的模块参数做了详细介绍。\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[echo](#/echo \\\"echo命令\\\") \\\"work:abc123\\\" > /etc/rsyncd.passwd\\n[chmod](#/chmod \\\"chmod命令\\\") 600 /etc/rsyncd.passwd\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"备份，完成以上工作，现在就可以对数据进行备份了，如下：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"rsync -avz --progress --delete work@172.16.78.192::www /databack/experiment/rsync\\n\\nPassword:\\nreceiving file list ...\\n6 files to consider\\n./ files...\\na\\n0 100% 0.00kB/s 528:20:41 (1, 50.0% of 6)\\nb\\n67 100% 65.43kB/s 0:00:00 (2, 66.7% of 6)\\nc\\n0 100% 0.00kB/s 528:20:41 (3, 83.3% of 6)\\ndd\\n100663296 100% 37.49MB/s 0:00:02 (4, 100.0% of 6)\\nsent 172 bytes received 98276 bytes 17899.64 bytes/sec\\ntotal size is 150995011 speedup is 1533.75\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"恢复，当服务器的数据出现问题时，那么这时就需要通过客户端的数据对服务端进行恢复，但前提是服务端允许客户端有写入权限，否则也不能在客户端直接对服务端进行恢复，使用rsync对数据进行恢复的方法如下：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"rsync -avz --progress /databack/experiment/rsync/ work@172.16.78.192::www\\n\\nPassword:\\nbuilding file list ...\\n6 files to consider\\n./\\na\\nb\\n67 100% 0.00kB/s 0:00:00 (2, 66.7% of 6)\\nc\\nsent 258 bytes received 76 bytes 95.43 bytes/sec\\ntotal size is 150995011 speedup is 452080.87\\n\")])])])\n}]}\n\n/***/ }),\n\n/***/ 405:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(993);\n\n/***/ }),\n\n/***/ 993:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(5)(\n  /* script */\n  null,\n  /* template */\n  __webpack_require__(1240),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/150.62c26f7f83b944f397ec.js","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"rsync命令\")]), _vm._v(\"是一个远程数据同步工具，可通过LAN/WAN快速同步多台主机间的文件。rsync使用所谓的“rsync算法”来使本地和远程两个主机之间的文件达到同步，这个算法只传送两个文件的不同部分，而不是每次都整份传送，因此速度相当快。 rsync是一个功能非常强大的工具，其命令也有很多功能特色选项，我们下面就对它的选项一一进行分析说明。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"rsync [OPTION]... SRC DEST\\nrsync [OPTION]... SRC [USER@][host](#/host \\\"host命令\\\"):DEST\\nrsync [OPTION]... [USER@]HOST:SRC DEST\\nrsync [OPTION]... [USER@]HOST::SRC DEST\\nrsync [OPTION]... SRC [USER@]HOST::DEST\\nrsync [OPTION]... rsync://[USER@]HOST[:PORT]/SRC [DEST]\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"对应于以上六种命令格式，rsync有六种不同的工作模式：\")]), _vm._v(\" \"), _c('ol', [_c('li', [_vm._v(\"拷贝本地文件。当SRC和DES路径信息都不包含有单个冒号\\\":\\\"分隔符时就启动这种工作模式。如：\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"rsync -a /data /backup\")])]), _vm._v(\" \"), _c('li', [_vm._v(\"使用一个远程shell程序(如\"), _c('a', {\n    attrs: {\n      \"href\": \"#/rsh\",\n      \"title\": \"rsh命令\"\n    }\n  }, [_vm._v(\"rsh\")]), _vm._v(\"、\"), _c('a', {\n    attrs: {\n      \"href\": \"#/ssh\",\n      \"title\": \"ssh命令\"\n    }\n  }, [_vm._v(\"ssh\")]), _vm._v(\")来实现将本地机器的内容拷贝到远程机器。当DST路径地址包含单个冒号\\\":\\\"分隔符时启动该模式。如：\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"rsync -avz *.c foo:src\")])]), _vm._v(\" \"), _c('li', [_vm._v(\"使用一个远程shell程序(如rsh、ssh)来实现将远程机器的内容拷贝到本地机器。当SRC地址路径包含单个冒号\\\":\\\"分隔符时启动该模式。如：\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"rsync -avz foo:src/bar /data\")])]), _vm._v(\" \"), _c('li', [_vm._v(\"从远程rsync服务器中拷贝文件到本地机。当SRC路径信息包含\\\"::\\\"分隔符时启动该模式。如：\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"rsync -av root@192.168.78.192::www /databack\")])]), _vm._v(\" \"), _c('li', [_vm._v(\"从本地机器拷贝文件到远程rsync服务器中。当DST路径信息包含\\\"::\\\"分隔符时启动该模式。如：\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"rsync -av /databack root@192.168.78.192::www\")])]), _vm._v(\" \"), _c('li', [_vm._v(\"列远程机的文件列表。这类似于rsync传输，不过只要在命令中省略掉本地机信息即可。如：\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"rsync -v rsync://192.168.78.192/www\")])])]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-v, --verbose 详细模式输出。\\n-q, --quiet 精简输出模式。\\n-c, --checksum 打开校验开关，强制对文件传输进行校验。\\n-a, --archive 归档模式，表示以递归方式传输文件，并保持所有文件属性，等于-rlptgoD。\\n-r, --recursive 对子目录以递归模式处理。\\n-R, --relative 使用相对路径信息。\\n-b, --backup 创建备份，也就是对于目的已经存在有同样的文件名时，将老的文件重新命名为~filename。可以使用--suffix选项来指定不同的备份文件前缀。\\n--backup-dir 将备份文件(如~filename)存放在在目录下。\\n-suffix=SUFFIX 定义备份文件前缀。\\n-u, --update 仅仅进行更新，也就是跳过所有已经存在于DST，并且文件时间晚于要备份的文件，不覆盖更新的文件。\\n-l, --links 保留软链结。\\n-L, --copy-links 想对待常规文件一样处理软链结。\\n--copy-unsafe-links 仅仅拷贝指向SRC路径目录树以外的链结。\\n--safe-links 忽略指向SRC路径目录树以外的链结。\\n-H, --hard-links 保留硬链结。\\n-p, --perms 保持文件权限。\\n-o, --owner 保持文件属主信息。\\n-g, --group 保持文件属组信息。\\n-D, --devices 保持设备文件信息。\\n-t, --times 保持文件时间信息。\\n-S, --sparse 对稀疏文件进行特殊处理以节省DST的空间。\\n-n, --dry-run现实哪些文件将被传输。\\n-[w](#/w \\\"w命令\\\"), --whole-[file](#/file \\\"file命令\\\") 拷贝文件，不进行增量检测。\\n-x, --one-file-system 不要跨越文件系统边界。\\n-B, --block-size=SIZE 检验算法使用的块尺寸，默认是700字节。\\n-e, --rsh=[command](#/command \\\"command命令\\\") 指定使用rsh、ssh方式进行数据同步。\\n--rsync-path=PATH 指定远程服务器上的rsync命令所在路径信息。\\n-C, --cvs-exclude 使用和CVS一样的方法自动忽略文件，用来排除那些不希望传输的文件。\\n--existing 仅仅更新那些已经存在于DST的文件，而不备份那些新创建的文件。\\n--delete 删除那些DST中SRC没有的文件。\\n--delete-excluded 同样删除接收端那些被该选项指定排除的文件。\\n--delete-after 传输结束以后再删除。\\n--ignore-errors 及时出现IO错误也进行删除。\\n--max-delete=NUM 最多删除NUM个文件。\\n--partial 保留那些因故没有完全传输的文件，以是加快随后的再次传输。\\n--force 强制删除目录，即使不为空。\\n--numeric-ids 不将数字的用户和组[id](#/id \\\"id命令\\\")匹配为用户名和组名。\\n--timeout=[time](#/time \\\"time命令\\\") [ip](#/ip \\\"ip命令\\\")超时时间，单位为秒。\\n-I, --ignore-times 不跳过那些有同样的时间和长度的文件。\\n--size-only 当决定是否要备份文件时，仅仅察看文件大小而不考虑文件时间。\\n--modify-window=NUM 决定文件是否时间相同时使用的时间戳窗口，默认为0。\\n-T --temp-dir=DIR 在DIR中创建临时文件。\\n--compare-dest=DIR 同样比较DIR中的文件来决定是否需要备份。\\n-P 等同于 --partial。\\n--progress 显示备份过程。\\n-z, --[compress](#/compress \\\"compress命令\\\") 对备份的文件在传输时进行压缩处理。\\n--exclude=PATTERN 指定排除不需要传输的文件模式。\\n--include=PATTERN 指定不排除而需要传输的文件模式。\\n--exclude-from=FILE 排除FILE中指定模式的文件。\\n--include-from=FILE 不排除FILE指定模式匹配的文件。\\n--version 打印版本信息。\\n--address 绑定到特定的地址。\\n--config=FILE 指定其他的配置文件，不使用默认的rsyncd.conf文件。\\n--port=PORT 指定其他的rsync服务端口。\\n--blocking-io 对远程shell使用阻塞IO。\\n-stats 给出某些文件的传输状态。\\n--progress 在传输时现实传输过程。\\n--log-format=formAT 指定日志文件格式。\\n--password-file=FILE 从FILE中得到密码。\\n--bwlimit=KBPS 限制I/O带宽，KBytes per second。\\n-h, --[help](#/help \\\"help命令\\\") 显示帮助信息。\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"SSH方式\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"首先在服务端启动ssh服务：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[service](#/service \\\"service命令\\\") [sshd](#/sshd \\\"sshd命令\\\") start\\n启动 sshd： [确定]\\n\")])]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"使用rsync进行同步\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"接下来就可以在客户端使用rsync命令来备份服务端上的数据了，SSH方式是通过系统用户来进行备份的，如下：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"rsync -vzrtopg --progress -e ssh --delete work@172.16.78.192:/www/* /databack/experiment/rsync\\nwork@172.16.78.192's password:\\nreceiving file list ...\\n5 files to consider\\n[test](#/test \\\"test命令\\\")/\\na\\n0 100% 0.00kB/s 527:35:41 (1, 20.0% of 5)\\nb\\n67 100% 65.43kB/s 0:00:00 (2, 40.0% of 5)\\nc\\n0 100% 0.00kB/s 527:35:41 (3, 60.0% of 5)\\n[dd](#/dd \\\"dd命令\\\")\\n100663296 100% 42.22MB/s 0:00:02 (4, 80.0% of 5)\\nsent 96 bytes received 98190 bytes 11563.06 bytes/sec\\ntotal size is 100663363 speedup is 1024.19\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"上面的信息描述了整个的备份过程，以及总共备份数据的大小。\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"后台服务方式\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"启动rsync服务，编辑\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"/etc/xinetd.d/rsync\")]), _vm._v(\"文件，将其中的\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"disable=[yes](#/yes \\\"yes命令\\\")\")]), _vm._v(\"改为\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"disable=no\")]), _vm._v(\"，并重启xinetd服务，如下：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[vi](#/vi \\\"vi命令\\\") /etc/xinetd.d/rsync\\n\\n#default: off\\n# description: The rsync server is a good addition to an [ftp](#/ftp \\\"ftp命令\\\") server, [as](#/as \\\"as命令\\\") it \\\\\\n# allows crc checksumming etc.\\nservice rsync {\\ndisable = no\\nsocket_type = stream\\n[wait](#/wait \\\"wait命令\\\") = no\\nuser = root\\nserver = /usr/bin/rsync\\nserver_args = --daemon\\nlog_on_failure += USERID\\n}\\n\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"/etc/[init](#/init \\\"init命令\\\").d/xinetd restart\\n停止 xinetd： [确定]\\n启动 xinetd： [确定]\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"创建配置文件，默认安装好rsync程序后，并不会自动创建rsync的主配置文件，需要手工来创建，其主配置文件为“/etc/rsyncd.conf”，创建该文件并插入如下内容：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"vi /etc/rsyncd.conf\\n\\nuid=root\\ngid=root\\nmax connections=4\\nlog file=/var/log/rsyncd.log\\npid file=/var/run/rsyncd.pid\\nlock file=/var/run/rsyncd.lock\\nsecrets file=/etc/rsyncd.[passwd](#/passwd \\\"passwd命令\\\")\\nhosts deny=172.16.78.0/22\\n\\n[www]\\ncomment= backup web\\npath=/www\\n[read](#/read \\\"read命令\\\") only = no\\nexclude=test\\nauth [users](#/users \\\"users命令\\\")=work\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"创建密码文件，采用这种方式不能使用系统用户对客户端进行认证，所以需要创建一个密码文件，其格式为“username:password”，用户名可以和密码可以随便定义，最好不要和系统帐户一致，同时要把创建的密码文件权限设置为600，这在前面的模块参数做了详细介绍。\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[echo](#/echo \\\"echo命令\\\") \\\"work:abc123\\\" > /etc/rsyncd.passwd\\n[chmod](#/chmod \\\"chmod命令\\\") 600 /etc/rsyncd.passwd\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"备份，完成以上工作，现在就可以对数据进行备份了，如下：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"rsync -avz --progress --delete work@172.16.78.192::www /databack/experiment/rsync\\n\\nPassword:\\nreceiving file list ...\\n6 files to consider\\n./ files...\\na\\n0 100% 0.00kB/s 528:20:41 (1, 50.0% of 6)\\nb\\n67 100% 65.43kB/s 0:00:00 (2, 66.7% of 6)\\nc\\n0 100% 0.00kB/s 528:20:41 (3, 83.3% of 6)\\ndd\\n100663296 100% 37.49MB/s 0:00:02 (4, 100.0% of 6)\\nsent 172 bytes received 98276 bytes 17899.64 bytes/sec\\ntotal size is 150995011 speedup is 1533.75\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"恢复，当服务器的数据出现问题时，那么这时就需要通过客户端的数据对服务端进行恢复，但前提是服务端允许客户端有写入权限，否则也不能在客户端直接对服务端进行恢复，使用rsync对数据进行恢复的方法如下：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"rsync -avz --progress /databack/experiment/rsync/ work@172.16.78.192::www\\n\\nPassword:\\nbuilding file list ...\\n6 files to consider\\n./\\na\\nb\\n67 100% 0.00kB/s 0:00:00 (2, 66.7% of 6)\\nc\\nsent 258 bytes received 76 bytes 95.43 bytes/sec\\ntotal size is 150995011 speedup is 452080.87\\n\")])])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-214c85cf\",\"hasScoped\":false}!./~/vue-loader/lib/selector.js?type=template&index=0!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/rsync.md\n// module id = 1240\n// module chunks = 150","module.exports = require(\"!!vue-loader!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./rsync.md\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./command/rsync.md\n// module id = 405\n// module chunks = 150","var Component = require(\"!../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  null,\n  /* template */\n  require(\"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-214c85cf\\\",\\\"hasScoped\\\":false}!../node_modules/vue-loader/lib/selector?type=template&index=0!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./rsync.md\"),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/rsync.md\n// module id = 993\n// module chunks = 150"],"sourceRoot":""}