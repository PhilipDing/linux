webpackJsonp([251],{1211:function(e,r){e.exports={render:function(){var e=this,r=e.$createElement;e._self._c;return e._m(0)},staticRenderFns:[function(){var e=this,r=e.$createElement,v=e._self._c||r;return v("section",[v("p",[v("strong",[e._v("modprobe命令")]),e._v("用于智能地向内核中加载模块或者从内核中移除模块。")]),e._v(" "),v("p",[e._v("modprobe可载入指定的个别模块，或是载入一组相依的模块。modprobe会根据"),v("a",{attrs:{href:"#/depmod",title:"depmod命令"}},[e._v("depmod")]),e._v("所产生的相依关系，决定要载入哪些模块。若在载入过程中发生错误，在modprobe会卸载整组的模块。")]),e._v(" "),v("h3",[e._v("语法")]),e._v(" "),v("pre",{pre:!0},[v("code",{attrs:{"v-pre":""}},[e._v("modprobe(选项)(参数)\n")])]),e._v(" "),v("h3",[e._v("选项")]),e._v(" "),v("pre",{pre:!0},[v("code",{attrs:{"v-pre":""}},[e._v('-a或--all：载入全部的模块；\n-c或--show-conf：显示所有模块的设置信息；\n-d或--debug：使用排错模式；\n-l或--list：显示可用的模块；\n-r或--remove：模块闲置不用时，即自动卸载模块；\n-t或--[type](#/type "type命令")：指定模块类型；\n-v或--verbose：执行时显示详细的信息；\n-V或--version：显示版本信息；\n-[help](#/help "help命令")：显示帮助。\n')])]),e._v(" "),v("h3",[e._v("参数")]),e._v(" "),v("p",[e._v("模块名：要加载或移除的模块名称。")]),e._v(" "),v("h3",[e._v("实例")]),e._v(" "),v("p",[v("strong",[e._v("查看modules的配置文件：")])]),e._v(" "),v("pre",{pre:!0},[v("code",{attrs:{"v-pre":""}},[e._v("modprobe -c\n")])]),e._v(" "),v("p",[e._v("这里，可以查看modules的配置文件，比如模块的"),v("a",{attrs:{href:"#/alias",title:"alias命令"}},[e._v("alias")]),e._v("别名是什么等。会打印许多行信息，例如其中的一行会类似如下：")]),e._v(" "),v("pre",{pre:!0},[v("code",{attrs:{"v-pre":""}},[e._v("alias symbol:ip_conntrack_unregister_notifier ip_conntrack\n")])]),e._v(" "),v("p",[v("strong",[e._v("列出内核中所有已经或者未挂载的所有模块：")])]),e._v(" "),v("pre",{pre:!0},[v("code",{attrs:{"v-pre":""}},[e._v("modprobe -l\n")])]),e._v(" "),v("p",[e._v("这里，我们能查看到我们所需要的模块，然后根据我们的需要来挂载；其实"),v("code",{pre:!0},[e._v("modprobe -l")]),e._v("读取的模块列表就位于"),v("code",{pre:!0},[e._v("/lib/modules/")]),v("a",{attrs:{href:"#/uname",title:"uname命令"}},[e._v("uname")]),e._v(" -r``目录中；其中"),v("code",{pre:!0},[e._v("uname -r")]),e._v("是内核的版本，例如输出结果的其中一行是：")]),e._v(" "),v("pre",{pre:!0},[v("code",{attrs:{"v-pre":""}},[e._v("/lib/modules/2.6.18-348.6.1.el5/kernel/net/netfilter/xt_statistic.ko\n")])]),e._v(" "),v("p",[v("strong",[e._v("挂载vfat模块：")])]),e._v(" "),v("pre",{pre:!0},[v("code",{attrs:{"v-pre":""}},[e._v("modprobe vfat\n")])]),e._v(" "),v("p",[e._v("这里，使用格式"),v("code",{pre:!0},[e._v("modprobe 模块名")]),e._v("来挂载一个模块。挂载之后，用"),v("a",{attrs:{href:"#/lsmod",title:"lsmod命令"}},[e._v("lsmod")]),e._v("可以查看已经挂载的模块。模块名是不能带有后缀的，我们通过"),v("code",{pre:!0},[e._v("modprobe -l")]),e._v("所看到的模块，都是带有"),v("code",{pre:!0},[e._v(".ko")]),e._v("或"),v("code",{pre:!0},[e._v(".o")]),e._v("后缀。")]),e._v(" "),v("p",[v("strong",[e._v("移除已经加载的模块：")])]),e._v(" "),v("pre",{pre:!0},[v("code",{attrs:{"v-pre":""}},[e._v("modprobe -r 模块名\n")])]),e._v(" "),v("p",[e._v("这里，移除已加载的模块，和"),v("a",{attrs:{href:"#/rmmod",title:"rmmod命令"}},[e._v("rmmod")]),e._v("功能相同。")])])}]}},301:function(e,r,v){e.exports=v(890)},890:function(e,r,v){var o=v(5)(null,v(1211),null,null,null);e.exports=o.exports}});
//# sourceMappingURL=251.ec05c2891da435ca946d.js.map