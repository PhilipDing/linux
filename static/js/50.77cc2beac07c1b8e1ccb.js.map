{"version":3,"sources":["webpack:///static/js/50.77cc2beac07c1b8e1ccb.js","webpack:///./command/vgconvert.md?4b4b","webpack:///./command/vgconvert.md?7484","webpack:///./command/vgconvert.md"],"names":["webpackJsonp","1095","module","exports","__webpack_require__","Component","1401","render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","_v","pre","attrs","v-pre","href","title","506"],"mappings":"AAAAA,cAAc,KAERC,KACA,SAAUC,EAAQC,EAASC,GCHjC,GAAAC,GAAAD,EAAA,GAEA,KAEAA,EAAA,MAEA,KAEA,KAEA,KAGAF,GAAAC,QAAAE,EAAAF,SDUMG,KACA,SAAUJ,EAAQC,GExBxBD,EAAAC,SAAgBI,OAAA,WAAmB,GAAAC,GAAAC,KAAaC,EAAAF,EAAAG,cAA0BH,GAAAI,MAAAC,EAC1E,OAAAL,GAAAM,GAAA,IACCC,iBAAA,WAA+B,GAAAP,GAAAC,KAAaC,EAAAF,EAAAG,eAA0BE,EAAAL,EAAAI,MAAAC,IAAAH,CACvE,OAAAG,GAAA,WAAAA,EAAA,KAAAA,EAAA,UAAAL,EAAAQ,GAAA,iBAAAR,EAAAQ,GAAA,mFAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACAI,KAAA,IACGJ,EAAA,QACHK,OACAC,QAAA,MAEGX,EAAAQ,GAAA,2BAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHI,KAAA,IACGJ,EAAA,QACHK,OACAC,QAAA,MAEGX,EAAAQ,GAAA,sBAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,oBAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,iBAAAH,EAAA,KACHK,OACAE,KAAA,aACAC,MAAA,gBAEGb,EAAAQ,GAAA,cAAAR,EAAAQ,GAAA,iCAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHI,KAAA,IACGJ,EAAA,QACHK,OACAC,QAAA,MAEGX,EAAAQ,GAAA,gIAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,gEAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHI,KAAA,IACGJ,EAAA,QACHK,OACAC,QAAA,MAEGX,EAAAQ,GAAA,kHAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,0CAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHI,KAAA,IACGJ,EAAA,QACHK,OACAC,QAAA,MAEGX,EAAAQ,GAAA,mIF+BGM,IACA,SAAUpB,EAAQC,EAASC,GGtEjCF,EAAAC,QAAAC,EAAA","file":"static/js/50.77cc2beac07c1b8e1ccb.js","sourcesContent":["webpackJsonp([50],{\n\n/***/ 1095:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(5)(\n  /* script */\n  null,\n  /* template */\n  __webpack_require__(1401),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 1401:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"vgconvert命令\")]), _vm._v(\"用于转换指定LVM卷组的元数据格式，通常将“LVM1”格式的卷组转换为“LVM2”格式。转换卷组元数据前必须保证卷组处于非活动状态，否则无法完成转换操作。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"vgconvert(选项)(参数)\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-M：要转换的卷组格式。\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"参数\")]), _vm._v(\" \"), _c('p', [_vm._v(\"卷组：指定要转换格式的卷组。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('p', [_vm._v(\"转换卷组元数据格式前，使用\"), _c('a', {\n    attrs: {\n      \"href\": \"#/vgchange\",\n      \"title\": \"vgchange命令\"\n    }\n  }, [_vm._v(\"vgchange\")]), _vm._v(\"命令将卷组设置为非活动状态。在命令行中输入下面的命令：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost lvm]# vgchange -an vg1000    #设置卷组状态为非活动状态\\n0 logical volume(s) in volume group \\\"vg1000\\\" now active \\n\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"使用vgconvert命令将卷组\\\"vg1000\\\"从\\\"LVM1\\\"格式转换为\\\"LVM2\\\"格式。在命令行中输入下面的命令：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost lvm]# vgconvert -M2 vg1000    #转换卷组为\\\"LVM2\\\"格式\\nVolume group vg1000 successfully converted\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"使用vgchange命令将卷组设置为活动状态。在命令行中输入下面的命令：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost lvm]# vgchange -ay vg1000     #设置卷组状态为活动状态\\n0 logical volume(s) in volume group \\\"vg1000\\\" now active\\n\")])])])\n}]}\n\n/***/ }),\n\n/***/ 506:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(1095);\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/50.77cc2beac07c1b8e1ccb.js","var Component = require(\"!../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  null,\n  /* template */\n  require(\"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-51924c18\\\",\\\"hasScoped\\\":false}!../node_modules/vue-loader/lib/selector?type=template&index=0!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./vgconvert.md\"),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/vgconvert.md\n// module id = 1095\n// module chunks = 50","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"vgconvert命令\")]), _vm._v(\"用于转换指定LVM卷组的元数据格式，通常将“LVM1”格式的卷组转换为“LVM2”格式。转换卷组元数据前必须保证卷组处于非活动状态，否则无法完成转换操作。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"vgconvert(选项)(参数)\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-M：要转换的卷组格式。\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"参数\")]), _vm._v(\" \"), _c('p', [_vm._v(\"卷组：指定要转换格式的卷组。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('p', [_vm._v(\"转换卷组元数据格式前，使用\"), _c('a', {\n    attrs: {\n      \"href\": \"#/vgchange\",\n      \"title\": \"vgchange命令\"\n    }\n  }, [_vm._v(\"vgchange\")]), _vm._v(\"命令将卷组设置为非活动状态。在命令行中输入下面的命令：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost lvm]# vgchange -an vg1000    #设置卷组状态为非活动状态\\n0 logical volume(s) in volume group \\\"vg1000\\\" now active \\n\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"使用vgconvert命令将卷组\\\"vg1000\\\"从\\\"LVM1\\\"格式转换为\\\"LVM2\\\"格式。在命令行中输入下面的命令：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost lvm]# vgconvert -M2 vg1000    #转换卷组为\\\"LVM2\\\"格式\\nVolume group vg1000 successfully converted\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"使用vgchange命令将卷组设置为活动状态。在命令行中输入下面的命令：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost lvm]# vgchange -ay vg1000     #设置卷组状态为活动状态\\n0 logical volume(s) in volume group \\\"vg1000\\\" now active\\n\")])])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-51924c18\",\"hasScoped\":false}!./~/vue-loader/lib/selector.js?type=template&index=0!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/vgconvert.md\n// module id = 1401\n// module chunks = 50","module.exports = require(\"!!vue-loader!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./vgconvert.md\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./command/vgconvert.md\n// module id = 506\n// module chunks = 50"],"sourceRoot":""}