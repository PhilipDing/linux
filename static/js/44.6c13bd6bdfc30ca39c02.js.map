{"version":3,"sources":["webpack:///static/js/44.6c13bd6bdfc30ca39c02.js","webpack:///./command/vgscan.md?570a","webpack:///./command/vgscan.md?69de","webpack:///./command/vgscan.md"],"names":["webpackJsonp","1101","module","exports","__webpack_require__","Component","1561","render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","_v","attrs","href","title","pre","v-pre","512"],"mappings":"AAAAA,cAAc,KAERC,KACA,SAAUC,EAAQC,EAASC,GCHjC,GAAAC,GAAAD,EAAA,GAEA,KAEAA,EAAA,MAEA,KAEA,KAEA,KAGAF,GAAAC,QAAAE,EAAAF,SDUMG,KACA,SAAUJ,EAAQC,GExBxBD,EAAAC,SAAgBI,OAAA,WAAmB,GAAAC,GAAAC,KAAaC,EAAAF,EAAAG,cAA0BH,GAAAI,MAAAC,EAC1E,OAAAL,GAAAM,GAAA,IACCC,iBAAA,WAA+B,GAAAP,GAAAC,KAAaC,EAAAF,EAAAG,eAA0BE,EAAAL,EAAAI,MAAAC,IAAAH,CACvE,OAAAG,GAAA,WAAAA,EAAA,KAAAA,EAAA,UAAAL,EAAAQ,GAAA,cAAAR,EAAAQ,GAAA,wEAAAH,EAAA,KACAI,OACAC,KAAA,cACAC,MAAA,iBAEGX,EAAAQ,GAAA,eAAAR,EAAAQ,GAAA,SAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHO,KAAA,IACGP,EAAA,QACHI,OACAI,QAAA,MAEGb,EAAAQ,GAAA,oBAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHO,KAAA,IACGP,EAAA,QACHI,OACAI,QAAA,MAEGb,EAAAQ,GAAA,sDAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,wCAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHO,KAAA,IACGP,EAAA,QACHI,OACAI,QAAA,MAEGb,EAAAQ,GAAA,sDAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,aAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHO,KAAA,IACGP,EAAA,QACHI,OACAI,QAAA,MAEGb,EAAAQ,GAAA,0IAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,wDF+BGM,IACA,SAAUpB,EAAQC,EAASC,GGhEjCF,EAAAC,QAAAC,EAAA","file":"static/js/44.6c13bd6bdfc30ca39c02.js","sourcesContent":["webpackJsonp([44],{\n\n/***/ 1101:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(5)(\n  /* script */\n  null,\n  /* template */\n  __webpack_require__(1561),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 1561:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"vgscan命令\")]), _vm._v(\"查找系统中存在的LVM卷组，并显示找到的卷组列表。vgscan命令仅显示找到的卷组的名称和LVM元数据类型，要得到卷组的详细信息需要使用\"), _c('a', {\n    attrs: {\n      \"href\": \"#/vgdisplay\",\n      \"title\": \"vgdisplay命令\"\n    }\n  }, [_vm._v(\"vgdisplay\")]), _vm._v(\"命令。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"vgscan(选项)\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-d：调试模式；\\n--ignorerlockingfailure：忽略锁定失败的错误。\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('p', [_vm._v(\"使用vgscan命令扫描系统中所有的卷组。在命令行中输入下面的命令：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost ~]# vgscan     #扫描并显示LVM卷组列表\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"输出信息如下：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"Found volume group \\\"vg2000\\\" using metadata [type](#/type \\\"type命令\\\") lvm2  \\nFound volume group \\\"vg1000\\\" using metadata type lvm2 \\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"说明：本例中，vgscan指令找到了两个LVM2卷组\\\"vg1000\\\"和\\\"vg2000\\\"。\")])])\n}]}\n\n/***/ }),\n\n/***/ 512:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(1101);\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/44.6c13bd6bdfc30ca39c02.js","var Component = require(\"!../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  null,\n  /* template */\n  require(\"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-7e6ae002\\\",\\\"hasScoped\\\":false}!../node_modules/vue-loader/lib/selector?type=template&index=0!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./vgscan.md\"),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/vgscan.md\n// module id = 1101\n// module chunks = 44","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"vgscan命令\")]), _vm._v(\"查找系统中存在的LVM卷组，并显示找到的卷组列表。vgscan命令仅显示找到的卷组的名称和LVM元数据类型，要得到卷组的详细信息需要使用\"), _c('a', {\n    attrs: {\n      \"href\": \"#/vgdisplay\",\n      \"title\": \"vgdisplay命令\"\n    }\n  }, [_vm._v(\"vgdisplay\")]), _vm._v(\"命令。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"vgscan(选项)\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-d：调试模式；\\n--ignorerlockingfailure：忽略锁定失败的错误。\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('p', [_vm._v(\"使用vgscan命令扫描系统中所有的卷组。在命令行中输入下面的命令：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost ~]# vgscan     #扫描并显示LVM卷组列表\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"输出信息如下：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"Found volume group \\\"vg2000\\\" using metadata [type](#/type \\\"type命令\\\") lvm2  \\nFound volume group \\\"vg1000\\\" using metadata type lvm2 \\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"说明：本例中，vgscan指令找到了两个LVM2卷组\\\"vg1000\\\"和\\\"vg2000\\\"。\")])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-7e6ae002\",\"hasScoped\":false}!./~/vue-loader/lib/selector.js?type=template&index=0!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/vgscan.md\n// module id = 1561\n// module chunks = 44","module.exports = require(\"!!vue-loader!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./vgscan.md\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./command/vgscan.md\n// module id = 512\n// module chunks = 44"],"sourceRoot":""}