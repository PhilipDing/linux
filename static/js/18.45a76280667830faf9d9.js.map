{"version":3,"sources":["webpack:///static/js/18.45a76280667830faf9d9.js","webpack:///./command/yum.md?c3ed","webpack:///./command/yum.md?6b48","webpack:///./command/yum.md"],"names":["webpackJsonp","1128","module","exports","__webpack_require__","Component","1322","render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","_v","attrs","href","title","pre","v-pre","540"],"mappings":"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","file":"static/js/18.45a76280667830faf9d9.js","sourcesContent":["webpackJsonp([18],{\n\n/***/ 1128:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(5)(\n  /* script */\n  null,\n  /* template */\n  __webpack_require__(1322),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 1322:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"yum命令\")]), _vm._v(\"是在Fedora和RedHat以及SUSE中基于\"), _c('a', {\n    attrs: {\n      \"href\": \"#/rpm\",\n      \"title\": \"rpm命令\"\n    }\n  }, [_vm._v(\"rpm\")]), _vm._v(\"的软件包管理器，它可以使系统管理人员交互和自动化地更细与管理RPM软件包，能够从指定的服务器自动下载RPM包并且安装，可以自动处理依赖性关系，并且一次安装所有依赖的软体包，无须繁琐地一次次下载、安装。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"yum提供了查找、安装、删除某一个、一组甚至全部软件包的命令，而且命令简洁而又好记。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"yum(选项)(参数)\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-h：显示帮助信息；\\n-y：对所有的提问都回答“[yes](#/yes \\\"yes命令\\\")”；\\n-c：指定配置文件；\\n-q：安静模式；\\n-v：详细模式；\\n-d：设置调试等级（0-10）；\\n-e：设置错误等级（0-10）；\\n-R：设置yum处理一个命令的最大等待时间；\\n-C：完全从缓存中运行，而不去下载或者更新任何头文件。\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"参数\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[install](#/install \\\"install命令\\\")：安装rpm软件包；\\nupdate：更新rpm软件包；\\ncheck-update：检查是否有可用的更新rpm软件包；\\nremove：删除指定的rpm软件包；\\nlist：显示软件包的信息；\\nsearch：检查软件包的信息；\\n[info](#/info \\\"info命令\\\")：显示指定的rpm软件包的描述信息和概要信息；\\nclean：清理yum过期的缓存；\\nshell：进入yum的shell提示符；\\nresolvedep：显示rpm软件包的依赖关系；\\nlocalinstall：安装本地的rpm软件包；\\nlocalupdate：显示本地rpm软件包进行更新；\\ndeplist：显示rpm软件包的所有依赖关系。\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('p', [_vm._v(\"部分常用的命令包括：\")]), _vm._v(\" \"), _c('ul', [_c('li', [_vm._v(\"自动搜索最快镜像插件：\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"yum install yum-fastestmirror\")])]), _vm._v(\" \"), _c('li', [_vm._v(\"安装yum图形窗口插件：\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"yum install yumex\")])]), _vm._v(\" \"), _c('li', [_vm._v(\"查看可能批量安装的列表：\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"yum grouplist\")])])]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"安装\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"yum install              #全部安装\\nyum install package1     #安装指定的安装包package1\\nyum groupinsall group1   #安装程序组group1\\n\")])]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"更新和升级\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"yum update               #全部更新\\nyum update package1      #更新指定程序包package1\\nyum check-update         #检查可更新的程序\\nyum upgrade package1     #升级指定程序包package1\\nyum groupupdate group1   #升级程序组group1\\n\")])]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"查找和显示\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"yum info package1      #显示安装包信息package1\\nyum list               #显示所有已经安装和可以安装的程序包\\nyum list package1      #显示指定程序包安装情况package1\\nyum groupinfo group1   #显示程序组group1信息yum search string 根据关键字string查找安装包\\n\")])]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"删除程序\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"yum remove &#124; erase package1   #删除程序包package1\\nyum groupremove group1             #删除程序组group1\\nyum deplist package1               #查看程序package1依赖情况\\n\")])]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"清除缓存\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"yum clean packages       #清除缓存目录下的软件包\\nyum clean headers        #清除缓存目录下的 headers\\nyum clean oldheaders     #清除缓存目录下旧的 headers\\n\")])])])\n}]}\n\n/***/ }),\n\n/***/ 540:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(1128);\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/18.45a76280667830faf9d9.js","var Component = require(\"!../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  null,\n  /* template */\n  require(\"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-3804de4b\\\",\\\"hasScoped\\\":false}!../node_modules/vue-loader/lib/selector?type=template&index=0!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./yum.md\"),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/yum.md\n// module id = 1128\n// module chunks = 18","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"yum命令\")]), _vm._v(\"是在Fedora和RedHat以及SUSE中基于\"), _c('a', {\n    attrs: {\n      \"href\": \"#/rpm\",\n      \"title\": \"rpm命令\"\n    }\n  }, [_vm._v(\"rpm\")]), _vm._v(\"的软件包管理器，它可以使系统管理人员交互和自动化地更细与管理RPM软件包，能够从指定的服务器自动下载RPM包并且安装，可以自动处理依赖性关系，并且一次安装所有依赖的软体包，无须繁琐地一次次下载、安装。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"yum提供了查找、安装、删除某一个、一组甚至全部软件包的命令，而且命令简洁而又好记。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"yum(选项)(参数)\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-h：显示帮助信息；\\n-y：对所有的提问都回答“[yes](#/yes \\\"yes命令\\\")”；\\n-c：指定配置文件；\\n-q：安静模式；\\n-v：详细模式；\\n-d：设置调试等级（0-10）；\\n-e：设置错误等级（0-10）；\\n-R：设置yum处理一个命令的最大等待时间；\\n-C：完全从缓存中运行，而不去下载或者更新任何头文件。\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"参数\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[install](#/install \\\"install命令\\\")：安装rpm软件包；\\nupdate：更新rpm软件包；\\ncheck-update：检查是否有可用的更新rpm软件包；\\nremove：删除指定的rpm软件包；\\nlist：显示软件包的信息；\\nsearch：检查软件包的信息；\\n[info](#/info \\\"info命令\\\")：显示指定的rpm软件包的描述信息和概要信息；\\nclean：清理yum过期的缓存；\\nshell：进入yum的shell提示符；\\nresolvedep：显示rpm软件包的依赖关系；\\nlocalinstall：安装本地的rpm软件包；\\nlocalupdate：显示本地rpm软件包进行更新；\\ndeplist：显示rpm软件包的所有依赖关系。\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('p', [_vm._v(\"部分常用的命令包括：\")]), _vm._v(\" \"), _c('ul', [_c('li', [_vm._v(\"自动搜索最快镜像插件：\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"yum install yum-fastestmirror\")])]), _vm._v(\" \"), _c('li', [_vm._v(\"安装yum图形窗口插件：\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"yum install yumex\")])]), _vm._v(\" \"), _c('li', [_vm._v(\"查看可能批量安装的列表：\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"yum grouplist\")])])]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"安装\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"yum install              #全部安装\\nyum install package1     #安装指定的安装包package1\\nyum groupinsall group1   #安装程序组group1\\n\")])]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"更新和升级\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"yum update               #全部更新\\nyum update package1      #更新指定程序包package1\\nyum check-update         #检查可更新的程序\\nyum upgrade package1     #升级指定程序包package1\\nyum groupupdate group1   #升级程序组group1\\n\")])]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"查找和显示\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"yum info package1      #显示安装包信息package1\\nyum list               #显示所有已经安装和可以安装的程序包\\nyum list package1      #显示指定程序包安装情况package1\\nyum groupinfo group1   #显示程序组group1信息yum search string 根据关键字string查找安装包\\n\")])]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"删除程序\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"yum remove &#124; erase package1   #删除程序包package1\\nyum groupremove group1             #删除程序组group1\\nyum deplist package1               #查看程序package1依赖情况\\n\")])]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"清除缓存\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"yum clean packages       #清除缓存目录下的软件包\\nyum clean headers        #清除缓存目录下的 headers\\nyum clean oldheaders     #清除缓存目录下旧的 headers\\n\")])])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-3804de4b\",\"hasScoped\":false}!./~/vue-loader/lib/selector.js?type=template&index=0!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/yum.md\n// module id = 1322\n// module chunks = 18","module.exports = require(\"!!vue-loader!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./yum.md\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./command/yum.md\n// module id = 540\n// module chunks = 18"],"sourceRoot":""}