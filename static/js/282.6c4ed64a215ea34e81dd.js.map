{"version":3,"sources":["webpack:///static/js/282.6c4ed64a215ea34e81dd.js","webpack:///./command/lsblk.md?846f","webpack:///./command/lsblk.md","webpack:///./command/lsblk.md?8412"],"names":["webpackJsonp","1655","module","exports","render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","_v","attrs","href","title","pre","v-pre","271","__webpack_require__","859","Component"],"mappings":"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","file":"static/js/282.6c4ed64a215ea34e81dd.js","sourcesContent":["webpackJsonp([282],{\n\n/***/ 1655:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"lsblk命令\")]), _vm._v(\"用于列出所有可用块设备的信息，而且还能显示他们之间的依赖关系，但是它不会列出RAM盘的信息。块设备有硬盘，闪存盘，\"), _c('a', {\n    attrs: {\n      \"href\": \"#/cd\",\n      \"title\": \"cd命令\"\n    }\n  }, [_vm._v(\"cd\")]), _vm._v(\"-ROM等等。lsblk命令包含在util-linux-ng包中，现在该包改名为util-linux。这个包带了几个其它工具，如\"), _c('a', {\n    attrs: {\n      \"href\": \"#/dmesg\",\n      \"title\": \"dmesg命令\"\n    }\n  }, [_vm._v(\"dmesg\")]), _vm._v(\"。要安装lsblk，请在此处\"), _c('a', {\n    attrs: {\n      \"href\": \"ftp://ftp.kernel.org/pub/linux/utils/util-linux/\"\n    }\n  }, [_vm._v(\"下载util-linux包\")]), _vm._v(\"。Fedora用户可以通过命令\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"[sudo](#/sudo \\\"sudo命令\\\") [yum](#/yum \\\"yum命令\\\") [install](#/install \\\"install命令\\\") util-linux-ng\")]), _vm._v(\"来安装该包。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-a, --all            显示所有设备。\\n-b, --bytes          以bytes方式显示设备大小。\\n-d, --nodeps         不显示 slaves 或 holders。\\n-D, --discard        print discard capabilities。\\n-e, --exclude <list> 排除设备 (default: RAM disks)。\\n-f, --fs             显示文件系统信息。\\n-h, --[help](#/help \\\"help命令\\\")           显示帮助信息。\\n-i, --ascii          use ascii characters only。\\n-m, --perms          显示权限信息。\\n-l, --list           使用列表格式显示。\\n-n, --noheadings     不显示标题。\\n-o, --output <list>  输出列。\\n-P, --pairs          使用key=\\\"value\\\"格式显示。\\n-r, --raw            使用原始格式显示。\\n-t, --topology       显示拓扑结构信息。\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('p', [_vm._v(\"lsblk命令默认情况下将以树状列出所有块设备。打开终端，并输入以下命令：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"lsblk\\n\\nNAME   MAJ:MIN [rm](#/rm \\\"rm命令\\\")   SIZE RO [type](#/type \\\"type命令\\\") [mountpoint](#/mountpoint \\\"mountpoint命令\\\")\\nsda      8:0    0 232.9G  0 disk \\n├─sda1   8:1    0  46.6G  0 part /\\n├─sda2   8:2    0     1K  0 part \\n├─sda5   8:5    0   190M  0 part /boot\\n├─sda6   8:6    0   3.7G  0 part [SWAP]\\n├─sda7   8:7    0  93.1G  0 part /data\\n└─sda8   8:8    0  89.2G  0 part /personal\\nsr0     11:0    1  1024M  0 rom\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"7个栏目名称如下：\")]), _vm._v(\" \"), _c('ol', [_c('li', [_c('strong', [_vm._v(\"NAME\")]), _vm._v(\"：这是块设备名。\")]), _vm._v(\" \"), _c('li', [_c('strong', [_vm._v(\"MAJ:MIN\")]), _vm._v(\"：本栏显示主要和次要设备号。\")]), _vm._v(\" \"), _c('li', [_c('strong', [_vm._v(\"RM\")]), _vm._v(\"：本栏显示设备是否可移动设备。注意，在本例中设备sdb和sr0的RM值等于1，这说明他们是可移动设备。\")]), _vm._v(\" \"), _c('li', [_c('strong', [_vm._v(\"SIZE\")]), _vm._v(\"：本栏列出设备的容量大小信息。例如298.1G表明该设备大小为298.1GB，而1K表明该设备大小为1KB。\")]), _vm._v(\" \"), _c('li', [_c('strong', [_vm._v(\"RO\")]), _vm._v(\"：该项表明设备是否为只读。在本案例中，所有设备的RO值为0，表明他们不是只读的。\")]), _vm._v(\" \"), _c('li', [_c('strong', [_vm._v(\"TYPE\")]), _vm._v(\"：本栏显示块设备是否是磁盘或磁盘上的一个分区。在本例中，sda和sdb是磁盘，而sr0是只读存储（rom）。\")]), _vm._v(\" \"), _c('li', [_c('strong', [_vm._v(\"MOUNTPOINT\")]), _vm._v(\"：本栏指出设备挂载的挂载点。\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"默认选项不会列出所有空设备。要查看这些空设备，请使用以下命令：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"lsblk -a\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"lsblk命令也可以用于列出一个特定设备的拥有关系，同时也可以列出组和模式。可以通过以下命令来获取这些信息：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"lsblk -m\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"该命令也可以只获取指定设备的信息。这可以通过在提供给lsblk命令的选项后指定设备名来实现。例如，你可能对了解以字节显示你的磁盘驱动器大小比较感兴趣，那么你可以通过运行以下命令来实现：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"lsblk -b /dev/sda\\n\\n等价于\\n\\nlsblk --bytes /dev/sda\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"你也可以组合几个选项来获取指定的输出。例如，你也许想要以列表格式列出设备，而不是默认的树状格式。你可能也对移除不同栏目名称的标题感兴趣。可以将两个不同的选项组合，以获得期望的输出，命令如下：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"lsblk -[nl](#/nl \\\"nl命令\\\")\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"要获取SCSI设备的列表，你只能使用-S选项。该选项是大写字母S，不能和-s选项混淆，该选项是用来以颠倒的顺序打印依赖的。\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"lsblk -S\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"lsblk列出SCSI设备，而-s是逆序选项（将设备和分区的组织关系逆转过来显示），其将给出如下输出。输入命令：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"lsblk -s\\n\")])])])\n}]}\n\n/***/ }),\n\n/***/ 271:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(859);\n\n/***/ }),\n\n/***/ 859:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(5)(\n  /* script */\n  null,\n  /* template */\n  __webpack_require__(1655),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/282.6c4ed64a215ea34e81dd.js","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"lsblk命令\")]), _vm._v(\"用于列出所有可用块设备的信息，而且还能显示他们之间的依赖关系，但是它不会列出RAM盘的信息。块设备有硬盘，闪存盘，\"), _c('a', {\n    attrs: {\n      \"href\": \"#/cd\",\n      \"title\": \"cd命令\"\n    }\n  }, [_vm._v(\"cd\")]), _vm._v(\"-ROM等等。lsblk命令包含在util-linux-ng包中，现在该包改名为util-linux。这个包带了几个其它工具，如\"), _c('a', {\n    attrs: {\n      \"href\": \"#/dmesg\",\n      \"title\": \"dmesg命令\"\n    }\n  }, [_vm._v(\"dmesg\")]), _vm._v(\"。要安装lsblk，请在此处\"), _c('a', {\n    attrs: {\n      \"href\": \"ftp://ftp.kernel.org/pub/linux/utils/util-linux/\"\n    }\n  }, [_vm._v(\"下载util-linux包\")]), _vm._v(\"。Fedora用户可以通过命令\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"[sudo](#/sudo \\\"sudo命令\\\") [yum](#/yum \\\"yum命令\\\") [install](#/install \\\"install命令\\\") util-linux-ng\")]), _vm._v(\"来安装该包。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-a, --all            显示所有设备。\\n-b, --bytes          以bytes方式显示设备大小。\\n-d, --nodeps         不显示 slaves 或 holders。\\n-D, --discard        print discard capabilities。\\n-e, --exclude <list> 排除设备 (default: RAM disks)。\\n-f, --fs             显示文件系统信息。\\n-h, --[help](#/help \\\"help命令\\\")           显示帮助信息。\\n-i, --ascii          use ascii characters only。\\n-m, --perms          显示权限信息。\\n-l, --list           使用列表格式显示。\\n-n, --noheadings     不显示标题。\\n-o, --output <list>  输出列。\\n-P, --pairs          使用key=\\\"value\\\"格式显示。\\n-r, --raw            使用原始格式显示。\\n-t, --topology       显示拓扑结构信息。\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('p', [_vm._v(\"lsblk命令默认情况下将以树状列出所有块设备。打开终端，并输入以下命令：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"lsblk\\n\\nNAME   MAJ:MIN [rm](#/rm \\\"rm命令\\\")   SIZE RO [type](#/type \\\"type命令\\\") [mountpoint](#/mountpoint \\\"mountpoint命令\\\")\\nsda      8:0    0 232.9G  0 disk \\n├─sda1   8:1    0  46.6G  0 part /\\n├─sda2   8:2    0     1K  0 part \\n├─sda5   8:5    0   190M  0 part /boot\\n├─sda6   8:6    0   3.7G  0 part [SWAP]\\n├─sda7   8:7    0  93.1G  0 part /data\\n└─sda8   8:8    0  89.2G  0 part /personal\\nsr0     11:0    1  1024M  0 rom\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"7个栏目名称如下：\")]), _vm._v(\" \"), _c('ol', [_c('li', [_c('strong', [_vm._v(\"NAME\")]), _vm._v(\"：这是块设备名。\")]), _vm._v(\" \"), _c('li', [_c('strong', [_vm._v(\"MAJ:MIN\")]), _vm._v(\"：本栏显示主要和次要设备号。\")]), _vm._v(\" \"), _c('li', [_c('strong', [_vm._v(\"RM\")]), _vm._v(\"：本栏显示设备是否可移动设备。注意，在本例中设备sdb和sr0的RM值等于1，这说明他们是可移动设备。\")]), _vm._v(\" \"), _c('li', [_c('strong', [_vm._v(\"SIZE\")]), _vm._v(\"：本栏列出设备的容量大小信息。例如298.1G表明该设备大小为298.1GB，而1K表明该设备大小为1KB。\")]), _vm._v(\" \"), _c('li', [_c('strong', [_vm._v(\"RO\")]), _vm._v(\"：该项表明设备是否为只读。在本案例中，所有设备的RO值为0，表明他们不是只读的。\")]), _vm._v(\" \"), _c('li', [_c('strong', [_vm._v(\"TYPE\")]), _vm._v(\"：本栏显示块设备是否是磁盘或磁盘上的一个分区。在本例中，sda和sdb是磁盘，而sr0是只读存储（rom）。\")]), _vm._v(\" \"), _c('li', [_c('strong', [_vm._v(\"MOUNTPOINT\")]), _vm._v(\"：本栏指出设备挂载的挂载点。\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"默认选项不会列出所有空设备。要查看这些空设备，请使用以下命令：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"lsblk -a\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"lsblk命令也可以用于列出一个特定设备的拥有关系，同时也可以列出组和模式。可以通过以下命令来获取这些信息：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"lsblk -m\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"该命令也可以只获取指定设备的信息。这可以通过在提供给lsblk命令的选项后指定设备名来实现。例如，你可能对了解以字节显示你的磁盘驱动器大小比较感兴趣，那么你可以通过运行以下命令来实现：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"lsblk -b /dev/sda\\n\\n等价于\\n\\nlsblk --bytes /dev/sda\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"你也可以组合几个选项来获取指定的输出。例如，你也许想要以列表格式列出设备，而不是默认的树状格式。你可能也对移除不同栏目名称的标题感兴趣。可以将两个不同的选项组合，以获得期望的输出，命令如下：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"lsblk -[nl](#/nl \\\"nl命令\\\")\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"要获取SCSI设备的列表，你只能使用-S选项。该选项是大写字母S，不能和-s选项混淆，该选项是用来以颠倒的顺序打印依赖的。\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"lsblk -S\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"lsblk列出SCSI设备，而-s是逆序选项（将设备和分区的组织关系逆转过来显示），其将给出如下输出。输入命令：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"lsblk -s\\n\")])])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-eaa5137c\",\"hasScoped\":false}!./~/vue-loader/lib/selector.js?type=template&index=0!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/lsblk.md\n// module id = 1655\n// module chunks = 282","module.exports = require(\"!!vue-loader!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./lsblk.md\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./command/lsblk.md\n// module id = 271\n// module chunks = 282","var Component = require(\"!../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  null,\n  /* template */\n  require(\"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-eaa5137c\\\",\\\"hasScoped\\\":false}!../node_modules/vue-loader/lib/selector?type=template&index=0!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./lsblk.md\"),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/lsblk.md\n// module id = 859\n// module chunks = 282"],"sourceRoot":""}