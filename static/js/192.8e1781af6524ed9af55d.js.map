{"version":3,"sources":["webpack:///static/js/192.8e1781af6524ed9af55d.js","webpack:///./command/pvcreate.md?21fd","webpack:///./command/pvcreate.md","webpack:///./command/pvcreate.md?bb54"],"names":["webpackJsonp","1221","module","exports","render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","_v","pre","attrs","v-pre","362","__webpack_require__","951","Component"],"mappings":"AAAAA,cAAc,MAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAgBC,OAAA,WAAmB,GAAAC,GAAAC,KAAaC,EAAAF,EAAAG,cAA0BH,GAAAI,MAAAC,EAC1E,OAAAL,GAAAM,GAAA,IACCC,iBAAA,WAA+B,GAAAP,GAAAC,KAAaC,EAAAF,EAAAG,eAA0BE,EAAAL,EAAAI,MAAAC,IAAAH,CACvE,OAAAG,GAAA,WAAAA,EAAA,KAAAA,EAAA,UAAAL,EAAAQ,GAAA,gBAAAR,EAAAQ,GAAA,+BAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACAI,KAAA,IACGJ,EAAA,QACHK,OACAC,QAAA,MAEGX,EAAAQ,GAAA,0BAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHI,KAAA,IACGJ,EAAA,QACHK,OACAC,QAAA,MAEGX,EAAAQ,GAAA,+FAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,4BAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,aAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHI,KAAA,IACGJ,EAAA,QACHK,OACAC,QAAA,MAEGX,EAAAQ,GAAA,i3BAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,oBAAAH,EAAA,QACHI,KAAA,IACGT,EAAAQ,GAAA,eAAAR,EAAAQ,GAAA,KAAAH,EAAA,QACHI,KAAA,IACGT,EAAAQ,GAAA,eAAAR,EAAAQ,GAAA,cAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHI,KAAA,IACGJ,EAAA,QACHK,OACAC,QAAA,MAEGX,EAAAQ,GAAA,iHAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,0BAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHI,KAAA,IACGJ,EAAA,QACHK,OACAC,QAAA,MAEGX,EAAAQ,GAAA,wQAAyDR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,kCAAAR,EAAAQ,GAAA,KAAAH,EAAA,OAC5DI,KAAA,IACGJ,EAAA,QACHK,OACAC,QAAA,MAEGX,EAAAQ,GAAA,iQAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,0BAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHI,KAAA,IACGJ,EAAA,QACHK,OACAC,QAAA,MAEGX,EAAAQ,GAAA,8oBAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,YAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHI,KAAA,IACGJ,EAAA,QACHK,OACAC,QAAA,MAEGX,EAAAQ,GAAA,uIAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,cAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHI,KAAA,IACGJ,EAAA,QACHK,OACAC,QAAA,MAEGX,EAAAQ,GAAA,4MDUGI,IACA,SAAUf,EAAQC,EAASe,GExEjChB,EAAAC,QAAAe,EAAA,MF8EMC,IACA,SAAUjB,EAAQC,EAASe,GG/EjC,GAAAE,GAAAF,EAAA,GAEA,KAEAA,EAAA,MAEA,KAEA,KAEA,KAGAhB,GAAAC,QAAAiB,EAAAjB","file":"static/js/192.8e1781af6524ed9af55d.js","sourcesContent":["webpackJsonp([192],{\n\n/***/ 1221:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"pvcreate命令\")]), _vm._v(\"用于将物理硬盘分区初始化为物理卷，以便LVM使用。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"pvcreate(选项)(参数)\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-f：强制创建物理卷，不需要用户确认；\\n-u：指定设备的UUID；\\n-y：所有的问题都回答“[yes](#/yes \\\"yes命令\\\")”；\\n-Z：是否利用前4个扇区。\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"参数\")]), _vm._v(\" \"), _c('p', [_vm._v(\"物理卷：指定要创建的物理卷对应的设备文件名。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('p', [_vm._v(\"查看磁盘信息：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost ~]# [fdisk](#/fdisk \\\"fdisk命令\\\") -l\\nDisk /dev/hda: 41.1 GB, 41174138880 bytes\\n255 heads, 63 sectors/track, 5005 cylinders\\nUnits = cylinders of 16065 * 512 = 8225280 bytes\\n\\n   Device Boot      Start         End      Blocks   [id](#/id \\\"id命令\\\")  System\\n/dev/hda1   *           1          13      104391   83  Linux\\n/dev/hda2              14        1288    10241437+  83  Linux\\n/dev/hda3            1289        1925     5116702+  83  Linux\\n/dev/hda4            1926        5005    24740100    5  Extended\\n/dev/hda5            1926        2052     1020096   82  Linux swap / Solaris\\n/dev/hda6            2053        2235     1469916   8e  Linux LVM\\n/dev/hda7            2236        2418     1469916   8e  Linux LVM\\n/dev/hda8            2419        2601     1469916   8e  Linux LVM\\n/dev/hda9            2602        2784     1469916   8e  Linux LVM\\n\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"检查有无 PV 在系统上，然后将\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"/dev/hda6\")]), _vm._v(\"到\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"/dev/hda9\")]), _vm._v(\"建立成为PV格式\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost ~]# [pvscan](#/pvscan \\\"pvscan命令\\\")\\nNo matching physical volumes found    #找不到任何的 PV 存在！\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"将6-9分区转成pv，注意大括号的用途：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost ~]# pvcreate /dev/hda{6,7,8,9}\\n  Physical volume \\\"/dev/hda6\\\" successfully created\\n  Physical volume \\\"/dev/hda7\\\" successfully created\\n  Physical volume \\\"/dev/hda8\\\" successfully created\\n  Physical volume \\\"/dev/hda9\\\" successfully created\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"这就分別表示每个 PV 的信息与系统所有 PV 的信息：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost ~]# pvscan\\n  PV /dev/hda6         lvm2 [1.40 GB]\\n  PV /dev/hda7         lvm2 [1.40 GB]\\n  PV /dev/hda8         lvm2 [1.40 GB]\\n  PV /dev/hda9         lvm2 [1.40 GB]\\n  Total: 4 [5.61 GB] / in use: 0 [0   ] / in no VG: 4 [5.61 GB]\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"更详细的列示出系统上面每个 PV 信息：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost ~]# [pvdisplay](#/pvdisplay \\\"pvdisplay命令\\\")\\n  \\\"/dev/hda6\\\" is a new physical volume of \\\"1.40 GB\\\"\\n  --- NEW Physical volume ---\\n  PV Name               /dev/hda6  #实际的 partition 分区名称\\n  VG Name                          #因为尚未分配出去，所以空白！\\n  PV Size               1.40 GB    #就是容量说明\\n  Allocatable           NO         #是否已被分配，结果是 NO\\n  PE Size (KByte)       0          #在此 PV 內的 PE 大小\\n  Total PE              0          #共分割出几个 PE\\n  [free](#/free \\\"free命令\\\") PE               0          #沒被 LV 用掉的 PE\\n  Allocated PE          0          #尚可分配出去的 PE 数量\\n  PV UUID               Z13Jk5-RCls-UJ8B-HzDa-Gesn-atku-rf2biN\\n....(底下省略)....\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"删除物理卷：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost ~]# [pvremove](#/pvremove \\\"pvremove命令\\\") /dev/sdb2\\nLabels on physical volume \\\"/dev/sdb2\\\" successfully wiped\\n\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"修改物理卷属性：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost ~]# [pvchange](#/pvchange \\\"pvchange命令\\\") -x n /dev/sdb1    #禁止分配指定物理卷上的PE\\nPhysical volume \\\"/dev/sdb1\\\" changed  \\n1 physical volume changed / 0 physical volumes not changed \\n\")])])])\n}]}\n\n/***/ }),\n\n/***/ 362:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(951);\n\n/***/ }),\n\n/***/ 951:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(5)(\n  /* script */\n  null,\n  /* template */\n  __webpack_require__(1221),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/192.8e1781af6524ed9af55d.js","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"pvcreate命令\")]), _vm._v(\"用于将物理硬盘分区初始化为物理卷，以便LVM使用。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"pvcreate(选项)(参数)\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-f：强制创建物理卷，不需要用户确认；\\n-u：指定设备的UUID；\\n-y：所有的问题都回答“[yes](#/yes \\\"yes命令\\\")”；\\n-Z：是否利用前4个扇区。\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"参数\")]), _vm._v(\" \"), _c('p', [_vm._v(\"物理卷：指定要创建的物理卷对应的设备文件名。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('p', [_vm._v(\"查看磁盘信息：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost ~]# [fdisk](#/fdisk \\\"fdisk命令\\\") -l\\nDisk /dev/hda: 41.1 GB, 41174138880 bytes\\n255 heads, 63 sectors/track, 5005 cylinders\\nUnits = cylinders of 16065 * 512 = 8225280 bytes\\n\\n   Device Boot      Start         End      Blocks   [id](#/id \\\"id命令\\\")  System\\n/dev/hda1   *           1          13      104391   83  Linux\\n/dev/hda2              14        1288    10241437+  83  Linux\\n/dev/hda3            1289        1925     5116702+  83  Linux\\n/dev/hda4            1926        5005    24740100    5  Extended\\n/dev/hda5            1926        2052     1020096   82  Linux swap / Solaris\\n/dev/hda6            2053        2235     1469916   8e  Linux LVM\\n/dev/hda7            2236        2418     1469916   8e  Linux LVM\\n/dev/hda8            2419        2601     1469916   8e  Linux LVM\\n/dev/hda9            2602        2784     1469916   8e  Linux LVM\\n\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"检查有无 PV 在系统上，然后将\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"/dev/hda6\")]), _vm._v(\"到\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"/dev/hda9\")]), _vm._v(\"建立成为PV格式\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost ~]# [pvscan](#/pvscan \\\"pvscan命令\\\")\\nNo matching physical volumes found    #找不到任何的 PV 存在！\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"将6-9分区转成pv，注意大括号的用途：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost ~]# pvcreate /dev/hda{6,7,8,9}\\n  Physical volume \\\"/dev/hda6\\\" successfully created\\n  Physical volume \\\"/dev/hda7\\\" successfully created\\n  Physical volume \\\"/dev/hda8\\\" successfully created\\n  Physical volume \\\"/dev/hda9\\\" successfully created\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"这就分別表示每个 PV 的信息与系统所有 PV 的信息：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost ~]# pvscan\\n  PV /dev/hda6         lvm2 [1.40 GB]\\n  PV /dev/hda7         lvm2 [1.40 GB]\\n  PV /dev/hda8         lvm2 [1.40 GB]\\n  PV /dev/hda9         lvm2 [1.40 GB]\\n  Total: 4 [5.61 GB] / in use: 0 [0   ] / in no VG: 4 [5.61 GB]\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"更详细的列示出系统上面每个 PV 信息：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost ~]# [pvdisplay](#/pvdisplay \\\"pvdisplay命令\\\")\\n  \\\"/dev/hda6\\\" is a new physical volume of \\\"1.40 GB\\\"\\n  --- NEW Physical volume ---\\n  PV Name               /dev/hda6  #实际的 partition 分区名称\\n  VG Name                          #因为尚未分配出去，所以空白！\\n  PV Size               1.40 GB    #就是容量说明\\n  Allocatable           NO         #是否已被分配，结果是 NO\\n  PE Size (KByte)       0          #在此 PV 內的 PE 大小\\n  Total PE              0          #共分割出几个 PE\\n  [free](#/free \\\"free命令\\\") PE               0          #沒被 LV 用掉的 PE\\n  Allocated PE          0          #尚可分配出去的 PE 数量\\n  PV UUID               Z13Jk5-RCls-UJ8B-HzDa-Gesn-atku-rf2biN\\n....(底下省略)....\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"删除物理卷：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost ~]# [pvremove](#/pvremove \\\"pvremove命令\\\") /dev/sdb2\\nLabels on physical volume \\\"/dev/sdb2\\\" successfully wiped\\n\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"修改物理卷属性：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost ~]# [pvchange](#/pvchange \\\"pvchange命令\\\") -x n /dev/sdb1    #禁止分配指定物理卷上的PE\\nPhysical volume \\\"/dev/sdb1\\\" changed  \\n1 physical volume changed / 0 physical volumes not changed \\n\")])])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-1561fa24\",\"hasScoped\":false}!./~/vue-loader/lib/selector.js?type=template&index=0!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/pvcreate.md\n// module id = 1221\n// module chunks = 192","module.exports = require(\"!!vue-loader!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./pvcreate.md\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./command/pvcreate.md\n// module id = 362\n// module chunks = 192","var Component = require(\"!../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  null,\n  /* template */\n  require(\"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-1561fa24\\\",\\\"hasScoped\\\":false}!../node_modules/vue-loader/lib/selector?type=template&index=0!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./pvcreate.md\"),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/pvcreate.md\n// module id = 951\n// module chunks = 192"],"sourceRoot":""}