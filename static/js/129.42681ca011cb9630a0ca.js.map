{"version":3,"sources":["webpack:///static/js/129.42681ca011cb9630a0ca.js","webpack:///./command/skill.md?c618","webpack:///./command/skill.md?c1ac","webpack:///./command/skill.md"],"names":["webpackJsonp","1015","module","exports","__webpack_require__","Component","1527","render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","_v","pre","attrs","v-pre","href","title","427"],"mappings":"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","file":"static/js/129.42681ca011cb9630a0ca.js","sourcesContent":["webpackJsonp([129],{\n\n/***/ 1015:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(5)(\n  /* script */\n  null,\n  /* template */\n  __webpack_require__(1527),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 1527:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"skill命令\")]), _vm._v(\"用于向选定的进程发送信号，冻结进程。这个命令初学者并不常用，深入之后牵涉到系统服务优化之后可能会用到。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"skill(选项)\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-f：快速模式；\\n-i：交互模式，每一步操作都需要确认；\\n-v：冗余模式；\\n-[w](#/w \\\"w命令\\\")：激活模式；\\n-V：显示版本号；\\n-t：指定开启进程的终端号；\\n-u：指定开启进程的用户；\\n-p：指定进程的[id](#/id \\\"id命令\\\")号；\\n-c：指定开启进程的指令名称。\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('p', [_vm._v(\"如果您发现了一个占用大量CPU和内存的进程，但又不想停止它，该怎么办？考虑下面的\"), _c('a', {\n    attrs: {\n      \"href\": \"#/top\",\n      \"title\": \"top命令\"\n    }\n  }, [_vm._v(\"top\")]), _vm._v(\"命令输出：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"top -c -p 16514\\n23:00:44  up 12 days,  2:04,  4 [users](#/users \\\"users命令\\\"),  load average: 0.47, 0.35, 0.31\\n1 processes: 1 sleeping, 0 running, 0 zombie, 0 stopped\\nCPU states:  cpu    user    [nice](#/nice \\\"nice命令\\\")  system    irq  softirq  iowait    idle\\n           total    0.0%    0.6%    8.7%   2.2%     0.0%   88.3%    0.0%\\nMem:  1026912k av, 1010476k used,   16436k [free](#/free \\\"free命令\\\"),       0k shrd,   52128k buff\\n                    766724k actv,  143128k in_d,   14264k in_c\\nSwap: 2041192k av,   83160k used, 1958032k free                  799432k cached\\n\\n  PID USER     PRI  NI  SIZE  RSS SHARE [stat](#/stat \\\"stat命令\\\") %CPU %MEM   [time](#/time \\\"time命令\\\") CPU [command](#/command \\\"command命令\\\")\\n16514 oracle    19   4 28796  26M 20252 D N   7.0  2.5   0:03   0 oraclePRODB2...\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"既然您确认进程16514占用了大量内存，您就可以使用skill命令“冻结”它，而不是停止它。\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"skill -STOP 1\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"之后，检查top输出：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"23:01:11  up 12 days,  2:05,  4 users,  load average: 1.20, 0.54, 0.38\\n1 processes: 0 sleeping, 0 running, 0 zombie, 1 stopped\\nCPU states:  cpu    user    nice  system    irq  softirq  iowait    idle\\n           total    2.3%    0.0%    0.3%   0.0%     0.0%    2.3%   94.8%\\nMem:  1026912k av, 1008756k used,   18156k free,       0k shrd,    3976k buff\\n                    770024k actv,  143496k in_d,   12876k in_c\\nSwap: 2041192k av,   83152k used, 1958040k free                  851200k cached\\n\\n  PID USER     PRI  NI  SIZE  RSS SHARE STAT %CPU %MEM   TIME CPU COMMAND\\n16514 oracle    19   4 28796  26M 20252 T N   0.0  2.5   0:04   0 oraclePRODB2...\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"现在，CPU 从 0% 空闲变为 94% 空闲。该进程被有效冻结。过一段时间之后，您可能希望唤醒该进程：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"skill -CONT 16514\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"如果希望暂时冻结进程以便为完成更重要的进程腾出空间，该方法非常有用。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"此命令用途很广。如果您要停止 \\\"oracle\\\" 用户的所有进程，只需要一个命令即可实现：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"skill -STOP oracle\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"可以使用用户、PID、命令或终端 id 作为参数。以下命令可停止所有 rman 命令。\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"skill -STOP rman\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"如您所见，skill 决定您输入的参数（进程 ID、用户 ID 或命令）并进行相应操作。这可能会导致在某些情况下出现这样的问题：您可能具有同名的用户和命令。最好的示例是 \\\"oracle\\\" 进程，通常由用户 \\\"oracle\\\" 运行。因此，当您希望停止名为 \\\"oracle\\\" 的进程时，可执行以下命令：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"skill -STOP oracle\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"用户 \\\"oracle\\\" 的所有进程都停止，包括您可能要使用的会话。要非常明确地执行命令，您可以选择使用一个新参数指定参数的类型。要停止一个名为 oracle 的命令，可执行以下命令：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"skill -STOP -c oracle\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"snice命令的功能与skill类似。但它用于降低进程的优先级，而不是停止进程。首先，检查 top 输出：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"  PID USER     PRI  NI  SIZE  RSS SHARE STAT %CPU %MEM   TIME CPU COMMAND\\n    3 root      15   0     0    0     0 RW    0.0  0.0   0:00   0 kapmd\\n13680 oracle    15   0 11336  10M  8820 T     0.0  1.0   0:00   0 oracle\\n13683 oracle    15   0  9972 9608  7788 T     0.0  0.9   0:00   0 oracle\\n13686 oracle    15   0  9860 9496  7676 T     0.0  0.9   0:00   0 oracle\\n13689 oracle    15   0 10004 9640  7820 T     0.0  0.9   0:00   0 oracle\\n13695 oracle    15   0  9984 9620  7800 T     0.0  0.9   0:00   0 oracle\\n13698 oracle    15   0 10064 9700  7884 T     0.0  0.9   0:00   0 oracle\\n13701 oracle    15   0 22204  21M 16940 T     0.0  2.1   0:00   0 oracle\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"现在，将 \\\"oracle\\\" 进程的优先级降低四个点。注意，该值越高，优先级越低。\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"snice +4 -u oracle\\n  PID USER     PRI  NI  SIZE  RSS SHARE STAT %CPU %MEM   TIME CPU COMMAND\\n16894 oracle    20   4 38904  32M 26248 D N   5.5  3.2   0:01   0 oracle\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"注意，NI 列（nice 值）现在是 4，优先级现在设置为 20，而不是 15。这对于降低优先级非常有帮助。\")])])\n}]}\n\n/***/ }),\n\n/***/ 427:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(1015);\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/129.42681ca011cb9630a0ca.js","var Component = require(\"!../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  null,\n  /* template */\n  require(\"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-72d391ea\\\",\\\"hasScoped\\\":false}!../node_modules/vue-loader/lib/selector?type=template&index=0!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./skill.md\"),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/skill.md\n// module id = 1015\n// module chunks = 129","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"skill命令\")]), _vm._v(\"用于向选定的进程发送信号，冻结进程。这个命令初学者并不常用，深入之后牵涉到系统服务优化之后可能会用到。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"skill(选项)\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-f：快速模式；\\n-i：交互模式，每一步操作都需要确认；\\n-v：冗余模式；\\n-[w](#/w \\\"w命令\\\")：激活模式；\\n-V：显示版本号；\\n-t：指定开启进程的终端号；\\n-u：指定开启进程的用户；\\n-p：指定进程的[id](#/id \\\"id命令\\\")号；\\n-c：指定开启进程的指令名称。\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('p', [_vm._v(\"如果您发现了一个占用大量CPU和内存的进程，但又不想停止它，该怎么办？考虑下面的\"), _c('a', {\n    attrs: {\n      \"href\": \"#/top\",\n      \"title\": \"top命令\"\n    }\n  }, [_vm._v(\"top\")]), _vm._v(\"命令输出：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"top -c -p 16514\\n23:00:44  up 12 days,  2:04,  4 [users](#/users \\\"users命令\\\"),  load average: 0.47, 0.35, 0.31\\n1 processes: 1 sleeping, 0 running, 0 zombie, 0 stopped\\nCPU states:  cpu    user    [nice](#/nice \\\"nice命令\\\")  system    irq  softirq  iowait    idle\\n           total    0.0%    0.6%    8.7%   2.2%     0.0%   88.3%    0.0%\\nMem:  1026912k av, 1010476k used,   16436k [free](#/free \\\"free命令\\\"),       0k shrd,   52128k buff\\n                    766724k actv,  143128k in_d,   14264k in_c\\nSwap: 2041192k av,   83160k used, 1958032k free                  799432k cached\\n\\n  PID USER     PRI  NI  SIZE  RSS SHARE [stat](#/stat \\\"stat命令\\\") %CPU %MEM   [time](#/time \\\"time命令\\\") CPU [command](#/command \\\"command命令\\\")\\n16514 oracle    19   4 28796  26M 20252 D N   7.0  2.5   0:03   0 oraclePRODB2...\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"既然您确认进程16514占用了大量内存，您就可以使用skill命令“冻结”它，而不是停止它。\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"skill -STOP 1\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"之后，检查top输出：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"23:01:11  up 12 days,  2:05,  4 users,  load average: 1.20, 0.54, 0.38\\n1 processes: 0 sleeping, 0 running, 0 zombie, 1 stopped\\nCPU states:  cpu    user    nice  system    irq  softirq  iowait    idle\\n           total    2.3%    0.0%    0.3%   0.0%     0.0%    2.3%   94.8%\\nMem:  1026912k av, 1008756k used,   18156k free,       0k shrd,    3976k buff\\n                    770024k actv,  143496k in_d,   12876k in_c\\nSwap: 2041192k av,   83152k used, 1958040k free                  851200k cached\\n\\n  PID USER     PRI  NI  SIZE  RSS SHARE STAT %CPU %MEM   TIME CPU COMMAND\\n16514 oracle    19   4 28796  26M 20252 T N   0.0  2.5   0:04   0 oraclePRODB2...\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"现在，CPU 从 0% 空闲变为 94% 空闲。该进程被有效冻结。过一段时间之后，您可能希望唤醒该进程：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"skill -CONT 16514\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"如果希望暂时冻结进程以便为完成更重要的进程腾出空间，该方法非常有用。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"此命令用途很广。如果您要停止 \\\"oracle\\\" 用户的所有进程，只需要一个命令即可实现：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"skill -STOP oracle\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"可以使用用户、PID、命令或终端 id 作为参数。以下命令可停止所有 rman 命令。\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"skill -STOP rman\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"如您所见，skill 决定您输入的参数（进程 ID、用户 ID 或命令）并进行相应操作。这可能会导致在某些情况下出现这样的问题：您可能具有同名的用户和命令。最好的示例是 \\\"oracle\\\" 进程，通常由用户 \\\"oracle\\\" 运行。因此，当您希望停止名为 \\\"oracle\\\" 的进程时，可执行以下命令：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"skill -STOP oracle\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"用户 \\\"oracle\\\" 的所有进程都停止，包括您可能要使用的会话。要非常明确地执行命令，您可以选择使用一个新参数指定参数的类型。要停止一个名为 oracle 的命令，可执行以下命令：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"skill -STOP -c oracle\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"snice命令的功能与skill类似。但它用于降低进程的优先级，而不是停止进程。首先，检查 top 输出：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"  PID USER     PRI  NI  SIZE  RSS SHARE STAT %CPU %MEM   TIME CPU COMMAND\\n    3 root      15   0     0    0     0 RW    0.0  0.0   0:00   0 kapmd\\n13680 oracle    15   0 11336  10M  8820 T     0.0  1.0   0:00   0 oracle\\n13683 oracle    15   0  9972 9608  7788 T     0.0  0.9   0:00   0 oracle\\n13686 oracle    15   0  9860 9496  7676 T     0.0  0.9   0:00   0 oracle\\n13689 oracle    15   0 10004 9640  7820 T     0.0  0.9   0:00   0 oracle\\n13695 oracle    15   0  9984 9620  7800 T     0.0  0.9   0:00   0 oracle\\n13698 oracle    15   0 10064 9700  7884 T     0.0  0.9   0:00   0 oracle\\n13701 oracle    15   0 22204  21M 16940 T     0.0  2.1   0:00   0 oracle\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"现在，将 \\\"oracle\\\" 进程的优先级降低四个点。注意，该值越高，优先级越低。\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"snice +4 -u oracle\\n  PID USER     PRI  NI  SIZE  RSS SHARE STAT %CPU %MEM   TIME CPU COMMAND\\n16894 oracle    20   4 38904  32M 26248 D N   5.5  3.2   0:01   0 oracle\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"注意，NI 列（nice 值）现在是 4，优先级现在设置为 20，而不是 15。这对于降低优先级非常有帮助。\")])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-72d391ea\",\"hasScoped\":false}!./~/vue-loader/lib/selector.js?type=template&index=0!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/skill.md\n// module id = 1527\n// module chunks = 129","module.exports = require(\"!!vue-loader!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./skill.md\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./command/skill.md\n// module id = 427\n// module chunks = 129"],"sourceRoot":""}