{"version":3,"sources":["webpack:///static/js/454.f7f3a51f5c620e374380.js","webpack:///./command/dd.md?0609","webpack:///./command/dd.md?81f2","webpack:///./command/dd.md"],"names":["webpackJsonp","1419","module","exports","render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","_v","attrs","href","title","pre","v-pre","685","__webpack_require__","Component","97"],"mappings":"AAAAA,cAAc,MAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAgBC,OAAA,WAAmB,GAAAC,GAAAC,KAAaC,EAAAF,EAAAG,cAA0BH,GAAAI,MAAAC,EAC1E,OAAAL,GAAAM,GAAA,IACCC,iBAAA,WAA+B,GAAAP,GAAAC,KAAaC,EAAAF,EAAAG,eAA0BE,EAAAL,EAAAI,MAAAC,IAAAH,CACvE,OAAAG,GAAA,WAAAA,EAAA,KAAAA,EAAA,UAAAL,EAAAQ,GAAA,UAAAR,EAAAQ,GAAA,wJAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,uCAAAH,EAAA,KACAI,OACAC,KAAA,QACAC,MAAA,WAEGX,EAAAQ,GAAA,SAAAR,EAAAQ,GAAA,YAAAH,EAAA,KACHI,OACAC,KAAA,SACAC,MAAA,YAEGX,EAAAQ,GAAA,UAAAR,EAAAQ,GAAA,wCAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHO,KAAA,IACGP,EAAA,QACHI,OACAI,QAAA,MAEGb,EAAAQ,GAAA,gBAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHO,KAAA,IACGP,EAAA,QACHI,OACAI,QAAA,MAEGb,EAAAQ,GAAA,6RAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHO,KAAA,IACGP,EAAA,QACHI,OACAI,QAAA,MAEGb,EAAAQ,GAAA,+OAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,oCAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAA,EAAA,MAAAA,EAAA,UAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,sCAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAA,EAAA,UAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,wCAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAA,EAAA,UAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,mBAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAA,EAAA,UAAAL,EAAAQ,GAAA,WAAAR,EAAAQ,GAAA,gBAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAA,EAAA,UAAAL,EAAAQ,GAAA,eAAAR,EAAAQ,GAAA,gCAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,mBAAAR,EAAAQ,GAAA,KAAAH,EAAA,SAAAA,EAAA,SAAAA,EAAA,MAAAA,EAAA,MAAAL,EAAAQ,GAAA,UAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,UAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAA,EAAA,MAAAL,EAAAQ,GAAA,YAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,SAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAA,EAAA,MAAAL,EAAAQ,GAAA,YAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,sBAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAA,EAAA,MAAAL,EAAAQ,GAAA,aAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,SAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAA,EAAA,MAAAL,EAAAQ,GAAA,gBAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,SAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAA,EAAA,MAAAL,EAAAQ,GAAA,iBAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,SAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAA,EAAA,MAAAL,EAAAQ,GAAA,iBAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,aAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,4BAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHO,KAAA,IACGP,EAAA,QACHI,OACAI,QAAA,MAEGb,EAAAQ,GAAA,yEDUGM,IACA,SAAUjB,EAAQC,EAASiB,GEhDjC,GAAAC,GAAAD,EAAA,GAEA,KAEAA,EAAA,MAEA,KAEA,KAEA,KAGAlB,GAAAC,QAAAkB,EAAAlB,SFuDMmB,GACA,SAAUpB,EAAQC,EAASiB,GGrEjClB,EAAAC,QAAAiB,EAAA","file":"static/js/454.f7f3a51f5c620e374380.js","sourcesContent":["webpackJsonp([454],{\n\n/***/ 1419:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"dd命令\")]), _vm._v(\"用于复制文件并对原文件的内容进行转换和格式化处理。dd命令功能很强大的，对于一些比较底层的问题，使用dd命令往往可以得到出人意料的效果。用的比较多的还是用dd来备份裸设备。但是不推荐，如果需要备份oracle裸设备，可以使用rman备份，或使用第三方软件备份，使用dd的话，管理起来不太方便。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"建议在有需要的时候使用dd 对物理磁盘操作，如果是文件系统的话还是使用\"), _c('a', {\n    attrs: {\n      \"href\": \"#/tar\",\n      \"title\": \"tar命令\"\n    }\n  }, [_vm._v(\"tar\")]), _vm._v(\" backup \"), _c('a', {\n    attrs: {\n      \"href\": \"#/cpio\",\n      \"title\": \"cpio命令\"\n    }\n  }, [_vm._v(\"cpio\")]), _vm._v(\"等其他命令更加方便。另外，使用dd对磁盘操作时，最好使用块设备文件。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"dd(选项)\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"bs=<字节数>：将ibs（输入）与欧巴桑（输出）设成指定的字节数；\\ncbs=<字节数>：转换时，每次只转换指定的字节数；\\nconv=<关键字>：指定文件转换的方式；\\ncount=<区块数>：仅读取指定的区块数；\\nibs=<字节数>：每次读取的字节数；\\nobs=<字节数>：每次输出的字节数；\\nof=<文件>：输出到文件；\\nseek=<区块数>：一开始输出时，跳过指定的区块数；\\nskip=<区块数>：一开始读取时，跳过指定的区块数；\\n--[help](#/help \\\"help命令\\\")：帮助；\\n--version：显示版本信息。\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost text]# dd if=/dev/zero of=sun.txt bs=1M count=1\\n1+0 records in\\n1+0 records out\\n1048576 bytes (1.0 MB) copied, 0.006107 seconds, 172 MB/s\\n\\n[root@localhost text]# [du](#/du \\\"du命令\\\") -sh sun.txt \\n1.1M    sun.txt\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"该命令创建了一个1M大小的文件sun.txt，其中参数解释：\")]), _vm._v(\" \"), _c('ul', [_c('li', [_c('strong', [_vm._v(\"if\")]), _vm._v(\" 代表输入文件。如果不指定if，默认就会从stdin中读取输入。\")]), _vm._v(\" \"), _c('li', [_c('strong', [_vm._v(\"of\")]), _vm._v(\" 代表输出文件。如果不指定of，默认就会将stdout作为默认输出。\")]), _vm._v(\" \"), _c('li', [_c('strong', [_vm._v(\"bs\")]), _vm._v(\" 代表字节为单位的块大小。\")]), _vm._v(\" \"), _c('li', [_c('strong', [_vm._v(\"count\")]), _vm._v(\" 代表被复制的块数。\")]), _vm._v(\" \"), _c('li', [_c('strong', [_vm._v(\"/dev/zero\")]), _vm._v(\" 是一个字符设备，会不断返回0值字节（\\\\0）。\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"块大小可以使用的计量单位表\")]), _vm._v(\" \"), _c('table', [_c('tbody', [_c('tr', [_c('td', [_vm._v(\"单元大小\")]), _vm._v(\" \"), _c('td', [_vm._v(\"代码\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"字节（1B）\")]), _vm._v(\" \"), _c('td', [_vm._v(\"c\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"字节（2B）\")]), _vm._v(\" \"), _c('td', [_vm._v(\"[w](#/w \\\"w命令\\\")\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"块（512B）\")]), _vm._v(\" \"), _c('td', [_vm._v(\"b\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"千字节（1024B）\")]), _vm._v(\" \"), _c('td', [_vm._v(\"k\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"兆字节（1024KB）\")]), _vm._v(\" \"), _c('td', [_vm._v(\"M\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"吉字节（1024MB）\")]), _vm._v(\" \"), _c('td', [_vm._v(\"G\")])])])]), _vm._v(\" \"), _c('p', [_vm._v(\"以上命令可以看出dd命令来测试内存操作速度：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"1048576 bytes (1.0 MB) copied, 0.006107 seconds, 172 MB/s\\n\")])])])\n}]}\n\n/***/ }),\n\n/***/ 685:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(5)(\n  /* script */\n  null,\n  /* template */\n  __webpack_require__(1419),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 97:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(685);\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/454.f7f3a51f5c620e374380.js","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"dd命令\")]), _vm._v(\"用于复制文件并对原文件的内容进行转换和格式化处理。dd命令功能很强大的，对于一些比较底层的问题，使用dd命令往往可以得到出人意料的效果。用的比较多的还是用dd来备份裸设备。但是不推荐，如果需要备份oracle裸设备，可以使用rman备份，或使用第三方软件备份，使用dd的话，管理起来不太方便。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"建议在有需要的时候使用dd 对物理磁盘操作，如果是文件系统的话还是使用\"), _c('a', {\n    attrs: {\n      \"href\": \"#/tar\",\n      \"title\": \"tar命令\"\n    }\n  }, [_vm._v(\"tar\")]), _vm._v(\" backup \"), _c('a', {\n    attrs: {\n      \"href\": \"#/cpio\",\n      \"title\": \"cpio命令\"\n    }\n  }, [_vm._v(\"cpio\")]), _vm._v(\"等其他命令更加方便。另外，使用dd对磁盘操作时，最好使用块设备文件。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"dd(选项)\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"bs=<字节数>：将ibs（输入）与欧巴桑（输出）设成指定的字节数；\\ncbs=<字节数>：转换时，每次只转换指定的字节数；\\nconv=<关键字>：指定文件转换的方式；\\ncount=<区块数>：仅读取指定的区块数；\\nibs=<字节数>：每次读取的字节数；\\nobs=<字节数>：每次输出的字节数；\\nof=<文件>：输出到文件；\\nseek=<区块数>：一开始输出时，跳过指定的区块数；\\nskip=<区块数>：一开始读取时，跳过指定的区块数；\\n--[help](#/help \\\"help命令\\\")：帮助；\\n--version：显示版本信息。\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost text]# dd if=/dev/zero of=sun.txt bs=1M count=1\\n1+0 records in\\n1+0 records out\\n1048576 bytes (1.0 MB) copied, 0.006107 seconds, 172 MB/s\\n\\n[root@localhost text]# [du](#/du \\\"du命令\\\") -sh sun.txt \\n1.1M    sun.txt\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"该命令创建了一个1M大小的文件sun.txt，其中参数解释：\")]), _vm._v(\" \"), _c('ul', [_c('li', [_c('strong', [_vm._v(\"if\")]), _vm._v(\" 代表输入文件。如果不指定if，默认就会从stdin中读取输入。\")]), _vm._v(\" \"), _c('li', [_c('strong', [_vm._v(\"of\")]), _vm._v(\" 代表输出文件。如果不指定of，默认就会将stdout作为默认输出。\")]), _vm._v(\" \"), _c('li', [_c('strong', [_vm._v(\"bs\")]), _vm._v(\" 代表字节为单位的块大小。\")]), _vm._v(\" \"), _c('li', [_c('strong', [_vm._v(\"count\")]), _vm._v(\" 代表被复制的块数。\")]), _vm._v(\" \"), _c('li', [_c('strong', [_vm._v(\"/dev/zero\")]), _vm._v(\" 是一个字符设备，会不断返回0值字节（\\\\0）。\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"块大小可以使用的计量单位表\")]), _vm._v(\" \"), _c('table', [_c('tbody', [_c('tr', [_c('td', [_vm._v(\"单元大小\")]), _vm._v(\" \"), _c('td', [_vm._v(\"代码\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"字节（1B）\")]), _vm._v(\" \"), _c('td', [_vm._v(\"c\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"字节（2B）\")]), _vm._v(\" \"), _c('td', [_vm._v(\"[w](#/w \\\"w命令\\\")\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"块（512B）\")]), _vm._v(\" \"), _c('td', [_vm._v(\"b\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"千字节（1024B）\")]), _vm._v(\" \"), _c('td', [_vm._v(\"k\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"兆字节（1024KB）\")]), _vm._v(\" \"), _c('td', [_vm._v(\"M\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"吉字节（1024MB）\")]), _vm._v(\" \"), _c('td', [_vm._v(\"G\")])])])]), _vm._v(\" \"), _c('p', [_vm._v(\"以上命令可以看出dd命令来测试内存操作速度：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"1048576 bytes (1.0 MB) copied, 0.006107 seconds, 172 MB/s\\n\")])])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-51588724\",\"hasScoped\":false}!./~/vue-loader/lib/selector.js?type=template&index=0!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/dd.md\n// module id = 1419\n// module chunks = 454","var Component = require(\"!../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  null,\n  /* template */\n  require(\"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-51588724\\\",\\\"hasScoped\\\":false}!../node_modules/vue-loader/lib/selector?type=template&index=0!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./dd.md\"),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/dd.md\n// module id = 685\n// module chunks = 454","module.exports = require(\"!!vue-loader!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./dd.md\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./command/dd.md\n// module id = 97\n// module chunks = 454"],"sourceRoot":""}