{"version":3,"sources":["webpack:///static/js/427.2709676eefb0470ab0f2.js","webpack:///./command/dstat.md","webpack:///./command/dstat.md?c66a","webpack:///./command/dstat.md?7573"],"names":["webpackJsonp","125","module","exports","__webpack_require__","1491","render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","_v","attrs","href","title","pre","v-pre","713","Component"],"mappings":"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","file":"static/js/427.2709676eefb0470ab0f2.js","sourcesContent":["webpackJsonp([427],{\n\n/***/ 125:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(713);\n\n/***/ }),\n\n/***/ 1491:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"dstat命令\")]), _vm._v(\"是一个用来替换\"), _c('a', {\n    attrs: {\n      \"href\": \"#/vmstat\",\n      \"title\": \"vmstat命令\"\n    }\n  }, [_vm._v(\"vmstat\")]), _vm._v(\"、\"), _c('a', {\n    attrs: {\n      \"href\": \"#/iostat\",\n      \"title\": \"iostat命令\"\n    }\n  }, [_vm._v(\"iostat\")]), _vm._v(\"、\"), _c('a', {\n    attrs: {\n      \"href\": \"#/netstat\",\n      \"title\": \"netstat命令\"\n    }\n  }, [_vm._v(\"netstat\")]), _vm._v(\"、\"), _c('a', {\n    attrs: {\n      \"href\": \"#/nfsstat\",\n      \"title\": \"nfsstat命令\"\n    }\n  }, [_vm._v(\"nfsstat\")]), _vm._v(\"和\"), _c('a', {\n    attrs: {\n      \"href\": \"#/ifstat\",\n      \"title\": \"ifstat命令\"\n    }\n  }, [_vm._v(\"ifstat\")]), _vm._v(\"这些命令的工具，是一个全能系统信息统计工具。与sysstat相比，dstat拥有一个彩色的界面，在手动观察性能状况时，数据比较显眼容易观察；而且dstat支持即时刷新，譬如输入\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"dstat 3\")]), _vm._v(\"即每三秒收集一次，但最新的数据都会每秒刷新显示。和sysstat相同的是，dstat也可以收集指定的性能资源，譬如\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"dstat -c\")]), _vm._v(\"即显示CPU的使用情况。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"下载安装\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"方法一\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[yum](#/yum \\\"yum命令\\\") [install](#/install \\\"install命令\\\") -y dstat\\n\")])]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"方法二\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"官网下载地址：http://dag.wieers.com/\"), _c('a', {\n    attrs: {\n      \"href\": \"#/rpm\",\n      \"title\": \"rpm命令\"\n    }\n  }, [_vm._v(\"rpm\")]), _vm._v(\"/packages/dstat\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[wget](#/wget \\\"wget命令\\\") http://dag.wieers.com/rpm/packages/dstat/dstat-0.6.7-1.rh7.rf.noarch.rpm\\nrpm -ivh dstat-0.6.7-1.rh7.rf.noarch.rpm\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"使用说明\")]), _vm._v(\" \"), _c('p', [_vm._v(\"安装完后就可以使用了，dstat非常强大，可以实时的监控cpu、磁盘、网络、IO、内存等使用情况。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"直接使用dstat，默认使用的是\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"-cdngy\")]), _vm._v(\"参数，分别显示cpu、disk、net、page、system信息，默认是1s显示一条信息。可以在最后指定显示一条信息的时间间隔，如\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"dstat 5\")]), _vm._v(\"是没5s显示一条，\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"dstat 5 10\")]), _vm._v(\"表示没5s显示一条，一共显示10条。\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@iZ23uulau1tZ ~]# dstat\\n----total-cpu-usage---- -dsk/total- -net/total- ---paging-- ---system--\\nusr sys idl wai hiq siq| [read](#/read \\\"read命令\\\")  writ| recv  send|  in   out | int   csw\\n  0   0  99   0   0   0|7706B  164k|   0     0 |   0     0 | 189   225\\n  0   0 100   0   0   0|   0     0 |4436B  826B|   0     0 | 195   248\\n  1   0  99   0   0   0|   0     0 |4744B  346B|   0     0 | 203   242\\n  0   0 100   0   0   0|   0     0 |5080B  346B|   0     0 | 206   242\\n  0   1  99   0   0   0|   0     0 |5458B  444B|   0     0 | 214   244\\n  1   0  99   0   0   0|   0     0 |5080B  346B|   0     0 | 208   242\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"下面对显示出来的部分信息作一些说明：\")]), _vm._v(\" \"), _c('ol', [_c('li', [_vm._v(\"cpu：hiq、siq分别为硬中断和软中断次数。\")]), _vm._v(\" \"), _c('li', [_vm._v(\"system：int、csw分别为系统的中断次数（interrupt）和上下文切换（context switch）。\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"其他的都很好理解。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"dstat [-afv] [options..] [delay [count]]\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"常用选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-c：显示CPU系统占用，用户占用，空闲，等待，中断，软件中断等信息。\\n-C：当有多个CPU时候，此参数可按需分别显示cpu状态，例：-C 0,1 是显示cpu0和cpu1的信息。\\n-d：显示磁盘读写数据大小。\\n-D hda,total：include hda and total。\\n-n：显示网络状态。\\n-N eth1,total：有多块网卡时，指定要显示的网卡。\\n-l：显示系统负载情况。\\n-m：显示内存使用情况。\\n-g：显示页面使用情况。\\n-p：显示进程状态。\\n-s：显示交换分区使用情况。\\n-S：类似D/N。\\n-r：I/O请求情况。\\n-y：系统状态。\\n--ipc：显示ipc消息队列，信号等信息。\\n--socket：用来显示tcp udp端口状态。\\n-a：此为默认选项，等同于-cdngy。\\n-v：等同于 -pmgdsc -D total。\\n--output 文件：此选项也比较有用，可以把状态信息以csv的格式重定向到指定的文件中，以便日后查看。例：dstat --output /root/dstat.csv & 此时让程序默默的在后台运行并把结果输出到/root/dstat.csv文件中。\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"当然dstat还有很多更高级的用法，常用的基本这些选项，更高级的用法可以结合\"), _c('a', {\n    attrs: {\n      \"href\": \"#/man\",\n      \"title\": \"man命令\"\n    }\n  }, [_vm._v(\"man\")]), _vm._v(\"文档。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('p', [_vm._v(\"如想监控swap，process，sockets，filesystem并显示监控的时间：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@iZ23uulau1tZ ~]# dstat -tsp --socket --fs\\n----system---- ----swap--- ---procs--- ------sockets------ --filesystem-\\n  [date](#/date \\\"date命令\\\")/[time](#/time \\\"time命令\\\")   | used  [free](#/free \\\"free命令\\\")|run blk new|tot tcp udp raw frg|files  inodes\\n26-07 09:23:48|   0     0 |  0   0 0.0|104   8   5   0   0|  704   6488\\n26-07 09:23:49|   0     0 |  0   0   0|104   8   5   0   0|  704   6488\\n26-07 09:23:50|   0     0 |  0   0   0|104   8   5   0   0|  704   6489\\n26-07 09:23:51|   0     0 |  0   0   0|104   8   5   0   0|  704   6489\\n26-07 09:23:52|   0     0 |  0   0   0|104   8   5   0   0|  704   6489\\n26-07 09:23:53|   0     0 |  0   0   0|104   8   5   0   0|  704   6489\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"若要将结果输出到文件可以加\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"--output filename\")]), _vm._v(\"：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@iZ23uulau1tZ ~]# dstat -tsp --socket --fs --output /tmp/ds.csv\\n----system---- ----swap--- ---procs--- ------sockets------ --filesystem-\\n  date/time   | used  free|run blk new|tot tcp udp raw frg|files  inodes\\n26-07 09:25:31|   0     0 |  0   0 0.0|104   8   5   0   0|  736   6493\\n26-07 09:25:32|   0     0 |  0   0   0|104   8   5   0   0|  736   6493\\n26-07 09:25:33|   0     0 |  0   0   0|104   8   5   0   0|  736   6493\\n26-07 09:25:34|   0     0 |  0   0   0|104   8   5   0   0|  736   6493\\n26-07 09:25:35|   0     0 |  0   0   0|104   8   5   0   0|  736   6494\\n26-07 09:25:36|   0     0 |  0   0   0|104   8   5   0   0|  736   6494\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"这样生成的csv文件可以用excel打开，然后生成图表。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"通过\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"dstat --list\")]), _vm._v(\"可以查看dstat能使用的所有参数，其中上面internal是dstat本身自带的一些监控参数，下面\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"/usr/share/dstat\")]), _vm._v(\"中是dstat的插件，这些插件可以扩展dstat的功能，如可以监控电源（battery）、\"), _c('a', {\n    attrs: {\n      \"href\": \"#/mysql\",\n      \"title\": \"mysql命令\"\n    }\n  }, [_vm._v(\"mysql\")]), _vm._v(\"等。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"下面这些插件并不是都可以直接使用的，有的还依赖其他包，如想监控mysql，必须要装python连接mysql的一些包。\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@iZ23uulau1tZ ~]# dstat --list\\ninternal:\\n        aio, cpu, cpu24, disk, disk24, disk24old, epoch, fs, int, int24, io, ipc, load, lock, mem, net, page, page24, proc, raw, socket, swap, swapold, sys, tcp, time, udp, unix, vm\\n/usr/share/dstat:\\n        battery, battery-remain, cpufreq, dbus, disk-util, fan, freespace, gpfs, gpfs-ops, helloworld, innodb-buffer, innodb-io, innodb-ops, lustre, memcache-hits, mysql-io, mysql-keys, mysql5-cmds, mysql5-conn, mysql5-io, mysql5-keys,\\n        net-packets, nfs3, nfs3-ops, nfsd3, nfsd3-ops, ntp, postfix, power, proc-count, rpc, rpcd, [sendmail](#/sendmail \\\"sendmail命令\\\"), snooze, thermal, [top](#/top \\\"top命令\\\")-bio, top-cpu, top-cputime, top-cputime-avg, top-io, top-latency, top-latency-avg, top-mem, top-oom, utmp,\\n        vm-memctl, vmk-hba, vmk-int, vmk-nic, vz-cpu, vz-io, vz-ubc, wifi\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"dstat命令的基本用法就说到这里，更多用法有待摸索，如果您需要补充内容请给我们发邮件，谢谢！\")])])\n}]}\n\n/***/ }),\n\n/***/ 713:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(5)(\n  /* script */\n  null,\n  /* template */\n  __webpack_require__(1491),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/427.2709676eefb0470ab0f2.js","module.exports = require(\"!!vue-loader!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./dstat.md\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./command/dstat.md\n// module id = 125\n// module chunks = 427","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"dstat命令\")]), _vm._v(\"是一个用来替换\"), _c('a', {\n    attrs: {\n      \"href\": \"#/vmstat\",\n      \"title\": \"vmstat命令\"\n    }\n  }, [_vm._v(\"vmstat\")]), _vm._v(\"、\"), _c('a', {\n    attrs: {\n      \"href\": \"#/iostat\",\n      \"title\": \"iostat命令\"\n    }\n  }, [_vm._v(\"iostat\")]), _vm._v(\"、\"), _c('a', {\n    attrs: {\n      \"href\": \"#/netstat\",\n      \"title\": \"netstat命令\"\n    }\n  }, [_vm._v(\"netstat\")]), _vm._v(\"、\"), _c('a', {\n    attrs: {\n      \"href\": \"#/nfsstat\",\n      \"title\": \"nfsstat命令\"\n    }\n  }, [_vm._v(\"nfsstat\")]), _vm._v(\"和\"), _c('a', {\n    attrs: {\n      \"href\": \"#/ifstat\",\n      \"title\": \"ifstat命令\"\n    }\n  }, [_vm._v(\"ifstat\")]), _vm._v(\"这些命令的工具，是一个全能系统信息统计工具。与sysstat相比，dstat拥有一个彩色的界面，在手动观察性能状况时，数据比较显眼容易观察；而且dstat支持即时刷新，譬如输入\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"dstat 3\")]), _vm._v(\"即每三秒收集一次，但最新的数据都会每秒刷新显示。和sysstat相同的是，dstat也可以收集指定的性能资源，譬如\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"dstat -c\")]), _vm._v(\"即显示CPU的使用情况。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"下载安装\")]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"方法一\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[yum](#/yum \\\"yum命令\\\") [install](#/install \\\"install命令\\\") -y dstat\\n\")])]), _vm._v(\" \"), _c('p', [_c('strong', [_vm._v(\"方法二\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"官网下载地址：http://dag.wieers.com/\"), _c('a', {\n    attrs: {\n      \"href\": \"#/rpm\",\n      \"title\": \"rpm命令\"\n    }\n  }, [_vm._v(\"rpm\")]), _vm._v(\"/packages/dstat\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[wget](#/wget \\\"wget命令\\\") http://dag.wieers.com/rpm/packages/dstat/dstat-0.6.7-1.rh7.rf.noarch.rpm\\nrpm -ivh dstat-0.6.7-1.rh7.rf.noarch.rpm\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"使用说明\")]), _vm._v(\" \"), _c('p', [_vm._v(\"安装完后就可以使用了，dstat非常强大，可以实时的监控cpu、磁盘、网络、IO、内存等使用情况。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"直接使用dstat，默认使用的是\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"-cdngy\")]), _vm._v(\"参数，分别显示cpu、disk、net、page、system信息，默认是1s显示一条信息。可以在最后指定显示一条信息的时间间隔，如\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"dstat 5\")]), _vm._v(\"是没5s显示一条，\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"dstat 5 10\")]), _vm._v(\"表示没5s显示一条，一共显示10条。\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@iZ23uulau1tZ ~]# dstat\\n----total-cpu-usage---- -dsk/total- -net/total- ---paging-- ---system--\\nusr sys idl wai hiq siq| [read](#/read \\\"read命令\\\")  writ| recv  send|  in   out | int   csw\\n  0   0  99   0   0   0|7706B  164k|   0     0 |   0     0 | 189   225\\n  0   0 100   0   0   0|   0     0 |4436B  826B|   0     0 | 195   248\\n  1   0  99   0   0   0|   0     0 |4744B  346B|   0     0 | 203   242\\n  0   0 100   0   0   0|   0     0 |5080B  346B|   0     0 | 206   242\\n  0   1  99   0   0   0|   0     0 |5458B  444B|   0     0 | 214   244\\n  1   0  99   0   0   0|   0     0 |5080B  346B|   0     0 | 208   242\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"下面对显示出来的部分信息作一些说明：\")]), _vm._v(\" \"), _c('ol', [_c('li', [_vm._v(\"cpu：hiq、siq分别为硬中断和软中断次数。\")]), _vm._v(\" \"), _c('li', [_vm._v(\"system：int、csw分别为系统的中断次数（interrupt）和上下文切换（context switch）。\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"其他的都很好理解。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"dstat [-afv] [options..] [delay [count]]\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"常用选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-c：显示CPU系统占用，用户占用，空闲，等待，中断，软件中断等信息。\\n-C：当有多个CPU时候，此参数可按需分别显示cpu状态，例：-C 0,1 是显示cpu0和cpu1的信息。\\n-d：显示磁盘读写数据大小。\\n-D hda,total：include hda and total。\\n-n：显示网络状态。\\n-N eth1,total：有多块网卡时，指定要显示的网卡。\\n-l：显示系统负载情况。\\n-m：显示内存使用情况。\\n-g：显示页面使用情况。\\n-p：显示进程状态。\\n-s：显示交换分区使用情况。\\n-S：类似D/N。\\n-r：I/O请求情况。\\n-y：系统状态。\\n--ipc：显示ipc消息队列，信号等信息。\\n--socket：用来显示tcp udp端口状态。\\n-a：此为默认选项，等同于-cdngy。\\n-v：等同于 -pmgdsc -D total。\\n--output 文件：此选项也比较有用，可以把状态信息以csv的格式重定向到指定的文件中，以便日后查看。例：dstat --output /root/dstat.csv & 此时让程序默默的在后台运行并把结果输出到/root/dstat.csv文件中。\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"当然dstat还有很多更高级的用法，常用的基本这些选项，更高级的用法可以结合\"), _c('a', {\n    attrs: {\n      \"href\": \"#/man\",\n      \"title\": \"man命令\"\n    }\n  }, [_vm._v(\"man\")]), _vm._v(\"文档。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('p', [_vm._v(\"如想监控swap，process，sockets，filesystem并显示监控的时间：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@iZ23uulau1tZ ~]# dstat -tsp --socket --fs\\n----system---- ----swap--- ---procs--- ------sockets------ --filesystem-\\n  [date](#/date \\\"date命令\\\")/[time](#/time \\\"time命令\\\")   | used  [free](#/free \\\"free命令\\\")|run blk new|tot tcp udp raw frg|files  inodes\\n26-07 09:23:48|   0     0 |  0   0 0.0|104   8   5   0   0|  704   6488\\n26-07 09:23:49|   0     0 |  0   0   0|104   8   5   0   0|  704   6488\\n26-07 09:23:50|   0     0 |  0   0   0|104   8   5   0   0|  704   6489\\n26-07 09:23:51|   0     0 |  0   0   0|104   8   5   0   0|  704   6489\\n26-07 09:23:52|   0     0 |  0   0   0|104   8   5   0   0|  704   6489\\n26-07 09:23:53|   0     0 |  0   0   0|104   8   5   0   0|  704   6489\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"若要将结果输出到文件可以加\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"--output filename\")]), _vm._v(\"：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@iZ23uulau1tZ ~]# dstat -tsp --socket --fs --output /tmp/ds.csv\\n----system---- ----swap--- ---procs--- ------sockets------ --filesystem-\\n  date/time   | used  free|run blk new|tot tcp udp raw frg|files  inodes\\n26-07 09:25:31|   0     0 |  0   0 0.0|104   8   5   0   0|  736   6493\\n26-07 09:25:32|   0     0 |  0   0   0|104   8   5   0   0|  736   6493\\n26-07 09:25:33|   0     0 |  0   0   0|104   8   5   0   0|  736   6493\\n26-07 09:25:34|   0     0 |  0   0   0|104   8   5   0   0|  736   6493\\n26-07 09:25:35|   0     0 |  0   0   0|104   8   5   0   0|  736   6494\\n26-07 09:25:36|   0     0 |  0   0   0|104   8   5   0   0|  736   6494\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"这样生成的csv文件可以用excel打开，然后生成图表。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"通过\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"dstat --list\")]), _vm._v(\"可以查看dstat能使用的所有参数，其中上面internal是dstat本身自带的一些监控参数，下面\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"/usr/share/dstat\")]), _vm._v(\"中是dstat的插件，这些插件可以扩展dstat的功能，如可以监控电源（battery）、\"), _c('a', {\n    attrs: {\n      \"href\": \"#/mysql\",\n      \"title\": \"mysql命令\"\n    }\n  }, [_vm._v(\"mysql\")]), _vm._v(\"等。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"下面这些插件并不是都可以直接使用的，有的还依赖其他包，如想监控mysql，必须要装python连接mysql的一些包。\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@iZ23uulau1tZ ~]# dstat --list\\ninternal:\\n        aio, cpu, cpu24, disk, disk24, disk24old, epoch, fs, int, int24, io, ipc, load, lock, mem, net, page, page24, proc, raw, socket, swap, swapold, sys, tcp, time, udp, unix, vm\\n/usr/share/dstat:\\n        battery, battery-remain, cpufreq, dbus, disk-util, fan, freespace, gpfs, gpfs-ops, helloworld, innodb-buffer, innodb-io, innodb-ops, lustre, memcache-hits, mysql-io, mysql-keys, mysql5-cmds, mysql5-conn, mysql5-io, mysql5-keys,\\n        net-packets, nfs3, nfs3-ops, nfsd3, nfsd3-ops, ntp, postfix, power, proc-count, rpc, rpcd, [sendmail](#/sendmail \\\"sendmail命令\\\"), snooze, thermal, [top](#/top \\\"top命令\\\")-bio, top-cpu, top-cputime, top-cputime-avg, top-io, top-latency, top-latency-avg, top-mem, top-oom, utmp,\\n        vm-memctl, vmk-hba, vmk-int, vmk-nic, vz-cpu, vz-io, vz-ubc, wifi\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"dstat命令的基本用法就说到这里，更多用法有待摸索，如果您需要补充内容请给我们发邮件，谢谢！\")])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-69c45f44\",\"hasScoped\":false}!./~/vue-loader/lib/selector.js?type=template&index=0!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/dstat.md\n// module id = 1491\n// module chunks = 427","var Component = require(\"!../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  null,\n  /* template */\n  require(\"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-69c45f44\\\",\\\"hasScoped\\\":false}!../node_modules/vue-loader/lib/selector?type=template&index=0!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./dstat.md\"),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/dstat.md\n// module id = 713\n// module chunks = 427"],"sourceRoot":""}