{"version":3,"sources":["webpack:///static/js/410.04da542a07ec6ebbf2d5.js","webpack:///./command/ethtool.md","webpack:///./command/ethtool.md?d9cf","webpack:///./command/ethtool.md?b710"],"names":["webpackJsonp","142","module","exports","__webpack_require__","1626","render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","_v","pre","attrs","v-pre","href","title","staticStyle","width","730","Component"],"mappings":"AAAAA,cAAc,MAERC,IACA,SAAUC,EAAQC,EAASC,GCHjCF,EAAAC,QAAAC,EAAA,MDSMC,KACA,SAAUH,EAAQC,GEVxBD,EAAAC,SAAgBG,OAAA,WAAmB,GAAAC,GAAAC,KAAaC,EAAAF,EAAAG,cAA0BH,GAAAI,MAAAC,EAC1E,OAAAL,GAAAM,GAAA,IACCC,iBAAA,WAA+B,GAAAP,GAAAC,KAAaC,EAAAF,EAAAG,eAA0BE,EAAAL,EAAAI,MAAAC,IAAAH,CACvE,OAAAG,GAAA,WAAAA,EAAA,KAAAL,EAAAQ,GAAA,qDAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACAI,KAAA,IACGJ,EAAA,QACHK,OACAC,QAAA,MAEGX,EAAAQ,GAAA,q/BAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHI,KAAA,IACGJ,EAAA,QACHK,OACAC,QAAA,MAEGX,EAAAQ,GAAA,83BAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,UAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,gCAAAH,EAAA,KACHK,OACAE,KAAA,OACAC,MAAA,UAEGb,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,kCAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,WAAAH,EAAA,QACHI,KAAA,IACGT,EAAAQ,GAAA,wBAAAR,EAAAQ,GAAA,6CAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,2BAAAH,EAAA,QACHI,KAAA,IACGT,EAAAQ,GAAA,iBAAAR,EAAAQ,GAAA,+CAAAH,EAAA,QACHI,KAAA,IACGT,EAAAQ,GAAA,iBAAAR,EAAAQ,GAAA,KAAAH,EAAA,QACHI,KAAA,IACGT,EAAAQ,GAAA,4BAAAR,EAAAQ,GAAA,KAAAH,EAAA,QACHI,KAAA,IACGT,EAAAQ,GAAA,sBAAAR,EAAAQ,GAAA,qBAAAR,EAAAQ,GAAA,KAAAH,EAAA,SAAAA,EAAA,SAAAA,EAAA,MAAAA,EAAA,MACHS,aACAC,MAAA,WAEGf,EAAAQ,GAAA,UAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,4BAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,qCAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAA,EAAA,MAAAL,EAAAQ,GAAA,UAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,iFAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,6BAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAA,EAAA,MAAAL,EAAAQ,GAAA,WAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,mCAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,uDAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAA,EAAA,MAAAL,EAAAQ,GAAA,WAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,8BAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,0JAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAA,EAAA,MAAAL,EAAAQ,GAAA,WAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,iCAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,2DAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAA,EAAA,MAAAL,EAAAQ,GAAA,WAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,kFAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,oEAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAA,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,iFAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,0KAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAA,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,yBAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,iCAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAA,EAAA,MAAAL,EAAAQ,GAAA,WAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,0BAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,mCAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAA,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,gBAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,6CAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAA,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,aAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,sCAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAA,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,eAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,+FAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAA,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,uBAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,sMAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,qCAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,4BAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHI,KAAA,IACGJ,EAAA,QACHK,OACAC,QAAA,MAEGX,EAAAQ,GAAA,qBAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,eAAAH,EAAA,QACHI,KAAA,IACGT,EAAAQ,GAAA,YAAAR,EAAAQ,GAAA,mCAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHI,KAAA,IACGJ,EAAA,QACHK,OACAC,QAAA,MAEGX,EAAAQ,GAAA,gCAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,aAAAH,EAAA,QACHI,KAAA,IACGT,EAAAQ,GAAA,qBAAAR,EAAAQ,GAAA,wCAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHI,KAAA,IACGJ,EAAA,QACHK,OACAC,QAAA,MAEGX,EAAAQ,GAAA,yBAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,qEAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHI,KAAA,IACGJ,EAAA,QACHK,OACAC,QAAA,MAEGX,EAAAQ,GAAA,gCAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,aAAAH,EAAA,QACHI,KAAA,IACGT,EAAAQ,GAAA,qBAAAR,EAAAQ,GAAA,mDAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHI,KAAA,IACGJ,EAAA,QACHK,OACAC,QAAA,MAEGX,EAAAQ,GAAA,4BAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,+DAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHI,KAAA,IACGJ,EAAA,QACHK,OACAC,QAAA,MAEGX,EAAAQ,GAAA,yBAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,uBAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHI,KAAA,IACGJ,EAAA,QACHK,OACAC,QAAA,MAEGX,EAAAQ,GAAA,8CFiBGQ,IACA,SAAUrB,EAAQC,EAASC,GGpGjC,GAAAoB,GAAApB,EAAA,GAEA,KAEAA,EAAA,MAEA,KAEA,KAEA,KAGAF,GAAAC,QAAAqB,EAAArB","file":"static/js/410.04da542a07ec6ebbf2d5.js","sourcesContent":["webpackJsonp([410],{\n\n/***/ 142:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(730);\n\n/***/ }),\n\n/***/ 1626:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_vm._v(\"ethtool命令用于获取以太网卡的配置信息，或者修改这些配置。这个命令比较复杂，功能特别多。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"ethtool [ -a | -c | -g | -i | -d | -k | -r | -S |] ethX\\nethtool [-A] ethX [autoneg on|off] [rx on|off] [tx on|off]\\nethtool [-C] ethX [adaptive-rx on|off] [adaptive-tx on|off] [rx-usecs N] [rx-frames N] [rx-usecs-irq N] [rx-frames-irq N] [tx-usecs N] [tx-frames N] [tx-usecs-irq N] [tx-frames-irq N] [stats-block-usecs N][pkt-rate-low N][rx-usecs-low N] [rx-frames-low N] [tx-usecs-low N] [tx-frames-lowN] [pkt-rate-high N] [rx-usecs-high N] [rx-frames-high N] [tx-usecs-high N] [tx-frames-high N] [sample-interval N]\\nethtool [-G] ethX [rx N] [rx-mini N] [rx-jumbo N] [tx N]\\nethtool [-e] ethX [raw on|off] [offset N] [length N]\\nethtool [-E] ethX [magic N] [offset N] [value N]\\nethtool [-K] ethX [rx on|off] [tx on|off] [sg on|off] [tso on|off]\\nethtool [-p] ethX [N]\\nethtool [-t] ethX [offline|online]\\nethtool [-s] ethX [speed 10|100|1000] [duplex half|full] [autoneg on|off] [port tp|aui|bnc|mii] [phyad N] [xcvr internal|external]\\n[wol p|u|m|b|a|g|s|d...] [sopass xx:yy:zz:aa:bb:cc] [msglvl N]\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-a 查看网卡中 接收模块RX、发送模块TX和Autonegotiate模块的状态：启动on 或 停用off。\\n-A 修改网卡中 接收模块RX、发送模块TX和Autonegotiate模块的状态：启动on 或 停用off。\\n-c display the Coalesce information of the specified ethernet card。\\n-C Change the Coalesce setting of the specified ethernet card。\\n-g Display the rx/tx ring parameter information of the specified ethernet card。\\n-G change the rx/tx ring setting of the specified ethernet card。\\n-i 显示网卡驱动的信息，如驱动的名称、版本等。\\n-d 显示register [dump](#/dump \\\"dump命令\\\")信息, 部分网卡驱动不支持该选项。\\n-e 显示EEPROM dump信息，部分网卡驱动不支持该选项。\\n-E 修改网卡EEPROM byte。\\n-k 显示网卡Offload参数的状态：on 或 off，包括rx-checksumming、tx-checksumming等。\\n-K 修改网卡Offload参数的状态。\\n-p 用于区别不同ethX对应网卡的物理位置，常用的方法是使网卡port上的led不断的闪；N指示了网卡闪的持续时间，以秒为单位。\\n-r 如果auto-negotiation模块的状态为on，则restarts auto-negotiation。\\n-S 显示NIC- and driver-specific 的统计参数，如网卡接收/发送的字节数、接收/发送的广播包个数等。\\n-t 让网卡执行自我检测，有两种模式：offline or online。\\n-s 修改网卡的部分配置，包括网卡速度、单工/全双工模式、mac地址等。\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"数据来源\")]), _vm._v(\" \"), _c('p', [_vm._v(\"Ethtool命令显示的信息来源于网卡驱动层，即TCP/\"), _c('a', {\n    attrs: {\n      \"href\": \"#/ip\",\n      \"title\": \"ip命令\"\n    }\n  }, [_vm._v(\"ip\")]), _vm._v(\"协议的链路层。该命令在Linux内核中实现的逻辑层次为：\")]), _vm._v(\" \"), _c('p', [_vm._v(\"最重要的结构体\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"struct ethtool_ops\")]), _vm._v(\"，该结构体成员为用于显示或修改以太网卡配置的一系列函数指针，见下表中的第二列。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"网卡驱动负责实现（部分）这些函数，并将其封装入\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"ethtool_ops\")]), _vm._v(\"结构体，为网络核心层提供统一的调用接口。因此，不同的网卡驱动会给应用层返回不同的信息。\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"Ethtool命令选项\")]), _vm._v(\"、\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"struct ethtool_ops成员函数\")]), _vm._v(\"、\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"Ethtool命令显示参数的来源\")]), _vm._v(\"，三者间的对应关系如下表所示：\")]), _vm._v(\" \"), _c('table', [_c('tbody', [_c('tr', [_c('th', {\n    staticStyle: {\n      \"width\": \"100px\"\n    }\n  }, [_vm._v(\"命令选项\")]), _vm._v(\" \"), _c('th', [_vm._v(\"struct ethtool_ops成员函数\")]), _vm._v(\" \"), _c('th', [_vm._v(\"Ethtool命令显示参数的来源（以网卡驱动BNX2为例）\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"无 -s\")]), _vm._v(\" \"), _c('td', [_vm._v(\"get_settingsget_wol get_msglevel get_link set_settings set_wol set_msglevel\")]), _vm._v(\" \"), _c('td', [_vm._v(\"从网卡寄存器中获得网卡速度等信息，可配置。\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"-a -A\")]), _vm._v(\" \"), _c('td', [_vm._v(\"get_pauseparam set_pauseparam\")]), _vm._v(\" \"), _c('td', [_vm._v(\"从网卡寄存器中获得Autonegotiate/RX/TX模块的状态：on oroff，可配置。\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"-c -C\")]), _vm._v(\" \"), _c('td', [_vm._v(\"get_coalesceset_coalesce\")]), _vm._v(\" \"), _c('td', [_vm._v(\"从网卡寄存器中获得coalescing参数：TX/RX一个数据包后，推迟发生TX/RX中断的时间(us)/数据包个数。—减小该值可以提高网卡的响应时间。 当rx-usecs&rx-frames同时被设为0时，RX中断停止。 当tx-usecs&tx-frames同时被设为0时，TX中断停止。\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"-g -G\")]), _vm._v(\" \"), _c('td', [_vm._v(\"get_ringparam set_ringparam\")]), _vm._v(\" \"), _c('td', [_vm._v(\"除当前TX/RX ring的值（从网卡寄存器中读取得到，可配置）外，其它为网卡bnx2自己固定的信息。\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"-k -K\")]), _vm._v(\" \"), _c('td', [_vm._v(\"get_rx_csumget_tx_csum get_sg get_tso set_rx_csum set_tx_csum set_sg set_tso\")]), _vm._v(\" \"), _c('td', [_vm._v(\"显示信息从保存该状态的变量中读取得到，没有对应的寄存器。因此，TX/RX校验等模块一直处于on状态，实际上是无法修改的。\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"-i\")]), _vm._v(\" \"), _c('td', [_vm._v(\"get_drvinfo[self_test_count, get_stats_coun,t get_regs_len, get_eeprom_len]\")]), _vm._v(\" \"), _c('td', [_vm._v(\"网卡bnx2自己固定的信息，如：  \\n——————————————————–  \\ndriver: bnx2 version: 1.4.30 firmware-version: 1.8.0.5 bus-[info](#/info \\\"info命令\\\"): 0000:09:00.0  \\n——————————————————–\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"-d\")]), _vm._v(\" \"), _c('td', [_vm._v(\"get_drvinfoget_regs\")]), _vm._v(\" \"), _c('td', [_vm._v(\"不支持，即bnx2中没有实现函数get_regs。\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"-e -E\")]), _vm._v(\" \"), _c('td', [_vm._v(\"get_eepromset_eeprom\")]), _vm._v(\" \"), _c('td', [_vm._v(\"不支持，即bnx2中没有实现函数get_eeprom。\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"-r\")]), _vm._v(\" \"), _c('td', [_vm._v(\"nway_reset\")]), _vm._v(\" \"), _c('td', [_vm._v(\"配置网卡MII_BMCR寄存器，重启Auto negotiation模块。\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"-p\")]), _vm._v(\" \"), _c('td', [_vm._v(\"phys_id\")]), _vm._v(\" \"), _c('td', [_vm._v(\"配置网卡BNX2_EMAC_LED寄存器，实现LED闪功能。\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"-t\")]), _vm._v(\" \"), _c('td', [_vm._v(\"self_test\")]), _vm._v(\" \"), _c('td', [_vm._v(\"通过配置网卡寄存器，逐一测试网卡的硬件模块：registers，memory，loopback，Link [stat](#/stat \\\"stat命令\\\")，interrupt。\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"-S\")]), _vm._v(\" \"), _c('td', [_vm._v(\"get_ethtool_stats\")]), _vm._v(\" \"), _c('td', [_vm._v(\"显示信息来源于网卡驱动中的结构体变量stats_blk。（网卡通过DMA方式，将寄存器BNX2_HC_STATISTICS _ADDR_L和BNX2_HC_STATISTICS_ADDR_H中的数据实时地读取到结构体变量struct statistics_block *stats_blk中。） —显示的数据都是从网卡寄存器中统计得到的，各项的含义需查询网卡（芯片）手册。\")])])])]), _vm._v(\" \"), _c('p', [_vm._v(\"由上可见，ethtool命令用于显示/配置网卡硬件（寄存器）。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('p', [_vm._v(\"查看机器上网卡的速度：百兆还是千兆，请输入：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"ethool eth0\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"操作完毕后，输出信息中\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"Speed:\")]), _vm._v(\"这一项就指示了网卡的速度。停止网卡的发送模块TX，请输入：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"ethtool -A tx off eth0\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"操作完毕后，可输入\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"ethtool -a eth0\")]), _vm._v(\"，查看tx模块是否已被停止。查看网卡eth0采用了何种驱动，请输入：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"ethtool -i eth0\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"操作完毕后，显示 driver: bnx2；version: 1.4.30 等信息。关闭网卡对收到的数据包的校验功能，请输入：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"ethtool -K eth0 rx off\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"操作完毕后，可输入\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"ethtool –k eth0\")]), _vm._v(\"，查看校验功能是否已被停止。如果机器上安装了两块网卡，那么eth0对应着哪块网卡呢？输入：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"ethtool -p eth0 10\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"操作完毕后，看哪块网卡的led灯在闪，eth0就对应着哪块网卡。查看网卡，在接收/发送数据时，有没有出错？请输入：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"ethtool –S eth0\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"将千兆网卡的速度降为百兆，请输入：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"ethtool -s eth0 speed 100   \\n\\n\")])])])\n}]}\n\n/***/ }),\n\n/***/ 730:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(5)(\n  /* script */\n  null,\n  /* template */\n  __webpack_require__(1626),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/410.04da542a07ec6ebbf2d5.js","module.exports = require(\"!!vue-loader!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./ethtool.md\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./command/ethtool.md\n// module id = 142\n// module chunks = 410","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_vm._v(\"ethtool命令用于获取以太网卡的配置信息，或者修改这些配置。这个命令比较复杂，功能特别多。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"ethtool [ -a | -c | -g | -i | -d | -k | -r | -S |] ethX\\nethtool [-A] ethX [autoneg on|off] [rx on|off] [tx on|off]\\nethtool [-C] ethX [adaptive-rx on|off] [adaptive-tx on|off] [rx-usecs N] [rx-frames N] [rx-usecs-irq N] [rx-frames-irq N] [tx-usecs N] [tx-frames N] [tx-usecs-irq N] [tx-frames-irq N] [stats-block-usecs N][pkt-rate-low N][rx-usecs-low N] [rx-frames-low N] [tx-usecs-low N] [tx-frames-lowN] [pkt-rate-high N] [rx-usecs-high N] [rx-frames-high N] [tx-usecs-high N] [tx-frames-high N] [sample-interval N]\\nethtool [-G] ethX [rx N] [rx-mini N] [rx-jumbo N] [tx N]\\nethtool [-e] ethX [raw on|off] [offset N] [length N]\\nethtool [-E] ethX [magic N] [offset N] [value N]\\nethtool [-K] ethX [rx on|off] [tx on|off] [sg on|off] [tso on|off]\\nethtool [-p] ethX [N]\\nethtool [-t] ethX [offline|online]\\nethtool [-s] ethX [speed 10|100|1000] [duplex half|full] [autoneg on|off] [port tp|aui|bnc|mii] [phyad N] [xcvr internal|external]\\n[wol p|u|m|b|a|g|s|d...] [sopass xx:yy:zz:aa:bb:cc] [msglvl N]\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-a 查看网卡中 接收模块RX、发送模块TX和Autonegotiate模块的状态：启动on 或 停用off。\\n-A 修改网卡中 接收模块RX、发送模块TX和Autonegotiate模块的状态：启动on 或 停用off。\\n-c display the Coalesce information of the specified ethernet card。\\n-C Change the Coalesce setting of the specified ethernet card。\\n-g Display the rx/tx ring parameter information of the specified ethernet card。\\n-G change the rx/tx ring setting of the specified ethernet card。\\n-i 显示网卡驱动的信息，如驱动的名称、版本等。\\n-d 显示register [dump](#/dump \\\"dump命令\\\")信息, 部分网卡驱动不支持该选项。\\n-e 显示EEPROM dump信息，部分网卡驱动不支持该选项。\\n-E 修改网卡EEPROM byte。\\n-k 显示网卡Offload参数的状态：on 或 off，包括rx-checksumming、tx-checksumming等。\\n-K 修改网卡Offload参数的状态。\\n-p 用于区别不同ethX对应网卡的物理位置，常用的方法是使网卡port上的led不断的闪；N指示了网卡闪的持续时间，以秒为单位。\\n-r 如果auto-negotiation模块的状态为on，则restarts auto-negotiation。\\n-S 显示NIC- and driver-specific 的统计参数，如网卡接收/发送的字节数、接收/发送的广播包个数等。\\n-t 让网卡执行自我检测，有两种模式：offline or online。\\n-s 修改网卡的部分配置，包括网卡速度、单工/全双工模式、mac地址等。\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"数据来源\")]), _vm._v(\" \"), _c('p', [_vm._v(\"Ethtool命令显示的信息来源于网卡驱动层，即TCP/\"), _c('a', {\n    attrs: {\n      \"href\": \"#/ip\",\n      \"title\": \"ip命令\"\n    }\n  }, [_vm._v(\"ip\")]), _vm._v(\"协议的链路层。该命令在Linux内核中实现的逻辑层次为：\")]), _vm._v(\" \"), _c('p', [_vm._v(\"最重要的结构体\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"struct ethtool_ops\")]), _vm._v(\"，该结构体成员为用于显示或修改以太网卡配置的一系列函数指针，见下表中的第二列。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"网卡驱动负责实现（部分）这些函数，并将其封装入\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"ethtool_ops\")]), _vm._v(\"结构体，为网络核心层提供统一的调用接口。因此，不同的网卡驱动会给应用层返回不同的信息。\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"Ethtool命令选项\")]), _vm._v(\"、\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"struct ethtool_ops成员函数\")]), _vm._v(\"、\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"Ethtool命令显示参数的来源\")]), _vm._v(\"，三者间的对应关系如下表所示：\")]), _vm._v(\" \"), _c('table', [_c('tbody', [_c('tr', [_c('th', {\n    staticStyle: {\n      \"width\": \"100px\"\n    }\n  }, [_vm._v(\"命令选项\")]), _vm._v(\" \"), _c('th', [_vm._v(\"struct ethtool_ops成员函数\")]), _vm._v(\" \"), _c('th', [_vm._v(\"Ethtool命令显示参数的来源（以网卡驱动BNX2为例）\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"无 -s\")]), _vm._v(\" \"), _c('td', [_vm._v(\"get_settingsget_wol get_msglevel get_link set_settings set_wol set_msglevel\")]), _vm._v(\" \"), _c('td', [_vm._v(\"从网卡寄存器中获得网卡速度等信息，可配置。\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"-a -A\")]), _vm._v(\" \"), _c('td', [_vm._v(\"get_pauseparam set_pauseparam\")]), _vm._v(\" \"), _c('td', [_vm._v(\"从网卡寄存器中获得Autonegotiate/RX/TX模块的状态：on oroff，可配置。\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"-c -C\")]), _vm._v(\" \"), _c('td', [_vm._v(\"get_coalesceset_coalesce\")]), _vm._v(\" \"), _c('td', [_vm._v(\"从网卡寄存器中获得coalescing参数：TX/RX一个数据包后，推迟发生TX/RX中断的时间(us)/数据包个数。—减小该值可以提高网卡的响应时间。 当rx-usecs&rx-frames同时被设为0时，RX中断停止。 当tx-usecs&tx-frames同时被设为0时，TX中断停止。\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"-g -G\")]), _vm._v(\" \"), _c('td', [_vm._v(\"get_ringparam set_ringparam\")]), _vm._v(\" \"), _c('td', [_vm._v(\"除当前TX/RX ring的值（从网卡寄存器中读取得到，可配置）外，其它为网卡bnx2自己固定的信息。\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"-k -K\")]), _vm._v(\" \"), _c('td', [_vm._v(\"get_rx_csumget_tx_csum get_sg get_tso set_rx_csum set_tx_csum set_sg set_tso\")]), _vm._v(\" \"), _c('td', [_vm._v(\"显示信息从保存该状态的变量中读取得到，没有对应的寄存器。因此，TX/RX校验等模块一直处于on状态，实际上是无法修改的。\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"-i\")]), _vm._v(\" \"), _c('td', [_vm._v(\"get_drvinfo[self_test_count, get_stats_coun,t get_regs_len, get_eeprom_len]\")]), _vm._v(\" \"), _c('td', [_vm._v(\"网卡bnx2自己固定的信息，如：  \\n——————————————————–  \\ndriver: bnx2 version: 1.4.30 firmware-version: 1.8.0.5 bus-[info](#/info \\\"info命令\\\"): 0000:09:00.0  \\n——————————————————–\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"-d\")]), _vm._v(\" \"), _c('td', [_vm._v(\"get_drvinfoget_regs\")]), _vm._v(\" \"), _c('td', [_vm._v(\"不支持，即bnx2中没有实现函数get_regs。\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"-e -E\")]), _vm._v(\" \"), _c('td', [_vm._v(\"get_eepromset_eeprom\")]), _vm._v(\" \"), _c('td', [_vm._v(\"不支持，即bnx2中没有实现函数get_eeprom。\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"-r\")]), _vm._v(\" \"), _c('td', [_vm._v(\"nway_reset\")]), _vm._v(\" \"), _c('td', [_vm._v(\"配置网卡MII_BMCR寄存器，重启Auto negotiation模块。\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"-p\")]), _vm._v(\" \"), _c('td', [_vm._v(\"phys_id\")]), _vm._v(\" \"), _c('td', [_vm._v(\"配置网卡BNX2_EMAC_LED寄存器，实现LED闪功能。\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"-t\")]), _vm._v(\" \"), _c('td', [_vm._v(\"self_test\")]), _vm._v(\" \"), _c('td', [_vm._v(\"通过配置网卡寄存器，逐一测试网卡的硬件模块：registers，memory，loopback，Link [stat](#/stat \\\"stat命令\\\")，interrupt。\")])]), _vm._v(\" \"), _c('tr', [_c('td', [_vm._v(\"-S\")]), _vm._v(\" \"), _c('td', [_vm._v(\"get_ethtool_stats\")]), _vm._v(\" \"), _c('td', [_vm._v(\"显示信息来源于网卡驱动中的结构体变量stats_blk。（网卡通过DMA方式，将寄存器BNX2_HC_STATISTICS _ADDR_L和BNX2_HC_STATISTICS_ADDR_H中的数据实时地读取到结构体变量struct statistics_block *stats_blk中。） —显示的数据都是从网卡寄存器中统计得到的，各项的含义需查询网卡（芯片）手册。\")])])])]), _vm._v(\" \"), _c('p', [_vm._v(\"由上可见，ethtool命令用于显示/配置网卡硬件（寄存器）。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('p', [_vm._v(\"查看机器上网卡的速度：百兆还是千兆，请输入：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"ethool eth0\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"操作完毕后，输出信息中\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"Speed:\")]), _vm._v(\"这一项就指示了网卡的速度。停止网卡的发送模块TX，请输入：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"ethtool -A tx off eth0\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"操作完毕后，可输入\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"ethtool -a eth0\")]), _vm._v(\"，查看tx模块是否已被停止。查看网卡eth0采用了何种驱动，请输入：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"ethtool -i eth0\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"操作完毕后，显示 driver: bnx2；version: 1.4.30 等信息。关闭网卡对收到的数据包的校验功能，请输入：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"ethtool -K eth0 rx off\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"操作完毕后，可输入\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"ethtool –k eth0\")]), _vm._v(\"，查看校验功能是否已被停止。如果机器上安装了两块网卡，那么eth0对应着哪块网卡呢？输入：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"ethtool -p eth0 10\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"操作完毕后，看哪块网卡的led灯在闪，eth0就对应着哪块网卡。查看网卡，在接收/发送数据时，有没有出错？请输入：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"ethtool –S eth0\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"将千兆网卡的速度降为百兆，请输入：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"ethtool -s eth0 speed 100   \\n\\n\")])])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-c76b562a\",\"hasScoped\":false}!./~/vue-loader/lib/selector.js?type=template&index=0!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/ethtool.md\n// module id = 1626\n// module chunks = 410","var Component = require(\"!../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  null,\n  /* template */\n  require(\"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-c76b562a\\\",\\\"hasScoped\\\":false}!../node_modules/vue-loader/lib/selector?type=template&index=0!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./ethtool.md\"),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/ethtool.md\n// module id = 730\n// module chunks = 410"],"sourceRoot":""}