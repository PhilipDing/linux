{"version":3,"sources":["webpack:///static/js/70.f482e47e384c06667b5f.js","webpack:///./command/umount.md?0d4b","webpack:///./command/umount.md?3aff","webpack:///./command/umount.md"],"names":["webpackJsonp","1075","module","exports","__webpack_require__","Component","1598","render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","_v","pre","attrs","v-pre","href","title","486"],"mappings":"AAAAA,cAAc,KAERC,KACA,SAAUC,EAAQC,EAASC,GCHjC,GAAAC,GAAAD,EAAA,GAEA,KAEAA,EAAA,MAEA,KAEA,KAEA,KAGAF,GAAAC,QAAAE,EAAAF,SDUMG,KACA,SAAUJ,EAAQC,GExBxBD,EAAAC,SAAgBI,OAAA,WAAmB,GAAAC,GAAAC,KAAaC,EAAAF,EAAAG,cAA0BH,GAAAI,MAAAC,EAC1E,OAAAL,GAAAM,GAAA,IACCC,iBAAA,WAA+B,GAAAP,GAAAC,KAAaC,EAAAF,EAAAG,eAA0BE,EAAAL,EAAAI,MAAAC,IAAAH,CACvE,OAAAG,GAAA,WAAAA,EAAA,KAAAA,EAAA,UAAAL,EAAAQ,GAAA,cAAAR,EAAAQ,GAAA,kFAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACAI,KAAA,IACGJ,EAAA,QACHK,OACAC,QAAA,MAEGX,EAAAQ,GAAA,wBAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHI,KAAA,IACGJ,EAAA,QACHK,OACAC,QAAA,MAEGX,EAAAQ,GAAA,gKAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,iCAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,uCAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,aAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHI,KAAA,IACGJ,EAAA,QACHK,OACAC,QAAA,MAEGX,EAAAQ,GAAA,iDAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,aAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHI,KAAA,IACGJ,EAAA,QACHK,OACAC,QAAA,MAEGX,EAAAQ,GAAA,6DAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,wDAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHI,KAAA,IACGJ,EAAA,QACHK,OACAC,QAAA,MAEGX,EAAAQ,GAAA,6GAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,+BAAAH,EAAA,KACHK,OACAE,KAAA,SACAC,MAAA,YAEGb,EAAAQ,GAAA,UAAAR,EAAAQ,GAAA,8BAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHI,KAAA,IACGJ,EAAA,QACHK,OACAC,QAAA,MAEGX,EAAAQ,GAAA,2IAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,6DAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,4BAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHI,KAAA,IACGJ,EAAA,QACHK,OACAC,QAAA,MAEGX,EAAAQ,GAAA,6CAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,sFAAAH,EAAA,KACHK,OACAE,KAAA,OACAC,MAAA,UAEGb,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,YAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHI,KAAA,IACGJ,EAAA,QACHK,OACAC,QAAA,MAEGX,EAAAQ,GAAA,8CF+BGM,IACA,SAAUpB,EAAQC,EAASC,GG7FjCF,EAAAC,QAAAC,EAAA","file":"static/js/70.f482e47e384c06667b5f.js","sourcesContent":["webpackJsonp([70],{\n\n/***/ 1075:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(5)(\n  /* script */\n  null,\n  /* template */\n  __webpack_require__(1598),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 1598:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"umount命令\")]), _vm._v(\"用于卸载已经加载的文件系统。利用设备名或挂载点都能umount文件系统，不过最好还是通过挂载点卸载，以免使用绑定挂载（一个设备，多个挂载点）时产生混乱。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"umount(选项)(参数)\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-a：卸除/etc/mtab中记录的所有文件系统；\\n-h：显示帮助；\\n-n：卸除时不要将信息存入/etc/mtab文件中；\\n-r：若无法成功卸除，则尝试以只读的方式重新挂入文件系统；\\n-t<文件系统类型>：仅卸除选项中所指定的文件系统；\\n-v：执行时显示详细的信息；\\n-V：显示版本信息。\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"参数\")]), _vm._v(\" \"), _c('p', [_vm._v(\"文件系统：指定要卸载的文件系统或者其对应的设备文件名。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('p', [_vm._v(\"下面两条命令分别通过设备名和挂载点卸载文件系统，同时输出详细信息：\")]), _vm._v(\" \"), _c('p', [_vm._v(\"通过设备名卸载\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"umount -v /dev/sda1\\n/dev/sda1 umounted\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"通过挂载点卸载\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"umount -v /mnt/mymount/\\n/tmp/diskboot.img umounted\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"如果设备正忙，卸载即告失败。卸载失败的常见原因是，某个打开的shell当前目录为挂载点里的某个目录：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"umount -v /mnt/mymount/\\numount: /mnt/mymount: device is busy\\numount: /mnt/mymount: device is busy\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"有时，导致设备忙的原因并不好找。碰到这种情况时，可以用\"), _c('a', {\n    attrs: {\n      \"href\": \"#/lsof\",\n      \"title\": \"lsof命令\"\n    }\n  }, [_vm._v(\"lsof\")]), _vm._v(\"列出已打开文件，然后搜索列表查找待卸载的挂载点：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"lsof | [grep](#/grep \\\"grep命令\\\") mymount         查找mymount分区里打开的文件\\nbash   9341  francois  cwd   DIR   8,1   1024    2 /mnt/mymount\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"从上面的输出可知，mymount分区无法卸载的原因在于，francois运行的PID为9341的bash进程。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"对付系统文件正忙的另一种方法是执行延迟卸载：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"umount -vl /mnt/mymount/     执行延迟卸载\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"延迟卸载（lazy unmount）会立即卸载目录树里的文件系统，等到设备不再繁忙时才清理所有相关资源。卸载可移动存储介质还可以用eject命令。下面这条命令会卸载\"), _c('a', {\n    attrs: {\n      \"href\": \"#/cd\",\n      \"title\": \"cd命令\"\n    }\n  }, [_vm._v(\"cd\")]), _vm._v(\"并弹出CD：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"eject /dev/cdrom      卸载并弹出CD \\n\")])])])\n}]}\n\n/***/ }),\n\n/***/ 486:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(1075);\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/70.f482e47e384c06667b5f.js","var Component = require(\"!../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  null,\n  /* template */\n  require(\"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-b5748fa8\\\",\\\"hasScoped\\\":false}!../node_modules/vue-loader/lib/selector?type=template&index=0!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./umount.md\"),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/umount.md\n// module id = 1075\n// module chunks = 70","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"umount命令\")]), _vm._v(\"用于卸载已经加载的文件系统。利用设备名或挂载点都能umount文件系统，不过最好还是通过挂载点卸载，以免使用绑定挂载（一个设备，多个挂载点）时产生混乱。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"umount(选项)(参数)\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-a：卸除/etc/mtab中记录的所有文件系统；\\n-h：显示帮助；\\n-n：卸除时不要将信息存入/etc/mtab文件中；\\n-r：若无法成功卸除，则尝试以只读的方式重新挂入文件系统；\\n-t<文件系统类型>：仅卸除选项中所指定的文件系统；\\n-v：执行时显示详细的信息；\\n-V：显示版本信息。\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"参数\")]), _vm._v(\" \"), _c('p', [_vm._v(\"文件系统：指定要卸载的文件系统或者其对应的设备文件名。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('p', [_vm._v(\"下面两条命令分别通过设备名和挂载点卸载文件系统，同时输出详细信息：\")]), _vm._v(\" \"), _c('p', [_vm._v(\"通过设备名卸载\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"umount -v /dev/sda1\\n/dev/sda1 umounted\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"通过挂载点卸载\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"umount -v /mnt/mymount/\\n/tmp/diskboot.img umounted\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"如果设备正忙，卸载即告失败。卸载失败的常见原因是，某个打开的shell当前目录为挂载点里的某个目录：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"umount -v /mnt/mymount/\\numount: /mnt/mymount: device is busy\\numount: /mnt/mymount: device is busy\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"有时，导致设备忙的原因并不好找。碰到这种情况时，可以用\"), _c('a', {\n    attrs: {\n      \"href\": \"#/lsof\",\n      \"title\": \"lsof命令\"\n    }\n  }, [_vm._v(\"lsof\")]), _vm._v(\"列出已打开文件，然后搜索列表查找待卸载的挂载点：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"lsof | [grep](#/grep \\\"grep命令\\\") mymount         查找mymount分区里打开的文件\\nbash   9341  francois  cwd   DIR   8,1   1024    2 /mnt/mymount\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"从上面的输出可知，mymount分区无法卸载的原因在于，francois运行的PID为9341的bash进程。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"对付系统文件正忙的另一种方法是执行延迟卸载：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"umount -vl /mnt/mymount/     执行延迟卸载\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"延迟卸载（lazy unmount）会立即卸载目录树里的文件系统，等到设备不再繁忙时才清理所有相关资源。卸载可移动存储介质还可以用eject命令。下面这条命令会卸载\"), _c('a', {\n    attrs: {\n      \"href\": \"#/cd\",\n      \"title\": \"cd命令\"\n    }\n  }, [_vm._v(\"cd\")]), _vm._v(\"并弹出CD：\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"eject /dev/cdrom      卸载并弹出CD \\n\")])])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-b5748fa8\",\"hasScoped\":false}!./~/vue-loader/lib/selector.js?type=template&index=0!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/umount.md\n// module id = 1598\n// module chunks = 70","module.exports = require(\"!!vue-loader!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./umount.md\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./command/umount.md\n// module id = 486\n// module chunks = 70"],"sourceRoot":""}