{"version":3,"sources":["webpack:///static/js/219.89d7e451e3f6072dd1b4.js","webpack:///./command/parted.md?a1fc","webpack:///./command/parted.md","webpack:///./command/parted.md?c5c4"],"names":["webpackJsonp","1558","module","exports","render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","_v","attrs","href","title","pre","v-pre","335","__webpack_require__","924","Component"],"mappings":"AAAAA,cAAc,MAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAgBC,OAAA,WAAmB,GAAAC,GAAAC,KAAaC,EAAAF,EAAAG,cAA0BH,GAAAI,MAAAC,EAC1E,OAAAL,GAAAM,GAAA,IACCC,iBAAA,WAA+B,GAAAP,GAAAC,KAAaC,EAAAF,EAAAG,eAA0BE,EAAAL,EAAAI,MAAAC,IAAAH,CACvE,OAAAG,GAAA,WAAAA,EAAA,KAAAA,EAAA,UAAAL,EAAAQ,GAAA,cAAAR,EAAAQ,GAAA,oCAAAH,EAAA,KACAI,OACAC,KAAA,UACAC,MAAA,aAEGX,EAAAQ,GAAA,WAAAR,EAAAQ,GAAA,gJAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHO,KAAA,IACGP,EAAA,QACHI,OACAI,QAAA,MAEGb,EAAAQ,GAAA,wBAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHO,KAAA,IACGP,EAAA,QACHI,OACAI,QAAA,MAEGb,EAAAQ,GAAA,0DAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAA,EAAA,MAAAL,EAAAQ,GAAA,0BAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,wBAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,oFAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,wDAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,gBAAAR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAA,EAAA,MAAAL,EAAAQ,GAAA,mBAAAR,EAAAQ,GAAA,KAAAH,EAAA,MAAAL,EAAAQ,GAAA,gCAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHO,KAAA,IACGP,EAAA,QACHI,OACAI,QAAA,MAEGb,EAAAQ,GAAA,ioBAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHO,KAAA,IACGP,EAAA,QACHI,OACAI,QAAA,MAEGb,EAAAQ,GAAA,qzBAA+SR,EAAAQ,GAAA,KAAAH,EAAA,KAAAL,EAAAQ,GAAA,eAAAH,EAAA,QAClTO,KAAA,IACGZ,EAAAQ,GAAA,gBAAAR,EAAAQ,GAAA,OAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHO,KAAA,IACGP,EAAA,QACHI,OACAI,QAAA,MAEGb,EAAAQ,GAAA,+/BAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHO,KAAA,IACGP,EAAA,QACHI,OACAI,QAAA,MAEGb,EAAAQ,GAAA,o1BAAAR,EAAAQ,GAAA,KAAAH,EAAA,OACHO,KAAA,IACGP,EAAA,QACHI,OACAI,QAAA,MAEGb,EAAAQ,GAAA,yYDUGM,IACA,SAAUjB,EAAQC,EAASiB,GE/DjClB,EAAAC,QAAAiB,EAAA,MFqEMC,IACA,SAAUnB,EAAQC,EAASiB,GGtEjC,GAAAE,GAAAF,EAAA,GAEA,KAEAA,EAAA,MAEA,KAEA,KAEA,KAGAlB,GAAAC,QAAAmB,EAAAnB","file":"static/js/219.89d7e451e3f6072dd1b4.js","sourcesContent":["webpackJsonp([219],{\n\n/***/ 1558:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"parted命令\")]), _vm._v(\"是由GNU组织开发的一款功能强大的磁盘分区和分区大小调整工具，与\"), _c('a', {\n    attrs: {\n      \"href\": \"#/fdisk\",\n      \"title\": \"fdisk命令\"\n    }\n  }, [_vm._v(\"fdisk\")]), _vm._v(\"不同，它支持调整分区的大小。作为一种设计用于Linux的工具，它没有构建成处理与fdisk关联的多种分区类型，但是，它可以处理最常见的分区格式，包括：ext2、ext3、fat16、fat32、NTFS、ReiserFS、JFS、XFS、UFS、HFS以及Linux交换分区。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"parted(选项)(参数)\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-h：显示帮助信息；\\n-i：交互式模式；\\n-s：脚本模式，不提示用户；\\n-v：显示版本号。\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"参数\")]), _vm._v(\" \"), _c('ul', [_c('li', [_vm._v(\"设备：指定要分区的硬盘所对应的设备文件；\")]), _vm._v(\" \"), _c('li', [_vm._v(\"命令：要执行的parted命令。\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('p', [_vm._v(\"从串行技术出现以来，越来越多用户选择使用大容量的SATA硬盘创建磁盘阵列；特别是MD1000/MD3000，很轻易就突破2T的LUN，故在此给大家一些指引。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"红帽企业 Linux 4 Update 4供对大于 2 terabytes（TB）的磁盘设备的支持。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"请参考以下操作步骤：\")]), _vm._v(\" \"), _c('p', [_vm._v(\"注：\")]), _vm._v(\" \"), _c('ul', [_c('li', [_vm._v(\"绿色代表你需要使用的命令。\")]), _vm._v(\" \"), _c('li', [_vm._v(\"红色代表你需要注意到的输出信息，在后续需要使用。\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost ~]# fdisk -l\\nDisk /dev/sda: 35.8 GB, 35862976512 bytes\\n255 heads, 63 sectors/track, 4360 cylinders\\nUnits = cylinders of 16065 * 512 = 8225280 bytes\\n   Device Boot      Start         End      Blocks   [id](#/id \\\"id命令\\\")  System\\n/dev/sda1   *           1          13      104391   83  Linux\\n/dev/sda2              14         144     1052257+  82  Linux swap\\n/dev/sda3             145        4360    33865020   83  Linux\\nDisk /dev/sdb: 2147 MB, 2147483648 bytes\\n255 heads, 63 sectors/track, 261 cylinders\\nUnits = cylinders of 16065 * 512 = 8225280 bytes\\nDisk /dev/sdb doesn't contain a valid partition table\\n\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost ~]# parted /dev/sdb\\nGNU Parted Copyright (C) 1998 - 2004 [free](#/free \\\"free命令\\\") Software Foundation, Inc.\\nThis program is free software, covered by the GNU General Public License.\\nThis program is distributed in the hope that it will be useful, but WITHOUT ANY\\nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\\nPARTICULAR PURPOSE.  See the GNU General Public License for [more](#/more \\\"more命令\\\") details.\\n使用/dev/sdb\\n(parted)mklabel gpt\\n(parted)print\\n/dev/sdb的磁盘几何结构：0.000-2048.000兆字节\\n磁盘标签类型：gpt\\nMinor   起始点       终止点 文件系统   名称                 标志\\n(parted)mkpart primary 0 2048  <-----上面print显示的数字\\n(parted)print\\n/dev/sdb的磁盘几何结构：0.000-2048.000兆字节\\n磁盘标签类型：gpt\\nMinor   起始点       终止点 文件系统   名称                 标志\\n1          0.017   2047.983\\n(parted)quit\\n\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"如果必要，不要忘记更新\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"/etc/fstab\")]), _vm._v(\"。\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost ~]# fdisk -l\\nDisk /dev/sda: 35.8 GB, 35862976512 bytes\\n255 heads, 63 sectors/track, 4360 cylinders\\nUnits = cylinders of 16065 * 512 = 8225280 bytes\\n   Device Boot      Start         End      Blocks   Id  System\\n/dev/sda1   *           1          13      104391   83  Linux\\n/dev/sda2              14         144     1052257+  82  Linux swap\\n/dev/sda3             145        4360    33865020   83  Linux\\nWARNING: GPT (GUID Partition Table) detected on '/dev/sdb'! The util fdisk doesn't support GPT. Use GNU Parted.\\n\\nDisk /dev/sdb: 2147 MB, 2147483648 bytes\\n255 heads, 63 sectors/track, 261 cylinders\\nUnits = cylinders of 16065 * 512 = 8225280 bytes\\n   Device Boot      Start         End      Blocks   Id  System\\n/dev/sdb1               1         262     2097151+  ee  EFI GPT\\nPartition 1 has different physical/logical beginnings (non-Linux?):\\n     phys=(0, 0, 1) logical=(0,0, 2)\\nPartition 1 has different physical/logical endings:\\n     phys=(1023, 254, 63) logical=(261, 21, 16)\\n\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost ~]# [mkfs](#/mkfs \\\"mkfs命令\\\").ext3 /dev/sdb1\\n[mke2fs](#/mke2fs \\\"mke2fs命令\\\") 1.35 (28-Feb-2004)\\nFilesystem label=\\nOS [type](#/type \\\"type命令\\\"): Linux\\nBlock size=4096 (log=2)\\nFragment size=4096 (log=2)\\n262144 inodes, 524279 blocks\\n26213 blocks (5.00%) reserved for the super user\\nFirst data block=0\\nMaximum filesystem blocks=536870912\\n16 block [groups](#/groups \\\"groups命令\\\")\\n32768 blocks per group, 32768 fragments per group\\n16384 inodes per group\\nSuperblock backups stored on blocks:\\n        32768, 98304, 163840, 229376, 294912\\nWriting inode tables: done\\nCreating journal (8192 blocks): done\\nWriting superblocks and filesystem accounting information: done\\nThis filesystem will be automatically checked every 28 mounts or\\n180 days, whichever comes first.  Use [tune2fs](#/tune2fs \\\"tune2fs命令\\\") -c or -i to override.\\n\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost ~]# [mount](#/mount \\\"mount命令\\\") /dev/sdb1 /mnt\\n[root@localhost ~]# [df](#/df \\\"df命令\\\") -h\\nFilesystem            容量  已用 可用 已用% 挂载点\\n/dev/sda3              <?xml:namespace prefix = st1 />32G  2.6G   28G   9% /\\n/dev/sda1              99M   12M   82M  13% /boot\\nnone                  252M     0  252M   0% /dev/shm\\n/dev/sdb1             2.0G   36M  1.9G   2% /mnt\\n\")])])])\n}]}\n\n/***/ }),\n\n/***/ 335:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(924);\n\n/***/ }),\n\n/***/ 924:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(5)(\n  /* script */\n  null,\n  /* template */\n  __webpack_require__(1558),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/219.89d7e451e3f6072dd1b4.js","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('section', [_c('p', [_c('strong', [_vm._v(\"parted命令\")]), _vm._v(\"是由GNU组织开发的一款功能强大的磁盘分区和分区大小调整工具，与\"), _c('a', {\n    attrs: {\n      \"href\": \"#/fdisk\",\n      \"title\": \"fdisk命令\"\n    }\n  }, [_vm._v(\"fdisk\")]), _vm._v(\"不同，它支持调整分区的大小。作为一种设计用于Linux的工具，它没有构建成处理与fdisk关联的多种分区类型，但是，它可以处理最常见的分区格式，包括：ext2、ext3、fat16、fat32、NTFS、ReiserFS、JFS、XFS、UFS、HFS以及Linux交换分区。\")]), _vm._v(\" \"), _c('h3', [_vm._v(\"语法\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"parted(选项)(参数)\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"选项\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"-h：显示帮助信息；\\n-i：交互式模式；\\n-s：脚本模式，不提示用户；\\n-v：显示版本号。\\n\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"参数\")]), _vm._v(\" \"), _c('ul', [_c('li', [_vm._v(\"设备：指定要分区的硬盘所对应的设备文件；\")]), _vm._v(\" \"), _c('li', [_vm._v(\"命令：要执行的parted命令。\")])]), _vm._v(\" \"), _c('h3', [_vm._v(\"实例\")]), _vm._v(\" \"), _c('p', [_vm._v(\"从串行技术出现以来，越来越多用户选择使用大容量的SATA硬盘创建磁盘阵列；特别是MD1000/MD3000，很轻易就突破2T的LUN，故在此给大家一些指引。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"红帽企业 Linux 4 Update 4供对大于 2 terabytes（TB）的磁盘设备的支持。\")]), _vm._v(\" \"), _c('p', [_vm._v(\"请参考以下操作步骤：\")]), _vm._v(\" \"), _c('p', [_vm._v(\"注：\")]), _vm._v(\" \"), _c('ul', [_c('li', [_vm._v(\"绿色代表你需要使用的命令。\")]), _vm._v(\" \"), _c('li', [_vm._v(\"红色代表你需要注意到的输出信息，在后续需要使用。\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost ~]# fdisk -l\\nDisk /dev/sda: 35.8 GB, 35862976512 bytes\\n255 heads, 63 sectors/track, 4360 cylinders\\nUnits = cylinders of 16065 * 512 = 8225280 bytes\\n   Device Boot      Start         End      Blocks   [id](#/id \\\"id命令\\\")  System\\n/dev/sda1   *           1          13      104391   83  Linux\\n/dev/sda2              14         144     1052257+  82  Linux swap\\n/dev/sda3             145        4360    33865020   83  Linux\\nDisk /dev/sdb: 2147 MB, 2147483648 bytes\\n255 heads, 63 sectors/track, 261 cylinders\\nUnits = cylinders of 16065 * 512 = 8225280 bytes\\nDisk /dev/sdb doesn't contain a valid partition table\\n\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost ~]# parted /dev/sdb\\nGNU Parted Copyright (C) 1998 - 2004 [free](#/free \\\"free命令\\\") Software Foundation, Inc.\\nThis program is free software, covered by the GNU General Public License.\\nThis program is distributed in the hope that it will be useful, but WITHOUT ANY\\nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\\nPARTICULAR PURPOSE.  See the GNU General Public License for [more](#/more \\\"more命令\\\") details.\\n使用/dev/sdb\\n(parted)mklabel gpt\\n(parted)print\\n/dev/sdb的磁盘几何结构：0.000-2048.000兆字节\\n磁盘标签类型：gpt\\nMinor   起始点       终止点 文件系统   名称                 标志\\n(parted)mkpart primary 0 2048  <-----上面print显示的数字\\n(parted)print\\n/dev/sdb的磁盘几何结构：0.000-2048.000兆字节\\n磁盘标签类型：gpt\\nMinor   起始点       终止点 文件系统   名称                 标志\\n1          0.017   2047.983\\n(parted)quit\\n\\n\")])]), _vm._v(\" \"), _c('p', [_vm._v(\"如果必要，不要忘记更新\"), _c('code', {\n    pre: true\n  }, [_vm._v(\"/etc/fstab\")]), _vm._v(\"。\")]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost ~]# fdisk -l\\nDisk /dev/sda: 35.8 GB, 35862976512 bytes\\n255 heads, 63 sectors/track, 4360 cylinders\\nUnits = cylinders of 16065 * 512 = 8225280 bytes\\n   Device Boot      Start         End      Blocks   Id  System\\n/dev/sda1   *           1          13      104391   83  Linux\\n/dev/sda2              14         144     1052257+  82  Linux swap\\n/dev/sda3             145        4360    33865020   83  Linux\\nWARNING: GPT (GUID Partition Table) detected on '/dev/sdb'! The util fdisk doesn't support GPT. Use GNU Parted.\\n\\nDisk /dev/sdb: 2147 MB, 2147483648 bytes\\n255 heads, 63 sectors/track, 261 cylinders\\nUnits = cylinders of 16065 * 512 = 8225280 bytes\\n   Device Boot      Start         End      Blocks   Id  System\\n/dev/sdb1               1         262     2097151+  ee  EFI GPT\\nPartition 1 has different physical/logical beginnings (non-Linux?):\\n     phys=(0, 0, 1) logical=(0,0, 2)\\nPartition 1 has different physical/logical endings:\\n     phys=(1023, 254, 63) logical=(261, 21, 16)\\n\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost ~]# [mkfs](#/mkfs \\\"mkfs命令\\\").ext3 /dev/sdb1\\n[mke2fs](#/mke2fs \\\"mke2fs命令\\\") 1.35 (28-Feb-2004)\\nFilesystem label=\\nOS [type](#/type \\\"type命令\\\"): Linux\\nBlock size=4096 (log=2)\\nFragment size=4096 (log=2)\\n262144 inodes, 524279 blocks\\n26213 blocks (5.00%) reserved for the super user\\nFirst data block=0\\nMaximum filesystem blocks=536870912\\n16 block [groups](#/groups \\\"groups命令\\\")\\n32768 blocks per group, 32768 fragments per group\\n16384 inodes per group\\nSuperblock backups stored on blocks:\\n        32768, 98304, 163840, 229376, 294912\\nWriting inode tables: done\\nCreating journal (8192 blocks): done\\nWriting superblocks and filesystem accounting information: done\\nThis filesystem will be automatically checked every 28 mounts or\\n180 days, whichever comes first.  Use [tune2fs](#/tune2fs \\\"tune2fs命令\\\") -c or -i to override.\\n\")])]), _vm._v(\" \"), _c('pre', {\n    pre: true\n  }, [_c('code', {\n    attrs: {\n      \"v-pre\": \"\"\n    }\n  }, [_vm._v(\"[root@localhost ~]# [mount](#/mount \\\"mount命令\\\") /dev/sdb1 /mnt\\n[root@localhost ~]# [df](#/df \\\"df命令\\\") -h\\nFilesystem            容量  已用 可用 已用% 挂载点\\n/dev/sda3              <?xml:namespace prefix = st1 />32G  2.6G   28G   9% /\\n/dev/sda1              99M   12M   82M  13% /boot\\nnone                  252M     0  252M   0% /dev/shm\\n/dev/sdb1             2.0G   36M  1.9G   2% /mnt\\n\")])])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-7dd9325e\",\"hasScoped\":false}!./~/vue-loader/lib/selector.js?type=template&index=0!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/parted.md\n// module id = 1558\n// module chunks = 219","module.exports = require(\"!!vue-loader!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./parted.md\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./command/parted.md\n// module id = 335\n// module chunks = 219","var Component = require(\"!../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  null,\n  /* template */\n  require(\"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-7dd9325e\\\",\\\"hasScoped\\\":false}!../node_modules/vue-loader/lib/selector?type=template&index=0!../node_modules/vue-markdown-loader/lib/markdown-compiler.js?raw!./parted.md\"),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader!./~/vue-markdown-loader/lib/markdown-compiler.js?raw!./command/parted.md\n// module id = 924\n// module chunks = 219"],"sourceRoot":""}